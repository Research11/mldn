CREATE DATABASE  IF NOT EXISTS `c8report` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `c8report`;
-- MySQL dump 10.13  Distrib 5.6.19, for Win64 (x86_64)
--
-- Host: 127.0.0.1    Database: c8report
-- ------------------------------------------------------
-- Server version	5.6.21-enterprise-commercial-advanced-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `crm_phone_record_bak`
--

DROP TABLE IF EXISTS `crm_phone_record_bak`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `crm_phone_record_bak` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `WorkOrderNo` varchar(15) DEFAULT NULL,
  `WorkerID` varchar(10) DEFAULT NULL,
  `Wroker` varchar(20) DEFAULT NULL,
  `CallerID` varchar(20) DEFAULT NULL,
  `Province` varchar(20) DEFAULT NULL,
  `City` varchar(20) DEFAULT NULL,
  `NewCall` varchar(15) CHARACTER SET latin1 DEFAULT NULL,
  `SRID` varchar(128) CHARACTER SET latin1 DEFAULT NULL,
  `CallTime` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `Unit` varchar(15) CHARACTER SET latin1 DEFAULT NULL,
  `ServiceType` varchar(15) CHARACTER SET latin1 DEFAULT NULL,
  `WorkOrderType` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `C_ID` decimal(12,0) DEFAULT NULL,
  `C_Type` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `C_Contact` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `C_Sex` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `C_Tel` varchar(100) CHARACTER SET latin1 DEFAULT NULL,
  `C_Mobile` varchar(100) CHARACTER SET latin1 DEFAULT NULL,
  `C_Email` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `C_Address` varchar(200) CHARACTER SET latin1 DEFAULT NULL,
  `C_ZipCode` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `QuestionType` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `Question` varchar(4000) CHARACTER SET latin1 DEFAULT NULL,
  `Solution` varchar(4000) CHARACTER SET latin1 DEFAULT NULL,
  `Level` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `WorkOrderState` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `NTNum` varchar(100) CHARACTER SET latin1 DEFAULT NULL,
  `ProductType` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `ProcuctModel` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `HardSetting` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `SoftSetting` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `HelpType` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `Rep_FeedBackP` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `Rep_Tel` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `Rep_CriterionRoom` decimal(12,0) DEFAULT NULL,
  `Rep_UPS` decimal(12,0) DEFAULT NULL,
  `Rep_BUGCount` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `Rep_Province` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `Rep_Adress` varchar(200) CHARACTER SET latin1 DEFAULT NULL,
  `Rep_Date` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `RemarkOne` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `GetAffirm` varchar(200) CHARACTER SET latin1 DEFAULT NULL,
  `Accessory` varchar(100) CHARACTER SET latin1 DEFAULT NULL,
  `RemarkTwo` varchar(1000) CHARACTER SET latin1 DEFAULT NULL,
  `RepairState` varchar(200) CHARACTER SET latin1 DEFAULT NULL,
  `BugReason` varchar(200) CHARACTER SET latin1 DEFAULT NULL,
  `BugRemark` varchar(200) CHARACTER SET latin1 DEFAULT NULL,
  `RepairSolution` varchar(200) CHARACTER SET latin1 DEFAULT NULL,
  `RepairAccessory` varchar(100) CHARACTER SET latin1 DEFAULT NULL,
  `MainBoard` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `SystemEdition` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `RepairCourse` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `CostMark` varchar(1000) CHARACTER SET latin1 DEFAULT NULL,
  `RemarkThree` varchar(1000) CHARACTER SET latin1 DEFAULT NULL,
  `Express` varchar(100) CHARACTER SET latin1 DEFAULT NULL,
  `RemarkFour` varchar(1000) CHARACTER SET latin1 DEFAULT NULL,
  `RepairOverTime` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `OverTimeRemark` varchar(200) CHARACTER SET latin1 DEFAULT NULL,
  `TicketState` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `TicketNum` varchar(30) CHARACTER SET latin1 DEFAULT NULL,
  `TicketType` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `C_Name` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `WorkOrderRate` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `TTSDATA` varchar(200) CHARACTER SET latin1 DEFAULT NULL,
  `RunStatus` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `Rep_time` datetime DEFAULT NULL,
  `GetGoods_time` datetime DEFAULT NULL,
  `RepairFinish_time` datetime DEFAULT NULL,
  `GoGoods_time` datetime DEFAULT NULL,
  `BackVisit_time` datetime DEFAULT NULL,
  `QuestionFullName` varchar(200) CHARACTER SET latin1 DEFAULT NULL,
  `IsRep` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `IsGetGoods` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `IsRepairFinish` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `IsGoGoods` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `IsBackVist` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `IsExistKnoledge` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `guid` varchar(40) CHARACTER SET latin1 DEFAULT NULL,
  `C_ContactOther` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `C_MobileOther` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `B_PropertyType` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `B_ProgramName` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `B_Area` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `B_Building` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `B_Unit` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `B_Room` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `B_SignDate` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_Program` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_Depart` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_Person` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_DealResult` varchar(4000) CHARACTER SET latin1 DEFAULT NULL,
  `R_DealUnit` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_DealPerson` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_TransDate` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_LimitDate` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_TraceNo` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_TraceName` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_TraceDate` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_TraceQuestion` varchar(4000) CHARACTER SET latin1 DEFAULT NULL,
  `R_UpgradeNo` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_UpgradeName` varchar(50) DEFAULT NULL,
  `R_UpgradeDate` varchar(50) DEFAULT NULL,
  `R_UpgradeRequest` varchar(4000) DEFAULT NULL,
  `R_FeedbackNo` varchar(50) DEFAULT NULL,
  `R_FeedbackName` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_FeedbackDate` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_Satisfaction` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_SatisfactionNot` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `R_FeedBackMemo` varchar(4000) DEFAULT NULL,
  `B_WideSpread` decimal(12,0) DEFAULT NULL,
  `B_TransactionPrice` decimal(12,0) DEFAULT NULL,
  `R_DealedStatus` varchar(50) DEFAULT NULL,
  `WorkerDepart` varchar(50) DEFAULT NULL,
  `R_SatisfactionNotQName` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `crm_phone_record_bak`
--

LOCK TABLES `crm_phone_record_bak` WRITE;
/*!40000 ALTER TABLE `crm_phone_record_bak` DISABLE KEYS */;
/*!40000 ALTER TABLE `crm_phone_record_bak` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `crm_tel_registration`
--

DROP TABLE IF EXISTS `crm_tel_registration`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `crm_tel_registration` (
  `WorkOrderNo` varchar(15) NOT NULL,
  `WorkerID` varchar(10) DEFAULT NULL,
  `Wroker` varchar(20) DEFAULT NULL,
  `CallerID` varchar(20) DEFAULT NULL,
  `Province` varchar(20) DEFAULT NULL,
  `City` varchar(20) DEFAULT NULL,
  `NewCall` varchar(5) DEFAULT NULL,
  `SRID` varchar(128) DEFAULT NULL,
  `CallTime` datetime DEFAULT NULL,
  `Unit` varchar(15) DEFAULT NULL,
  `ServiceType` varchar(15) DEFAULT NULL,
  `WorkOrderType` varchar(20) DEFAULT NULL,
  `C_ID` decimal(12,0) DEFAULT NULL,
  `C_Type` varchar(20) DEFAULT NULL,
  `C_Contact` varchar(20) DEFAULT NULL,
  `C_Sex` varchar(10) DEFAULT NULL,
  `C_Tel` varchar(100) DEFAULT NULL,
  `C_Mobile` varchar(100) DEFAULT NULL,
  `C_Email` varchar(50) DEFAULT NULL,
  `C_Address` varchar(200) DEFAULT NULL,
  `C_ZipCode` varchar(10) DEFAULT NULL,
  `QuestionType` varchar(50) DEFAULT NULL,
  `Question` varchar(4000) DEFAULT NULL,
  `Solution` varchar(4000) DEFAULT NULL,
  `Level` varchar(20) DEFAULT NULL,
  `WorkOrderState` varchar(20) DEFAULT NULL,
  `NTNum` varchar(100) DEFAULT NULL,
  `ProductType` varchar(50) DEFAULT NULL,
  `ProcuctModel` varchar(20) DEFAULT NULL,
  `HardSetting` varchar(50) DEFAULT NULL,
  `SoftSetting` varchar(50) DEFAULT NULL,
  `HelpType` varchar(20) DEFAULT NULL,
  `Rep_FeedBackP` varchar(20) DEFAULT NULL,
  `Rep_Tel` varchar(20) DEFAULT NULL,
  `Rep_CriterionRoom` decimal(12,0) DEFAULT NULL,
  `Rep_UPS` decimal(12,0) DEFAULT NULL,
  `Rep_BUGCount` varchar(20) DEFAULT NULL,
  `Rep_Province` varchar(20) DEFAULT NULL,
  `Rep_Adress` varchar(200) DEFAULT NULL,
  `Rep_Date` varchar(20) DEFAULT NULL,
  `RemarkOne` varchar(50) DEFAULT NULL,
  `GetAffirm` varchar(200) DEFAULT NULL,
  `Accessory` varchar(100) DEFAULT NULL,
  `RemarkTwo` varchar(1000) DEFAULT NULL,
  `RepairState` varchar(200) DEFAULT NULL,
  `BugReason` varchar(200) DEFAULT NULL,
  `BugRemark` varchar(200) DEFAULT NULL,
  `RepairSolution` varchar(200) DEFAULT NULL,
  `RepairAccessory` varchar(100) DEFAULT NULL,
  `MainBoard` varchar(50) DEFAULT NULL,
  `SystemEdition` varchar(50) DEFAULT NULL,
  `RepairCourse` varchar(20) DEFAULT NULL,
  `CostMark` varchar(1000) DEFAULT NULL,
  `RemarkThree` varchar(1000) DEFAULT NULL,
  `Express` varchar(100) DEFAULT NULL,
  `RemarkFour` varchar(1000) DEFAULT NULL,
  `RepairOverTime` varchar(50) DEFAULT NULL,
  `OverTimeRemark` varchar(200) DEFAULT NULL,
  `TicketState` varchar(50) DEFAULT NULL,
  `TicketNum` varchar(30) DEFAULT NULL,
  `TicketType` varchar(20) DEFAULT NULL,
  `C_Name` varchar(50) DEFAULT NULL,
  `WorkOrderRate` varchar(50) DEFAULT NULL,
  `TTSDATA` varchar(200) DEFAULT NULL,
  `RunStatus` varchar(10) DEFAULT NULL,
  `Rep_time` datetime DEFAULT NULL,
  `GetGoods_time` datetime DEFAULT NULL,
  `RepairFinish_time` datetime DEFAULT NULL,
  `GoGoods_time` datetime DEFAULT NULL,
  `BackVisit_time` datetime DEFAULT NULL,
  `QuestionFullName` varchar(200) DEFAULT NULL,
  `IsRep` varchar(10) DEFAULT NULL,
  `IsGetGoods` varchar(10) DEFAULT NULL,
  `IsRepairFinish` varchar(10) DEFAULT NULL,
  `IsGoGoods` varchar(10) DEFAULT NULL,
  `IsBackVist` varchar(10) DEFAULT NULL,
  `IsExistKnoledge` varchar(50) DEFAULT NULL,
  `guid` varchar(40) NOT NULL,
  `C_ContactOther` varchar(20) DEFAULT NULL,
  `C_MobileOther` varchar(50) DEFAULT NULL,
  `B_PropertyType` varchar(20) DEFAULT NULL,
  `B_ProgramName` varchar(50) DEFAULT NULL,
  `B_Area` varchar(50) DEFAULT NULL,
  `B_Building` varchar(10) DEFAULT NULL,
  `B_Unit` varchar(10) DEFAULT NULL,
  `B_Room` varchar(10) DEFAULT NULL,
  `B_SignDate` datetime DEFAULT NULL,
  `R_Program` varchar(50) DEFAULT NULL,
  `R_Depart` varchar(50) DEFAULT NULL,
  `R_Person` varchar(50) DEFAULT NULL,
  `R_DealResult` varchar(4000) DEFAULT NULL,
  `R_DealUnit` varchar(50) DEFAULT NULL,
  `R_DealPerson` varchar(50) DEFAULT NULL,
  `R_TransDate` datetime DEFAULT NULL,
  `R_LimitDate` datetime DEFAULT NULL,
  `R_TraceNo` varchar(50) DEFAULT NULL,
  `R_TraceName` varchar(50) DEFAULT NULL,
  `R_TraceDate` datetime DEFAULT NULL,
  `R_TraceQuestion` varchar(4000) DEFAULT NULL,
  `R_UpgradeNo` varchar(50) DEFAULT NULL,
  `R_UpgradeName` varchar(50) DEFAULT NULL,
  `R_UpgradeDate` datetime DEFAULT NULL,
  `R_UpgradeRequest` varchar(4000) DEFAULT NULL,
  `R_FeedbackNo` varchar(50) DEFAULT NULL,
  `R_FeedbackName` varchar(50) DEFAULT NULL,
  `R_FeedbackDate` datetime DEFAULT NULL,
  `R_Satisfaction` varchar(50) DEFAULT NULL,
  `R_SatisfactionNot` varchar(50) DEFAULT NULL,
  `R_FeedBackMemo` varchar(4000) DEFAULT NULL,
  `B_WideSpread` decimal(12,0) DEFAULT NULL,
  `B_TransactionPrice` decimal(12,0) DEFAULT NULL,
  `R_DealedStatus` varchar(50) DEFAULT NULL,
  `WorkerDepart` varchar(50) DEFAULT NULL,
  `R_SatisfactionNotQName` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`WorkOrderNo`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `crm_tel_registration`
--

LOCK TABLES `crm_tel_registration` WRITE;
/*!40000 ALTER TABLE `crm_tel_registration` DISABLE KEYS */;
/*!40000 ALTER TABLE `crm_tel_registration` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cti_agent_state_temp`
--

DROP TABLE IF EXISTS `cti_agent_state_temp`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cti_agent_state_temp` (
  `ID` int(11) NOT NULL DEFAULT '0',
  `ENTRY_TIMESTAMP` datetime NOT NULL,
  `AGENT_ID` varchar(255) NOT NULL,
  `AGENT_SESSION_ID` varchar(255) DEFAULT NULL,
  `NEW_STATE_NAME` varchar(255) NOT NULL,
  `CHANNEL_UUID` varchar(255) DEFAULT NULL,
  `OTHER_LEG_UUID` varchar(255) DEFAULT NULL,
  `SUB_ID` int(11) DEFAULT NULL,
  `OLD_STATE_NAME` varchar(255) DEFAULT NULL,
  `DURATION` int(11) DEFAULT NULL,
  `CALL_UUID` varchar(255) DEFAULT NULL,
  `EXIT_TIMESTAMP` datetime DEFAULT NULL,
  `PRE_REC_ID` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cti_agent_state_temp`
--

LOCK TABLES `cti_agent_state_temp` WRITE;
/*!40000 ALTER TABLE `cti_agent_state_temp` DISABLE KEYS */;
/*!40000 ALTER TABLE `cti_agent_state_temp` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cti_hist_acd_event`
--

DROP TABLE IF EXISTS `cti_hist_acd_event`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cti_hist_acd_event` (
  `ID` int(11) NOT NULL,
  `EVENT_TIMESTAMP` datetime NOT NULL,
  `ACTION` varchar(255) NOT NULL,
  `AGENT_ID` varchar(255) DEFAULT NULL,
  `AGENT_SESSION_UUID` varchar(255) DEFAULT NULL,
  `AGENT_CHANNEL_UUID` varchar(255) DEFAULT NULL,
  `AGENT_STATUS` varchar(255) DEFAULT NULL,
  `AGENT_STATE` varchar(255) DEFAULT NULL,
  `QUEUE` varchar(255) DEFAULT NULL,
  `QUEUE_COUNT` varchar(255) DEFAULT NULL,
  `MEMBER_UUID` varchar(255) DEFAULT NULL,
  `MEMBER_CHANNEL_UUID` varchar(255) DEFAULT NULL,
  `MEMBER_CID_NAME` varchar(255) DEFAULT NULL,
  `MEMBER_CID_NUMBER` varchar(255) DEFAULT NULL,
  `HANGUP_CAUSE` varchar(255) DEFAULT NULL,
  `CANCEL_CAUSE` varchar(255) DEFAULT NULL,
  `CTI_CALL_UUID` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cti_hist_acd_event`
--

LOCK TABLES `cti_hist_acd_event` WRITE;
/*!40000 ALTER TABLE `cti_hist_acd_event` DISABLE KEYS */;
/*!40000 ALTER TABLE `cti_hist_acd_event` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cti_hist_agent_action`
--

DROP TABLE IF EXISTS `cti_hist_agent_action`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cti_hist_agent_action` (
  `ID` int(11) NOT NULL,
  `AGENT_ID` varchar(255) NOT NULL,
  `AGENT_SESSION_ID` varchar(255) DEFAULT NULL,
  `EVENT_TIMESTAMP` datetime NOT NULL,
  `CHANNEL_UUID` varchar(255) DEFAULT NULL,
  `OTHER_LEG_UUID` varchar(255) DEFAULT NULL,
  `CLASS` varchar(255) NOT NULL,
  `METHOD` varchar(255) NOT NULL,
  `PARAMS` varchar(1024) DEFAULT NULL,
  `CUR_STATE_NAME` varchar(255) DEFAULT NULL,
  `CALL_UUID` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cti_hist_agent_action`
--

LOCK TABLES `cti_hist_agent_action` WRITE;
/*!40000 ALTER TABLE `cti_hist_agent_action` DISABLE KEYS */;
/*!40000 ALTER TABLE `cti_hist_agent_action` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cti_hist_agent_session`
--

DROP TABLE IF EXISTS `cti_hist_agent_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cti_hist_agent_session` (
  `ID` int(11) NOT NULL,
  `AGENT_ID` varchar(255) DEFAULT NULL,
  `AGENT_SESSION_ID` varchar(255) DEFAULT NULL,
  `AGENT_NAME` varchar(255) DEFAULT NULL,
  `ORG_ID` varchar(255) DEFAULT NULL,
  `AGENT_EXT` varchar(255) DEFAULT NULL,
  `AGENT_CONTACT` varchar(255) DEFAULT NULL,
  `WORK_ID` varchar(255) DEFAULT NULL,
  `IS_LEADER` int(11) DEFAULT NULL,
  `LOGIN_TIMESTAMP` datetime DEFAULT NULL,
  `LOGOUT_TIMESTAMP` datetime DEFAULT NULL,
  `LOGOUT_STATE` varchar(255) DEFAULT NULL,
  `LOGIN_TIMESTAMP_30M` datetime DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cti_hist_agent_session`
--

LOCK TABLES `cti_hist_agent_session` WRITE;
/*!40000 ALTER TABLE `cti_hist_agent_session` DISABLE KEYS */;
/*!40000 ALTER TABLE `cti_hist_agent_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cti_hist_agent_state`
--

DROP TABLE IF EXISTS `cti_hist_agent_state`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cti_hist_agent_state` (
  `ID` int(11) NOT NULL,
  `ENTRY_TIMESTAMP` datetime NOT NULL,
  `AGENT_ID` varchar(255) NOT NULL,
  `AGENT_SESSION_ID` varchar(255) DEFAULT NULL,
  `NEW_STATE_NAME` varchar(255) NOT NULL,
  `CHANNEL_UUID` varchar(255) DEFAULT NULL,
  `OTHER_LEG_UUID` varchar(255) DEFAULT NULL,
  `SUB_ID` int(11) DEFAULT NULL,
  `OLD_STATE_NAME` varchar(255) DEFAULT NULL,
  `DURATION` int(11) DEFAULT NULL,
  `CALL_UUID` varchar(255) DEFAULT NULL,
  `EXIT_TIMESTAMP` datetime DEFAULT NULL,
  `PRE_REC_ID` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cti_hist_agent_state`
--

LOCK TABLES `cti_hist_agent_state` WRITE;
/*!40000 ALTER TABLE `cti_hist_agent_state` DISABLE KEYS */;
/*!40000 ALTER TABLE `cti_hist_agent_state` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cti_hist_channel`
--

DROP TABLE IF EXISTS `cti_hist_channel`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cti_hist_channel` (
  `ID` int(11) NOT NULL,
  `EVENT_TIMESTAMP` datetime NOT NULL,
  `SWITCH_HOST_NAME` varchar(255) NOT NULL,
  `SWITCH_IPV4` varchar(255) NOT NULL,
  `SWITCH_NAME` varchar(255) NOT NULL,
  `CHANNEL_NAME` varchar(255) NOT NULL,
  `CHANNEL_UUID` varchar(255) NOT NULL,
  `CALL_DIRECTION` varchar(255) NOT NULL,
  `CTI_CALL_DIRECTION` varchar(255) DEFAULT NULL,
  `CTI_CC_DIRECTION` varchar(255) DEFAULT NULL,
  `CTI_CHANNEL_TYPE` varchar(50) DEFAULT NULL,
  `HIT_DIALPLAN` decimal(1,0) DEFAULT NULL,
  `CALL_UUID` varchar(255) DEFAULT NULL,
  `CTI_CALL_UUID` varchar(255) DEFAULT NULL,
  `HANGUP_CAUSE` varchar(255) DEFAULT NULL,
  `CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `ORIG_CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `ORIG_CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `CALLER_NETWORK_ADDR` varchar(255) DEFAULT NULL,
  `ANI` varchar(255) DEFAULT NULL,
  `DESTINATION_NUMBER` varchar(255) DEFAULT NULL,
  `CONTEXT` varchar(255) DEFAULT NULL,
  `GATEWAY_NAME` varchar(255) DEFAULT NULL,
  `DOMAIN_NAME` varchar(255) DEFAULT NULL,
  `FIRST_ANSWERED_BY` varchar(255) DEFAULT NULL,
  `CREATED_TIME` datetime DEFAULT NULL,
  `ANSWERED_TIME` datetime DEFAULT NULL,
  `HANGUP_TIME` datetime DEFAULT NULL,
  `TRANSFER_TIME` datetime DEFAULT NULL,
  `BRIDGED_TIME` datetime DEFAULT NULL,
  `HOLD_ACCUM` int(11) DEFAULT NULL,
  `IS_ORIGINATOR` int(11) DEFAULT NULL,
  `OTHER_LEG_UUID` varchar(255) DEFAULT NULL,
  `ACCOUNT_CODE` varchar(255) DEFAULT NULL,
  `HANGUP_DISPOSITION` varchar(255) DEFAULT NULL,
  `DIGITS_DIALED` varchar(255) DEFAULT NULL,
  `DURATION` int(11) DEFAULT NULL,
  `BILLSEC` int(11) DEFAULT NULL,
  `PROGRESSSEC` int(11) DEFAULT NULL,
  `ANSWERSEC` int(11) DEFAULT NULL,
  `WAITSEC` int(11) DEFAULT NULL,
  `CTI_QUEUE_ACCUM` int(11) DEFAULT NULL,
  `CTI_BRIDGE_ACCUM` int(11) DEFAULT NULL,
  `CTI_BRIDGE_AGENT_ACCUM` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cti_hist_channel`
--

LOCK TABLES `cti_hist_channel` WRITE;
/*!40000 ALTER TABLE `cti_hist_channel` DISABLE KEYS */;
/*!40000 ALTER TABLE `cti_hist_channel` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cti_hist_channel_event`
--

DROP TABLE IF EXISTS `cti_hist_channel_event`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cti_hist_channel_event` (
  `ID` int(11) NOT NULL,
  `EVENT_TIMESTAMP` datetime NOT NULL,
  `EVENT_NAME` varchar(255) NOT NULL,
  `CHANNEL_NAME` varchar(255) NOT NULL,
  `CHANNEL_UUID` varchar(255) NOT NULL,
  `CHANNEL_STATE` varchar(255) DEFAULT NULL,
  `CHANNEL_STATE_ID` int(11) DEFAULT NULL,
  `CALL_STATE` varchar(255) DEFAULT NULL,
  `DIRECTION` varchar(255) DEFAULT NULL,
  `CALL_UUID` varchar(255) DEFAULT NULL,
  `CTI_CALL_UUID` varchar(255) DEFAULT NULL,
  `CALLER_USERNAME` varchar(255) DEFAULT NULL,
  `CALLER_ID_NUMBER` varchar(255) DEFAULT NULL,
  `ORIG_CALLER_ID_NUMBER` varchar(255) DEFAULT NULL,
  `CALLEE_ID_NAME` varchar(255) DEFAULT NULL,
  `CALLEE_ID_NUMBER` varchar(255) DEFAULT NULL,
  `ANI` varchar(255) DEFAULT NULL,
  `DESTINATION_NUMBER` varchar(255) DEFAULT NULL,
  `CONTEXT` varchar(255) DEFAULT NULL,
  `HANGUP_CAUSE` varchar(255) DEFAULT NULL,
  `OTHER_TYPE` varchar(255) DEFAULT NULL,
  `OTHER_LEG_UUID` varchar(255) DEFAULT NULL,
  `DOMAIN_NAME` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cti_hist_channel_event`
--

LOCK TABLES `cti_hist_channel_event` WRITE;
/*!40000 ALTER TABLE `cti_hist_channel_event` DISABLE KEYS */;
/*!40000 ALTER TABLE `cti_hist_channel_event` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cti_hist_channel_execute`
--

DROP TABLE IF EXISTS `cti_hist_channel_execute`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cti_hist_channel_execute` (
  `ID` int(11) NOT NULL,
  `CHANNEL_UUID` varchar(255) NOT NULL,
  `APPLICATION` varchar(255) NOT NULL,
  `APPLICATION_DATA` varchar(255) DEFAULT NULL,
  `APPLICATION_RESPONSE` varchar(255) DEFAULT NULL,
  `START_TIME` datetime NOT NULL,
  `COMPLETE_TIME` datetime NOT NULL,
  `APPLICATION_UUID` varchar(255) DEFAULT NULL,
  `CALL_UUID` varchar(255) DEFAULT NULL,
  `CTI_CALL_UUID` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cti_hist_channel_execute`
--

LOCK TABLES `cti_hist_channel_execute` WRITE;
/*!40000 ALTER TABLE `cti_hist_channel_execute` DISABLE KEYS */;
/*!40000 ALTER TABLE `cti_hist_channel_execute` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cti_hist_record_files`
--

DROP TABLE IF EXISTS `cti_hist_record_files`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cti_hist_record_files` (
  `ID` int(11) NOT NULL,
  `CHANNEL_UUID` varchar(255) NOT NULL,
  `CTI_CALL_DIRECTION` varchar(255) DEFAULT NULL,
  `CALL_UUID` varchar(255) DEFAULT NULL,
  `CTI_CALL_UUID` varchar(255) DEFAULT NULL,
  `CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `RECORD_STEREO` decimal(1,0) DEFAULT NULL,
  `READ_CODEC` varchar(155) DEFAULT NULL,
  `READ_RATE` int(11) DEFAULT NULL,
  `WRITE_CODEC` varchar(155) DEFAULT NULL,
  `WRITE_RATE` int(11) DEFAULT NULL,
  `RECORD_FILE_NAME` varchar(512) NOT NULL,
  `START_TIME` datetime DEFAULT NULL,
  `STOP_TIME` datetime DEFAULT NULL,
  `CC_QUEUE` varchar(255) DEFAULT NULL,
  `AGENT_ID` varchar(255) DEFAULT NULL,
  `AGENT_SESSION_ID` varchar(255) DEFAULT NULL,
  `CTI_RECORD_TYPE` varchar(50) DEFAULT NULL,
  `ORG_ID` varchar(255) DEFAULT NULL,
  `VM_NUMBER` varchar(255) DEFAULT NULL,
  `URL_PREFIX` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cti_hist_record_files`
--

LOCK TABLES `cti_hist_record_files` WRITE;
/*!40000 ALTER TABLE `cti_hist_record_files` DISABLE KEYS */;
/*!40000 ALTER TABLE `cti_hist_record_files` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_accesscode`
--

DROP TABLE IF EXISTS `report_accesscode`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_accesscode` (
  `ID` int(17) NOT NULL AUTO_INCREMENT,
  `ACCESSCODE` varchar(45) DEFAULT NULL,
  `ACCESSCODE_PRE` varchar(45) DEFAULT NULL,
  `ACCESSCODE_DISPLAY` varchar(45) DEFAULT NULL,
  `ACCESSCODE_NAME` varchar(45) DEFAULT NULL,
  `CTI_CALL_DIRECTION` varchar(45) DEFAULT NULL,
  `COM` varchar(45) DEFAULT NULL,
  `DOMAIN` varchar(45) DEFAULT NULL,
  `CONTEXT` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_accesscode`
--

LOCK TABLES `report_accesscode` WRITE;
/*!40000 ALTER TABLE `report_accesscode` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_accesscode` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_agent`
--

DROP TABLE IF EXISTS `report_agent`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_agent` (
  `CALLDATE` datetime NOT NULL,
  `AGENT_ID` varchar(45) DEFAULT NULL,
  `AGENT_NAME` varchar(45) DEFAULT NULL,
  `AGENT_WORK_ID` varchar(45) DEFAULT NULL,
  `AGENT_ORG_ID` varchar(45) DEFAULT NULL,
  `AGENT_ORG_NAME` varchar(45) DEFAULT NULL,
  `AGENT_SESSION_ID` varchar(45) DEFAULT NULL,
  `TOPERSON` int(11) DEFAULT NULL,
  `TOPERSONSUCCEED` int(11) DEFAULT NULL,
  `LOGIN` int(11) DEFAULT NULL,
  `BUSY` int(11) DEFAULT NULL,
  `HOLD` int(11) DEFAULT NULL,
  `POSTCALL` int(11) DEFAULT NULL,
  `INNERCALL` int(11) DEFAULT NULL,
  `BELL` int(11) DEFAULT NULL,
  `TO20` int(11) DEFAULT NULL,
  `TOSUCCEDTIME` int(11) DEFAULT NULL,
  `LOGINTIME` int(11) DEFAULT NULL,
  `BUSYTIME` int(11) DEFAULT NULL,
  `HOLDTIME` int(11) DEFAULT NULL,
  `POSTCALLTIME` int(11) DEFAULT NULL,
  `INNERTIME` int(11) DEFAULT NULL,
  `BELLTIME` int(11) DEFAULT NULL,
  `AVGTIME` int(11) DEFAULT NULL,
  `AVGLOGINTIME` int(11) DEFAULT NULL,
  `AVGBUSYTIME` int(11) DEFAULT NULL,
  `AVGHOLETIME` int(11) DEFAULT NULL,
  `AVGPOSTCALLTIME` int(11) DEFAULT NULL,
  `AVGINNERTIME` int(11) DEFAULT NULL,
  `AVGBELLTIME` int(11) DEFAULT NULL,
  `AVGWORKTIME` int(11) DEFAULT NULL,
  `PERSUCCESS` int(11) DEFAULT NULL,
  `PERFREE` int(11) DEFAULT NULL,
  `PERWORK` int(11) DEFAULT NULL,
  `PERHOLD` int(11) DEFAULT NULL,
  `PERAWAY` int(11) DEFAULT NULL,
  `PERTO20` int(11) DEFAULT NULL,
  `DEGREE` int(11) DEFAULT NULL,
  `OUTCALL` int(11) DEFAULT NULL,
  `OUTCALLTIME` int(11) DEFAULT NULL,
  `AVGOUTCALLTIME` int(11) DEFAULT NULL,
  `CONSULT` decimal(18,0) DEFAULT NULL,
  `CONSULTTIME` decimal(18,2) DEFAULT NULL,
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_agent`
--

LOCK TABLES `report_agent` WRITE;
/*!40000 ALTER TABLE `report_agent` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_agent` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_agent_org_jx`
--

DROP TABLE IF EXISTS `report_agent_org_jx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_agent_org_jx` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CALLDATE` datetime NOT NULL,
  `AGENT_ORG_ID` varchar(45) DEFAULT NULL,
  `AGENT_ORG_NAME` varchar(45) DEFAULT NULL,
  `AGENT_SESSION_ID` varchar(45) DEFAULT NULL,
  `TOPERSON` int(11) DEFAULT NULL,
  `TOPERSONSUCCEED` int(11) DEFAULT NULL,
  `LOGIN` int(11) DEFAULT NULL,
  `BUSY` int(11) DEFAULT NULL,
  `HOLD` int(11) DEFAULT NULL,
  `POSTCALL` int(11) DEFAULT NULL,
  `INNERCALL` int(11) DEFAULT NULL,
  `BELL` int(11) DEFAULT NULL,
  `TO20` int(11) DEFAULT NULL,
  `TOSUCCEDTIME` int(11) DEFAULT NULL,
  `LOGINTIME` int(11) DEFAULT NULL,
  `BUSYTIME` int(11) DEFAULT NULL,
  `HOLDTIME` int(11) DEFAULT NULL,
  `POSTCALLTIME` int(11) DEFAULT NULL,
  `INNERTIME` int(11) DEFAULT NULL,
  `BELLTIME` int(11) DEFAULT NULL,
  `AVGTIME` int(11) DEFAULT NULL,
  `AVGLOGINTIME` int(11) DEFAULT NULL,
  `AVGBUSYTIME` int(11) DEFAULT NULL,
  `AVGHOLETIME` int(11) DEFAULT NULL,
  `AVGPOSTCALLTIME` int(11) DEFAULT NULL,
  `AVGINNERTIME` int(11) DEFAULT NULL,
  `AVGBELLTIME` int(11) DEFAULT NULL,
  `AVGWORKTIME` int(11) DEFAULT NULL,
  `PERSUCCESS` int(11) DEFAULT NULL,
  `PERFREE` int(11) DEFAULT NULL,
  `PERWORK` int(11) DEFAULT NULL,
  `PERHOLD` int(11) DEFAULT NULL,
  `PERAWAY` int(11) DEFAULT NULL,
  `PERTO20` int(11) DEFAULT NULL,
  `DEGREE` int(11) DEFAULT NULL,
  `OUTCALL` int(11) DEFAULT NULL,
  `OUTCALLTIME` int(11) DEFAULT NULL,
  `AVGOUTCALLTIME` int(11) DEFAULT NULL,
  `CONSULT` decimal(18,0) DEFAULT NULL,
  `CONSULTTIME` decimal(18,2) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_agent_org_jx`
--

LOCK TABLES `report_agent_org_jx` WRITE;
/*!40000 ALTER TABLE `report_agent_org_jx` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_agent_org_jx` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_agent_services`
--

DROP TABLE IF EXISTS `report_agent_services`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_agent_services` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CTI_CALL_UUID` varchar(255) DEFAULT NULL,
  `CHANNEL_UUID` varchar(255) DEFAULT NULL,
  `CHANNEL_NAME` varchar(255) DEFAULT NULL,
  `DIRECTION` varchar(255) DEFAULT NULL,
  `CTI_CALL_DIRECTION` varchar(255) DEFAULT NULL,
  `CTI_CC_DIRECTION` varchar(255) DEFAULT NULL,
  `ORIG_CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `ORIG_CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `CANCEL_CAUSE` varchar(255) DEFAULT NULL,
  `CANCEL` varchar(255) DEFAULT NULL,
  `START_TIME` datetime DEFAULT NULL,
  `TOAGENT_TIME` datetime DEFAULT NULL,
  `CANCEL_TIME` datetime DEFAULT NULL,
  `POST_CALL_TIME` datetime DEFAULT NULL,
  `END_TIME` datetime DEFAULT NULL,
  `DURATION` int(6) DEFAULT NULL,
  `WAIT` int(6) DEFAULT NULL,
  `ANSWER` int(6) DEFAULT NULL,
  `POST_CALL` int(6) DEFAULT NULL,
  `TOTAL` int(6) DEFAULT NULL,
  `ORG_ID` varchar(45) DEFAULT NULL,
  `AGENT_ID` varchar(45) DEFAULT NULL,
  `AGENT_NAME` varchar(45) DEFAULT NULL,
  `AGENT_SESSION_ID` varchar(45) DEFAULT NULL,
  `AGENT_EXT` varchar(45) DEFAULT NULL,
  `SERVICES_TYPE` varchar(45) DEFAULT NULL,
  `OTHER_TYPE` varchar(45) DEFAULT NULL,
  `SERVICES` int(6) DEFAULT NULL,
  `CREAT_TIME_30M` datetime DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `ID_UNIQUE` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_agent_services`
--

LOCK TABLES `report_agent_services` WRITE;
/*!40000 ALTER TABLE `report_agent_services` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_agent_services` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_agent_state_time`
--

DROP TABLE IF EXISTS `report_agent_state_time`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_agent_state_time` (
  `entry_timestamp` datetime NOT NULL,
  `org_id` varchar(45) DEFAULT NULL,
  `new_state_name` varchar(45) DEFAULT NULL,
  `old_state_name` varchar(45) DEFAULT NULL,
  `duration` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_agent_state_time`
--

LOCK TABLES `report_agent_state_time` WRITE;
/*!40000 ALTER TABLE `report_agent_state_time` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_agent_state_time` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_agent_tmp`
--

DROP TABLE IF EXISTS `report_agent_tmp`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_agent_tmp` (
  `CALLDATE` datetime NOT NULL,
  `AGENT_ID` varchar(255) DEFAULT NULL,
  `AGENT_NAME` varchar(255) DEFAULT NULL,
  `AGENT_WORK_ID` varchar(255) DEFAULT NULL,
  `AGENT_ORG_ID` varchar(255) DEFAULT NULL,
  `AGENT_SESSION_ID` varchar(255) DEFAULT NULL,
  `TOPERSON` decimal(18,0) DEFAULT '0',
  `TOPERSONSUCCEED` decimal(18,0) DEFAULT '0',
  `LOGIN` decimal(18,0) DEFAULT NULL,
  `BUSY` decimal(18,0) DEFAULT NULL,
  `HOLD` decimal(18,0) DEFAULT NULL,
  `POSTCALL` decimal(18,0) DEFAULT NULL,
  `INNERCALL` decimal(18,0) DEFAULT NULL,
  `BELL` decimal(18,0) DEFAULT NULL,
  `TO20` decimal(18,0) DEFAULT NULL,
  `TOSUCCEDTIME` decimal(18,0) DEFAULT '0',
  `LOGINTIME` decimal(18,0) DEFAULT NULL,
  `BUSYTIME` decimal(18,0) DEFAULT NULL,
  `HOLDTIME` decimal(18,0) DEFAULT NULL,
  `POSTCALLTIME` decimal(18,0) DEFAULT NULL,
  `INNERTIME` decimal(18,0) DEFAULT NULL,
  `BELLTIME` decimal(18,0) DEFAULT NULL,
  `AVGTIME` decimal(18,0) DEFAULT NULL,
  `AVGLOGINTIME` decimal(18,0) DEFAULT NULL,
  `AVGBUSYTIME` decimal(18,0) DEFAULT NULL,
  `AVGHOLETIME` decimal(18,0) DEFAULT NULL,
  `AVGPOSTCALLTIME` decimal(18,0) DEFAULT NULL,
  `AVGINNERTIME` decimal(18,0) DEFAULT NULL,
  `AVGBELLTIME` decimal(18,0) DEFAULT NULL,
  `AVGWORKTIME` decimal(18,0) DEFAULT NULL,
  `PERSUCCESS` decimal(18,2) DEFAULT NULL,
  `PERFREE` decimal(18,2) DEFAULT NULL,
  `PERWORK` decimal(18,2) DEFAULT NULL,
  `PERHOLD` decimal(18,2) DEFAULT NULL,
  `PERAWAY` decimal(18,2) DEFAULT NULL,
  `PERTO20` decimal(18,2) DEFAULT NULL,
  `DEGREE` decimal(18,2) DEFAULT NULL,
  `OUTCALL` decimal(18,0) DEFAULT NULL,
  `OUTCALLTIME` decimal(18,0) DEFAULT NULL,
  `AVGOUTCALLTIME` decimal(18,2) DEFAULT NULL,
  `CONSULT` decimal(18,0) DEFAULT NULL,
  `CONSULTTIME` decimal(18,2) DEFAULT NULL,
  `AGENT_ORG_NAME` varchar(45) DEFAULT NULL,
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_agent_tmp`
--

LOCK TABLES `report_agent_tmp` WRITE;
/*!40000 ALTER TABLE `report_agent_tmp` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_agent_tmp` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_calleverdaycollect`
--

DROP TABLE IF EXISTS `report_calleverdaycollect`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_calleverdaycollect` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `TJDATE` datetime DEFAULT NULL,
  `ACCESSCODE` varchar(45) DEFAULT NULL,
  `ORG_ID` varchar(45) DEFAULT NULL,
  `ORG_NAME` varchar(45) DEFAULT NULL,
  `CTI_CALL_DIRECTION` varchar(45) DEFAULT NULL,
  `CTI_CC_DIRECTION` varchar(45) DEFAULT NULL,
  `ORIG_CALLER_TYPE` varchar(45) DEFAULT NULL,
  `CALLCOUNT` int(11) DEFAULT '0',
  `TURNCOUNT` int(11) DEFAULT '0',
  `ANSWERED` int(11) DEFAULT '0',
  `ANSWERED1` varchar(45) DEFAULT NULL,
  `QUEUECOUNT` int(11) DEFAULT '0',
  `QUEUETIME` int(11) DEFAULT '0',
  `QUEUETIME1` varchar(45) DEFAULT NULL,
  `AGENT_COUNT` int(11) DEFAULT '0',
  `AGENT_TIME` int(11) DEFAULT '0',
  `AGENT_TIME1` varchar(45) DEFAULT NULL,
  `IVR_COUNT` int(11) DEFAULT '0',
  `IVR_TIME` int(11) DEFAULT '0',
  `IVR_TIME1` varchar(45) DEFAULT NULL,
  `VMCOUNT` int(11) DEFAULT '0',
  `VMTIME` int(11) DEFAULT '0',
  `FAXCOUNT` int(11) DEFAULT '0',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_calleverdaycollect`
--

LOCK TABLES `report_calleverdaycollect` WRITE;
/*!40000 ALTER TABLE `report_calleverdaycollect` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_calleverdaycollect` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_cancel_cause`
--

DROP TABLE IF EXISTS `report_cancel_cause`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_cancel_cause` (
  `cancel_cause` varchar(100) NOT NULL,
  `cancel_cause_chinese` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`cancel_cause`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_cancel_cause`
--

LOCK TABLES `report_cancel_cause` WRITE;
/*!40000 ALTER TABLE `report_cancel_cause` DISABLE KEYS */;
INSERT INTO `report_cancel_cause` VALUES ('BLIND_TRANSFER','转移'),('BREAK_OUT','主叫挂机'),('CALL_REJECTED','拒绝'),('INVALID_GATEWAY','非法网关'),('NORMAL_CLEARING','正常'),('NORMAL_TEMPORARY_FAILURE','临时错误'),('NO_AGENT_TIMEOUT','无空闲座席'),('NO_ANSWER','无应答'),('NO_USER_RESPONSE','无用户'),('ORIGINATOR_CANCEL','主叫取消'),('Terminated','正常'),('TIMEOUT','超时'),('USER_BUSY','用户忙'),('USER_NOT_REGISTERED','用户未注册');
/*!40000 ALTER TABLE `report_cancel_cause` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_cdr`
--

DROP TABLE IF EXISTS `report_cdr`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_cdr` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CHANNEL_UUID` varchar(255) DEFAULT NULL,
  `CTI_CALL_UUID` varchar(255) DEFAULT NULL,
  `CTI_CALL_DIRECTION` varchar(255) DEFAULT NULL,
  `CTI_CC_DIRECTION` varchar(255) DEFAULT NULL,
  `ORIG_CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `ORIG_CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `ORIG_CALLER_TYPE` varchar(255) DEFAULT NULL,
  `CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `ACCOUNT_CODE` varchar(255) DEFAULT NULL,
  `CREAT_TIME` datetime DEFAULT NULL,
  `ANSWERED_TIME` datetime DEFAULT NULL,
  `CANCEL_TIME` datetime DEFAULT NULL,
  `ANSWERED` int(11) DEFAULT NULL,
  `ANSWERED1` varchar(255) DEFAULT NULL,
  `DURATION` int(11) DEFAULT NULL,
  `DURATION1` varchar(255) DEFAULT NULL,
  `BILLSEC` int(11) DEFAULT NULL,
  `BILLSEC1` varchar(255) DEFAULT NULL,
  `WAITSEC` int(11) DEFAULT NULL,
  `WAITSEC1` varchar(255) DEFAULT NULL,
  `HANGUP_CAUSE` varchar(255) DEFAULT NULL,
  `HANGUP_DISPOSITION` varchar(255) DEFAULT NULL,
  `HANGUP_DISPOSITION1` varchar(255) DEFAULT NULL,
  `QUEUE_COUNT` int(11) DEFAULT NULL,
  `QUEUE_TIME` int(11) DEFAULT NULL,
  `QUEUE_TIME1` varchar(255) DEFAULT NULL,
  `AGENT_COUNT` int(11) DEFAULT NULL,
  `AGENT_TIME` int(11) DEFAULT NULL,
  `AGENT_TIME1` varchar(255) DEFAULT NULL,
  `IVR_COUNT` int(11) DEFAULT NULL,
  `IVR_TIME` int(11) DEFAULT NULL,
  `IVR_TIME1` varchar(255) DEFAULT NULL,
  `CREAT_TIME_30M` datetime DEFAULT NULL,
  `ZH_CN` varchar(255) DEFAULT NULL,
  `FIRST_AGENT_TIME` datetime DEFAULT NULL,
  `AGENT_ID` varchar(255) DEFAULT NULL,
  `ORG_ID` varchar(45) DEFAULT NULL,
  `AGENT_NAME` varchar(45) DEFAULT NULL,
  `AGENT_SESSION_ID` varchar(45) DEFAULT NULL,
  `AGENT_CHANNEL_UUID` varchar(45) DEFAULT NULL,
  `WORK_ID` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `ID_UNIQUE` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_cdr`
--

LOCK TABLES `report_cdr` WRITE;
/*!40000 ALTER TABLE `report_cdr` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_cdr` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_cdr_test`
--

DROP TABLE IF EXISTS `report_cdr_test`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_cdr_test` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CHANNEL_UUID` varchar(255) DEFAULT NULL,
  `CTI_CALL_UUID` varchar(255) DEFAULT NULL,
  `CTI_CALL_DIRECTION` varchar(255) DEFAULT NULL,
  `CTI_CC_DIRECTION` varchar(255) DEFAULT NULL,
  `ORIG_CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `ORIG_CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `ORIG_CALLER_TYPE` varchar(255) DEFAULT NULL,
  `CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `ACCOUNT_CODE` varchar(255) DEFAULT NULL,
  `CREAT_TIME` datetime DEFAULT NULL,
  `ANSWERED_TIME` datetime DEFAULT NULL,
  `CANCEL_TIME` datetime DEFAULT NULL,
  `ANSWERED` int(11) DEFAULT NULL,
  `ANSWERED1` varchar(255) DEFAULT NULL,
  `DURATION` int(11) DEFAULT NULL,
  `DURATION1` varchar(255) DEFAULT NULL,
  `BILLSEC` int(11) DEFAULT NULL,
  `BILLSEC1` varchar(255) DEFAULT NULL,
  `WAITSEC` int(11) DEFAULT NULL,
  `WAITSEC1` varchar(255) DEFAULT NULL,
  `HANGUP_CAUSE` varchar(255) DEFAULT NULL,
  `HANGUP_DISPOSITION` varchar(255) DEFAULT NULL,
  `HANGUP_DISPOSITION1` varchar(255) DEFAULT NULL,
  `QUEUE_COUNT` int(11) DEFAULT NULL,
  `QUEUE_TIME` int(11) DEFAULT NULL,
  `QUEUE_TIME1` varchar(255) DEFAULT NULL,
  `AGENT_COUNT` int(11) DEFAULT NULL,
  `AGENT_TIME` int(11) DEFAULT NULL,
  `AGENT_TIME1` varchar(255) DEFAULT NULL,
  `IVR_COUNT` int(11) DEFAULT NULL,
  `IVR_TIME` int(11) DEFAULT NULL,
  `IVR_TIME1` varchar(255) DEFAULT NULL,
  `CREAT_TIME_30M` datetime DEFAULT NULL,
  `ZH_CN` varchar(255) DEFAULT NULL,
  `FIRST_AGENT_TIME` datetime DEFAULT NULL,
  `AGENT_ID` varchar(255) DEFAULT NULL,
  `ORG_ID` varchar(45) DEFAULT NULL,
  `AGENT_NAME` varchar(45) DEFAULT NULL,
  `AGENT_SESSION_ID` varchar(45) DEFAULT NULL,
  `AGENT_CHANNEL_UUID` varchar(45) DEFAULT NULL,
  `WORK_ID` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `ID_UNIQUE` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_cdr_test`
--

LOCK TABLES `report_cdr_test` WRITE;
/*!40000 ALTER TABLE `report_cdr_test` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_cdr_test` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_channel_type`
--

DROP TABLE IF EXISTS `report_channel_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_channel_type` (
  `CTI_CHANNEL_TYPE` varchar(50) NOT NULL,
  `CTI_CHANNEL_TYPE_CHINESE` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`CTI_CHANNEL_TYPE`),
  UNIQUE KEY `NAME_UNIQUE` (`CTI_CHANNEL_TYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_channel_type`
--

LOCK TABLES `report_channel_type` WRITE;
/*!40000 ALTER TABLE `report_channel_type` DISABLE KEYS */;
INSERT INTO `report_channel_type` VALUES ('agent','座席'),('ext','办公分机'),('gw','外线');
/*!40000 ALTER TABLE `report_channel_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_cti_call_direction`
--

DROP TABLE IF EXISTS `report_cti_call_direction`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_cti_call_direction` (
  `CTI_CALL_DIRECTION` varchar(50) NOT NULL,
  `CTI_CALL_DIRECTION_CHINESE` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`CTI_CALL_DIRECTION`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_cti_call_direction`
--

LOCK TABLES `report_cti_call_direction` WRITE;
/*!40000 ALTER TABLE `report_cti_call_direction` DISABLE KEYS */;
INSERT INTO `report_cti_call_direction` VALUES ('inbound','呼入'),('inner','内呼'),('local','本地呼叫'),('outbound','呼出'),('rxfax','接收'),('txfax','发送');
/*!40000 ALTER TABLE `report_cti_call_direction` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_cti_general_kpi`
--

DROP TABLE IF EXISTS `report_cti_general_kpi`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_cti_general_kpi` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `TJDATE` datetime DEFAULT '0000-00-00 00:00:00',
  `CALLCOUNT` int(11) DEFAULT '0',
  `TURNCOUNT` int(11) DEFAULT '0',
  `TALKTIMECOUNT` int(11) DEFAULT '0',
  `INBOUNDCALLS` int(11) DEFAULT '0',
  `TRANSFERTOAGENTCALLS` int(11) DEFAULT '0',
  `BRIDGETOAGENTCALLS` int(11) DEFAULT '0',
  `VMCOUNT` int(11) DEFAULT '0',
  `SECINQUEUE` int(11) DEFAULT '0',
  `SECINQUEUECALL` int(11) DEFAULT '0',
  `SECINPOSTCALL` int(11) DEFAULT '0',
  `TOTALWORKTIME` int(11) DEFAULT '0',
  `SECONLINE` int(11) DEFAULT '0',
  `THROUGHRATE` int(11) DEFAULT '0',
  `CALLOUTCOUNT` int(11) DEFAULT '0',
  `TURNOUTCOUNT` int(11) DEFAULT '0',
  `CALLOUTTALKTIMECOUNT` int(11) DEFAULT '0',
  `SEATCALLOUTCOUNT` int(11) DEFAULT '0',
  `SEATTURNOUTCOUNT` int(11) DEFAULT '0',
  `SEATTALKTIMECOUNT` int(11) DEFAULT '0',
  `CALLINTIMECOUNT` int(11) DEFAULT '0',
  `TransferToAgentSuccCalls` int(11) DEFAULT '0',
  `INBOUNDSUCCCALLS` int(11) DEFAULT '0',
  `INBOUNDTALKTIMECOUNT` int(11) DEFAULT '0',
  `TRANSFERTOAGENTTALKTIMECOUNT` int(11) DEFAULT '0',
  `SETETALKTIMECOUNT` int(11) DEFAULT NULL,
  `ORG_ID` varchar(45) DEFAULT NULL,
  `ORG_NAME` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_cti_general_kpi`
--

LOCK TABLES `report_cti_general_kpi` WRITE;
/*!40000 ALTER TABLE `report_cti_general_kpi` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_cti_general_kpi` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_date`
--

DROP TABLE IF EXISTS `report_date`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_date` (
  `TJDATE` datetime NOT NULL,
  PRIMARY KEY (`TJDATE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_date`
--

LOCK TABLES `report_date` WRITE;
/*!40000 ALTER TABLE `report_date` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_date` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_hangup_disposition`
--

DROP TABLE IF EXISTS `report_hangup_disposition`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_hangup_disposition` (
  `HANGUP_DISPOSITION` varchar(50) NOT NULL,
  `HANGUP_DISPOSITION_CHINESE` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`HANGUP_DISPOSITION`),
  UNIQUE KEY `NAME_UNIQUE` (`HANGUP_DISPOSITION`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_hangup_disposition`
--

LOCK TABLES `report_hangup_disposition` WRITE;
/*!40000 ALTER TABLE `report_hangup_disposition` DISABLE KEYS */;
INSERT INTO `report_hangup_disposition` VALUES ('recv_bye','本端挂机'),('recv_cancel','本端取消'),('recv_refuse','本端拒绝'),('send_bye','对端挂机'),('send_cancel','对端取消'),('send_refuse','对端拒绝');
/*!40000 ALTER TABLE `report_hangup_disposition` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_lastcountdate`
--

DROP TABLE IF EXISTS `report_lastcountdate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_lastcountdate` (
  `tdate` datetime DEFAULT NULL,
  `type` varchar(255) NOT NULL,
  PRIMARY KEY (`type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_lastcountdate`
--

LOCK TABLES `report_lastcountdate` WRITE;
/*!40000 ALTER TABLE `report_lastcountdate` DISABLE KEYS */;
INSERT INTO `report_lastcountdate` VALUES ('2016-02-26 00:00:00','CTI_ACD_EVENT'),('2016-01-10 00:00:00','CTI_AGENT_ACTION'),('2016-02-11 00:00:00','CTI_AGENT_SESSION'),('2016-03-02 00:00:00','CTI_AGENT_STATE'),('2016-01-17 00:00:00','CTI_CHANNEL'),('2016-01-17 00:00:00','CTI_CHANNEL_EVENT'),('2015-06-06 00:00:00','CTI_CHANNEL_EXECUTE'),('2015-06-04 00:00:00','CTI_RECORD_FILES');
/*!40000 ALTER TABLE `report_lastcountdate` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_message_type`
--

DROP TABLE IF EXISTS `report_message_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_message_type` (
  `SUB_TYPE` varchar(40) NOT NULL,
  `SUB_TYPE_CH` varchar(45) NOT NULL,
  PRIMARY KEY (`SUB_TYPE`,`SUB_TYPE_CH`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_message_type`
--

LOCK TABLES `report_message_type` WRITE;
/*!40000 ALTER TABLE `report_message_type` DISABLE KEYS */;
INSERT INTO `report_message_type` VALUES ('click','点击'),('finish','完成'),('image','图片'),('location','本地'),('subscribe','关注'),('text','文本'),('video','视频'),('voice','语音');
/*!40000 ALTER TABLE `report_message_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_miscall`
--

DROP TABLE IF EXISTS `report_miscall`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_miscall` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `CANCEL_TIME` datetime DEFAULT NULL,
  `CREAT_TIME` datetime DEFAULT NULL,
  `CTI_CALL_UUID` varchar(255) DEFAULT NULL,
  `HANGUP_CAUSE` varchar(255) DEFAULT NULL,
  `HANGUP_DISPOSITION` varchar(255) DEFAULT NULL,
  `HANGUP_DISPOSITION1` varchar(255) DEFAULT NULL,
  `ORIG_CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `ORIG_CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `QUEUE` varchar(50) DEFAULT NULL,
  `ZH_CN` varchar(10) DEFAULT NULL,
  `ANSWERED_TIME` datetime DEFAULT NULL,
  `AGENTID` varchar(50) DEFAULT NULL,
  `AGENTNAME` varchar(50) DEFAULT NULL,
  `RECALLTIME` datetime DEFAULT NULL,
  `RECALLSTATE` varchar(50) DEFAULT NULL,
  `RECALLDESCRI` varchar(50) DEFAULT NULL,
  `RECALLPREFIX` varchar(10) DEFAULT NULL,
  `CALLFROM` varchar(50) DEFAULT NULL,
  `CALL_SK` varchar(50) DEFAULT NULL,
  `REDESCRIPTION` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_miscall`
--

LOCK TABLES `report_miscall` WRITE;
/*!40000 ALTER TABLE `report_miscall` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_miscall` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_org_agent_statetime`
--

DROP TABLE IF EXISTS `report_org_agent_statetime`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_org_agent_statetime` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `TJDATE` datetime DEFAULT '0000-00-00 00:00:00',
  `ORG_ID` varchar(45) DEFAULT NULL,
  `ORG_NAME` varchar(45) DEFAULT NULL,
  `ANSWERD` int(11) DEFAULT '0',
  `SECINPOSTCALL` int(11) DEFAULT '0',
  `SHORTBREAK` int(11) DEFAULT '0',
  `FREETIME` int(11) DEFAULT '0',
  `RINGING` int(11) DEFAULT '0',
  `NOTREADY` int(11) DEFAULT '0',
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM AUTO_INCREMENT=271 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_org_agent_statetime`
--

LOCK TABLES `report_org_agent_statetime` WRITE;
/*!40000 ALTER TABLE `report_org_agent_statetime` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_org_agent_statetime` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_plan_acd`
--

DROP TABLE IF EXISTS `report_plan_acd`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_plan_acd` (
  `STARTTIME` datetime DEFAULT NULL,
  `SUCCEDTIME` datetime DEFAULT NULL,
  `TYPE` varchar(45) NOT NULL,
  `STARTID` int(11) DEFAULT NULL,
  `SUCCEDID` int(11) DEFAULT NULL,
  `COMM` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`TYPE`),
  UNIQUE KEY `TYPE_UNIQUE` (`TYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_plan_acd`
--

LOCK TABLES `report_plan_acd` WRITE;
/*!40000 ALTER TABLE `report_plan_acd` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_plan_acd` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_plan_agentservices`
--

DROP TABLE IF EXISTS `report_plan_agentservices`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_plan_agentservices` (
  `STARTTIME` datetime NOT NULL,
  `SUCCEDTIME` datetime NOT NULL,
  `TYPE` varchar(255) NOT NULL,
  `STARTID` int(11) DEFAULT NULL,
  `SUCCEDID` int(11) DEFAULT NULL,
  `COMM` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`TYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_plan_agentservices`
--

LOCK TABLES `report_plan_agentservices` WRITE;
/*!40000 ALTER TABLE `report_plan_agentservices` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_plan_agentservices` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_plan_calleverdaycollect`
--

DROP TABLE IF EXISTS `report_plan_calleverdaycollect`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_plan_calleverdaycollect` (
  `STARTTIME` datetime DEFAULT NULL,
  `SUCCEDTIME` datetime DEFAULT NULL,
  `TYPE` varchar(45) NOT NULL,
  PRIMARY KEY (`TYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_plan_calleverdaycollect`
--

LOCK TABLES `report_plan_calleverdaycollect` WRITE;
/*!40000 ALTER TABLE `report_plan_calleverdaycollect` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_plan_calleverdaycollect` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_plan_cdr`
--

DROP TABLE IF EXISTS `report_plan_cdr`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_plan_cdr` (
  `STARTTIME` datetime DEFAULT NULL,
  `SUCCEDTIME` datetime DEFAULT NULL,
  `TYPE` varchar(45) NOT NULL,
  `STARTID` int(11) DEFAULT NULL,
  `SUCCEDID` int(11) DEFAULT NULL,
  `COMM` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`TYPE`),
  UNIQUE KEY `TYPE_UNIQUE` (`TYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_plan_cdr`
--

LOCK TABLES `report_plan_cdr` WRITE;
/*!40000 ALTER TABLE `report_plan_cdr` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_plan_cdr` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_plan_general_kpi`
--

DROP TABLE IF EXISTS `report_plan_general_kpi`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_plan_general_kpi` (
  `STARTTIME` datetime DEFAULT NULL,
  `SUCCEDTIME` datetime DEFAULT NULL,
  `TYPE` varchar(45) NOT NULL,
  PRIMARY KEY (`TYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_plan_general_kpi`
--

LOCK TABLES `report_plan_general_kpi` WRITE;
/*!40000 ALTER TABLE `report_plan_general_kpi` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_plan_general_kpi` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_plan_miscall`
--

DROP TABLE IF EXISTS `report_plan_miscall`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_plan_miscall` (
  `STARTTIME` datetime DEFAULT NULL,
  `SUCCEDTIME` datetime DEFAULT NULL,
  `TYPE` varchar(45) NOT NULL,
  `STARTID` int(11) DEFAULT NULL,
  `SUCCEDID` int(11) DEFAULT NULL,
  `COMM` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`TYPE`),
  UNIQUE KEY `TYPE_UNIQUE` (`TYPE`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_plan_miscall`
--

LOCK TABLES `report_plan_miscall` WRITE;
/*!40000 ALTER TABLE `report_plan_miscall` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_plan_miscall` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_plan_org_agent_statetime`
--

DROP TABLE IF EXISTS `report_plan_org_agent_statetime`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_plan_org_agent_statetime` (
  `STARTTIME` datetime DEFAULT NULL,
  `SUCCEDTIME` datetime DEFAULT NULL,
  `TYPE` varchar(45) NOT NULL,
  PRIMARY KEY (`TYPE`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_plan_org_agent_statetime`
--

LOCK TABLES `report_plan_org_agent_statetime` WRITE;
/*!40000 ALTER TABLE `report_plan_org_agent_statetime` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_plan_org_agent_statetime` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_plan_org_jx`
--

DROP TABLE IF EXISTS `report_plan_org_jx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_plan_org_jx` (
  `STARTTIME` datetime DEFAULT NULL,
  `SUCCEDTIME` datetime DEFAULT NULL,
  `TYPE` varchar(45) NOT NULL,
  PRIMARY KEY (`TYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_plan_org_jx`
--

LOCK TABLES `report_plan_org_jx` WRITE;
/*!40000 ALTER TABLE `report_plan_org_jx` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_plan_org_jx` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_plan_skill`
--

DROP TABLE IF EXISTS `report_plan_skill`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_plan_skill` (
  `STARTTIME` datetime DEFAULT NULL,
  `SUCCEDTIME` datetime DEFAULT NULL,
  `TYPE` varchar(45) NOT NULL,
  PRIMARY KEY (`TYPE`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_plan_skill`
--

LOCK TABLES `report_plan_skill` WRITE;
/*!40000 ALTER TABLE `report_plan_skill` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_plan_skill` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_plan_weixi_agent`
--

DROP TABLE IF EXISTS `report_plan_weixi_agent`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_plan_weixi_agent` (
  `STARTTIME` datetime DEFAULT NULL,
  `SUCCEDTIME` datetime DEFAULT NULL,
  `TYPE` varchar(45) NOT NULL,
  PRIMARY KEY (`TYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_plan_weixi_agent`
--

LOCK TABLES `report_plan_weixi_agent` WRITE;
/*!40000 ALTER TABLE `report_plan_weixi_agent` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_plan_weixi_agent` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_plan_weixi_company`
--

DROP TABLE IF EXISTS `report_plan_weixi_company`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_plan_weixi_company` (
  `STARTTIME` datetime DEFAULT NULL,
  `SUCCEDTIME` datetime DEFAULT NULL,
  `TYPE` varchar(45) NOT NULL,
  PRIMARY KEY (`TYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_plan_weixi_company`
--

LOCK TABLES `report_plan_weixi_company` WRITE;
/*!40000 ALTER TABLE `report_plan_weixi_company` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_plan_weixi_company` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_queue`
--

DROP TABLE IF EXISTS `report_queue`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_queue` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CTI_CALL_UUID` varchar(255) DEFAULT NULL,
  `MEMBER_UUID` varchar(255) DEFAULT NULL,
  `QUEUE` varchar(255) DEFAULT NULL,
  `CHANNEL_UUID` varchar(255) DEFAULT NULL,
  `CHANNEL_NAME` varchar(255) DEFAULT NULL,
  `CHANNEL_TYPE` varchar(255) DEFAULT NULL,
  `DIRECTION` varchar(255) DEFAULT NULL,
  `CTI_CALL_DIRECTION` varchar(255) DEFAULT NULL,
  `CTI_CC_DIRECTION` varchar(255) DEFAULT NULL,
  `ORIG_CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `ORIG_CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `CALLER_NUMBER` varchar(255) DEFAULT NULL,
  `CALLEE_NUMBER` varchar(255) DEFAULT NULL,
  `CANCEL_CAUSE` varchar(255) DEFAULT NULL,
  `IS_BRIDGE_AGENT` int(11) DEFAULT NULL,
  `START_TIME` datetime DEFAULT NULL,
  `BRIDGE_AGENT_TIME` datetime DEFAULT NULL,
  `CANCEL_TIME` datetime DEFAULT NULL,
  `DURATION` int(11) DEFAULT NULL,
  `DURATION1` varchar(255) DEFAULT NULL,
  `ORG_ID` varchar(255) DEFAULT NULL,
  `AGENT_ID` varchar(255) DEFAULT NULL,
  `AGENT_NAME` varchar(255) DEFAULT NULL,
  `AGENT_SESSION_ID` varchar(255) DEFAULT NULL,
  `AGENT_CHANNEL_UUID` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `ID_UNIQUE` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_queue`
--

LOCK TABLES `report_queue` WRITE;
/*!40000 ALTER TABLE `report_queue` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_queue` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_record_type`
--

DROP TABLE IF EXISTS `report_record_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_record_type` (
  `RECORD_TYPE` varchar(255) NOT NULL,
  `RECORD_TYPE_CHINESE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`RECORD_TYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_record_type`
--

LOCK TABLES `report_record_type` WRITE;
/*!40000 ALTER TABLE `report_record_type` DISABLE KEYS */;
INSERT INTO `report_record_type` VALUES ('agent','座席录音'),('ext','分机录音'),('vm','语音留言');
/*!40000 ALTER TABLE `report_record_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_skill`
--

DROP TABLE IF EXISTS `report_skill`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_skill` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `TJDATE` datetime DEFAULT NULL,
  `SKILL` varchar(60) DEFAULT NULL,
  `CALLCOUNT` int(11) DEFAULT '0',
  `TURNCOUNT` int(11) DEFAULT '0',
  `QUEUE_COUNT` int(11) DEFAULT '0',
  `QUEUE_SUCC_COUNT` int(11) DEFAULT '0',
  `QUEUE_TIME` int(11) DEFAULT '0',
  `ORG_ID` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=64123 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_skill`
--

LOCK TABLES `report_skill` WRITE;
/*!40000 ALTER TABLE `report_skill` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_skill` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_value`
--

DROP TABLE IF EXISTS `report_value`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_value` (
  `savedate_number` int(11) DEFAULT NULL,
  `transferdate_number` int(11) DEFAULT NULL,
  `type` varchar(100) NOT NULL,
  PRIMARY KEY (`type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_value`
--

LOCK TABLES `report_value` WRITE;
/*!40000 ALTER TABLE `report_value` DISABLE KEYS */;
INSERT INTO `report_value` VALUES (3,10,'CTI_ACD_EVENT'),(10,10,'CTI_AGENT_ACTION'),(10,10,'CTI_AGENT_SESSION'),(10,10,'CTI_AGENT_STATE'),(10,10,'CTI_CHANNEL'),(3,10,'CTI_CHANNEL_EVENT'),(10,10,'CTI_CHANNEL_EXECUTE'),(30,10,'CTI_RECORD_FILES');
/*!40000 ALTER TABLE `report_value` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_weixin_agent`
--

DROP TABLE IF EXISTS `report_weixin_agent`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_weixin_agent` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tjdate` datetime DEFAULT NULL,
  `org_id` varchar(45) DEFAULT NULL,
  `org_name` varchar(45) DEFAULT NULL,
  `agent_id` varchar(45) DEFAULT NULL,
  `agent_name` varchar(45) DEFAULT NULL,
  `send_count` int(11) DEFAULT '0',
  `recv_count` int(11) DEFAULT '0',
  `do_count` int(11) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_weixin_agent`
--

LOCK TABLES `report_weixin_agent` WRITE;
/*!40000 ALTER TABLE `report_weixin_agent` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_weixin_agent` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_weixin_company`
--

DROP TABLE IF EXISTS `report_weixin_company`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_weixin_company` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tjdate` varchar(45) DEFAULT 'DATETIME',
  `org_id` varchar(45) DEFAULT NULL,
  `org_name` varchar(45) DEFAULT NULL,
  `service_id` varchar(45) DEFAULT NULL,
  `weixin_type` varchar(45) DEFAULT NULL,
  `send_count` int(11) DEFAULT '0',
  `recv_count` int(11) DEFAULT '0',
  `do_count` int(11) DEFAULT '0',
  `total_count` int(11) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_weixin_company`
--

LOCK TABLES `report_weixin_company` WRITE;
/*!40000 ALTER TABLE `report_weixin_company` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_weixin_company` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `report_weixin_conpany`
--

DROP TABLE IF EXISTS `report_weixin_conpany`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `report_weixin_conpany` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tjdate` varchar(45) DEFAULT 'DATETIME',
  `org_id` varchar(45) DEFAULT NULL,
  `org_name` varchar(45) DEFAULT NULL,
  `service_id` varchar(45) DEFAULT NULL,
  `weixin_type` varchar(45) DEFAULT NULL,
  `send_count` int(11) DEFAULT '0',
  `recv_count` int(11) DEFAULT '0',
  `do_count` int(11) DEFAULT '0',
  `total_count` int(11) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `report_weixin_conpany`
--

LOCK TABLES `report_weixin_conpany` WRITE;
/*!40000 ALTER TABLE `report_weixin_conpany` DISABLE KEYS */;
/*!40000 ALTER TABLE `report_weixin_conpany` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `score_cti_record_files`
--

DROP TABLE IF EXISTS `score_cti_record_files`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `score_cti_record_files` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CTI_ID` varchar(50) DEFAULT NULL,
  `SERIALID` varchar(50) DEFAULT NULL,
  `SCORE_ID` varchar(50) DEFAULT NULL,
  `SCORE_NAME` varchar(255) DEFAULT NULL,
  `SCORE_VALUE` int(12) DEFAULT NULL,
  `SCORE_VCONTENT` mediumtext,
  `MAX_SCORE` int(11) DEFAULT '0',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `score_cti_record_files`
--

LOCK TABLES `score_cti_record_files` WRITE;
/*!40000 ALTER TABLE `score_cti_record_files` DISABLE KEYS */;
INSERT INTO `score_cti_record_files` VALUES (1,'143148',NULL,NULL,'恶劣事件',1,'1',10),(2,'143148',NULL,NULL,'业务知识',2,'2',20),(3,'143148',NULL,NULL,'问题解决',3,'3',10),(4,'143148',NULL,NULL,'操作规范',4,'4',10),(5,'143148',NULL,NULL,'营销意识',5,'5',10),(6,'143148',NULL,NULL,'沟通技巧',6,'6',10),(7,'143148',NULL,NULL,'服务用语',7,'7',10),(8,'143148',NULL,NULL,'服务态度',8,'8',20);
/*!40000 ALTER TABLE `score_cti_record_files` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `score_type`
--

DROP TABLE IF EXISTS `score_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `score_type` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `ORGNAME` varchar(255) DEFAULT NULL,
  `ORGID` int(11) DEFAULT NULL,
  `DOMAIN` varchar(50) DEFAULT NULL,
  `sname` varchar(255) DEFAULT NULL,
  `NUMBER` int(11) DEFAULT '0',
  `ORDERS` int(11) DEFAULT NULL,
  `ISENABLED` bit(1) DEFAULT NULL,
  `UPDATE_DATE` datetime DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `score_type`
--

LOCK TABLES `score_type` WRITE;
/*!40000 ALTER TABLE `score_type` DISABLE KEYS */;
INSERT INTO `score_type` VALUES (1,'默认',68,'default','恶劣事件',10,0,'',NULL),(2,'默认',68,'default','业务知识',20,0,'',NULL),(3,'默认',68,'default','问题解决',10,0,'',NULL),(4,'默认',68,'default','操作规范',10,0,'',NULL),(5,'默认',68,'default','营销意识',10,0,'',NULL),(6,'默认',68,'default','沟通技巧',10,0,'',NULL),(7,'默认',68,'default','服务用语',10,0,'',NULL),(8,'默认',68,'default','服务态度',20,0,'',NULL);
/*!40000 ALTER TABLE `score_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `service_eval_name`
--

DROP TABLE IF EXISTS `service_eval_name`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `service_eval_name` (
  `EVAL_DIGIT` int(17) DEFAULT NULL,
  `EVAL_NAME` varchar(45) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `service_eval_name`
--

LOCK TABLES `service_eval_name` WRITE;
/*!40000 ALTER TABLE `service_eval_name` DISABLE KEYS */;
/*!40000 ALTER TABLE `service_eval_name` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `service_experience`
--

DROP TABLE IF EXISTS `service_experience`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `service_experience` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `ORGNAME` varchar(255) DEFAULT NULL,
  `ORGID` int(11) DEFAULT NULL,
  `DOMAIN` varchar(50) DEFAULT NULL,
  `NAME` varchar(255) DEFAULT NULL,
  `ISENABLED` bit(1) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `service_experience`
--

LOCK TABLES `service_experience` WRITE;
/*!40000 ALTER TABLE `service_experience` DISABLE KEYS */;
INSERT INTO `service_experience` VALUES (1,'默认',68,'default','非常满意',''),(2,'默认',68,'default','满意',''),(3,'默认',68,'default','一般',''),(4,'默认',68,'default','不满意','');
/*!40000 ALTER TABLE `service_experience` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `servicedc`
--

DROP TABLE IF EXISTS `servicedc`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `servicedc` (
  `SRID` varchar(45) NOT NULL,
  `AgentID` varchar(45) DEFAULT NULL,
  `AgentSessionID` varchar(45) DEFAULT NULL,
  `ANI` varchar(45) DEFAULT NULL,
  `RecordTime` datetime DEFAULT NULL,
  `SelectValue` int(11) DEFAULT NULL,
  `SelectName` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`SRID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `servicedc`
--

LOCK TABLES `servicedc` WRITE;
/*!40000 ALTER TABLE `servicedc` DISABLE KEYS */;
/*!40000 ALTER TABLE `servicedc` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_config_log`
--

DROP TABLE IF EXISTS `t_config_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_config_log` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `ORGID` int(11) DEFAULT NULL,
  `ORGNAME` varchar(255) DEFAULT NULL,
  `DOMAIN` varchar(255) DEFAULT NULL,
  `USERID` int(11) DEFAULT NULL,
  `USERNAME` varchar(255) DEFAULT NULL,
  `PATH` varchar(255) DEFAULT NULL COMMENT 'xml路径',
  `TYPE_ID` int(11) DEFAULT NULL,
  `TYPE_NAME` varchar(255) DEFAULT NULL,
  `OPERATION` varchar(255) DEFAULT NULL COMMENT '增删查改',
  `IP` varchar(255) DEFAULT NULL,
  `ISENABLED` bit(1) DEFAULT b'1',
  `ISSUCCESS` bit(1) DEFAULT NULL,
  `DESCRIPTION` varchar(255) DEFAULT NULL,
  `CREATE_DATE` varchar(255) NOT NULL,
  `UPDATE_DATE` varchar(255) NOT NULL,
  `conf` varchar(255) DEFAULT NULL,
  `FLAG` varchar(255) NOT NULL DEFAULT '0',
  `action` varchar(255) DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  `url` varchar(255) DEFAULT NULL,
  `routeKey` varchar(255) DEFAULT NULL,
  `message` mediumtext,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_config_log`
--

LOCK TABLES `t_config_log` WRITE;
/*!40000 ALTER TABLE `t_config_log` DISABLE KEYS */;
/*!40000 ALTER TABLE `t_config_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_sys_log`
--

DROP TABLE IF EXISTS `t_sys_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_sys_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `orgid` int(11) DEFAULT NULL COMMENT '组织ID',
  `uid` int(11) DEFAULT NULL,
  `roleid` int(11) DEFAULT NULL,
  `username` varchar(255) DEFAULT '',
  `orgname` varchar(255) DEFAULT NULL,
  `rolename` varchar(255) DEFAULT NULL,
  `levelname` varchar(255) DEFAULT NULL,
  `mode` varchar(255) DEFAULT '',
  `operate` varchar(255) DEFAULT NULL,
  `result` varchar(255) DEFAULT '',
  `ip` varchar(255) DEFAULT '',
  `dateCreate` varchar(255) NOT NULL,
  `dateUpdate` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `luid` (`uid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_sys_log`
--

LOCK TABLES `t_sys_log` WRITE;
/*!40000 ALTER TABLE `t_sys_log` DISABLE KEYS */;
/*!40000 ALTER TABLE `t_sys_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_sys_menu`
--

DROP TABLE IF EXISTS `t_sys_menu`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_sys_menu` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `enname` varchar(255) DEFAULT NULL,
  `pId` int(11) DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `open` bit(1) DEFAULT b'0',
  `icon` varchar(255) DEFAULT NULL,
  `iconOpen` varchar(255) DEFAULT NULL,
  `iconClose` varchar(255) DEFAULT NULL,
  `code` varchar(255) DEFAULT NULL,
  `url` varchar(255) DEFAULT NULL,
  `enurl` varchar(255) DEFAULT NULL,
  `target` varchar(255) DEFAULT NULL,
  `remark` varchar(255) DEFAULT NULL,
  `createDate` varchar(255) DEFAULT NULL,
  `creater` varchar(255) DEFAULT NULL,
  `updateDate` varchar(255) DEFAULT NULL,
  `updater` varchar(255) DEFAULT NULL,
  `createIp` varchar(255) DEFAULT NULL,
  `updateIp` varchar(255) DEFAULT NULL,
  `orderid` int(11) DEFAULT '0',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=551 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_sys_menu`
--

LOCK TABLES `t_sys_menu` WRITE;
/*!40000 ALTER TABLE `t_sys_menu` DISABLE KEYS */;
INSERT INTO `t_sys_menu` VALUES (1,'菜单管理','Menu Manager',0,'不可删除','','','NULL','NULL','ROOT','NULL',NULL,'rightFrame','NULL','2014-09-26 08:19:22','admin','2014-09-26 08:19:22','admin','127.0.0.1','127.0.0.1',0),(420,'用户管理','User Manage',1,'','\0',NULL,'/upload/sys/menu/5.jpg',NULL,'SYSTEM','',NULL,'rightFrame','','2015-09-09 17:25','超级管理员','2016-04-14 09:44','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1',0),(422,'用户','User',420,'','\0',NULL,'/upload/sys/menu/6.jpg',NULL,'SYSTEM_USER','/findUser.do?fn=first','/findUser.do?fn=first','rightFrame','','2015-09-09 17:26','超级管理员','2016-04-12 18:44','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1',0),(423,'角色','Role',420,'','\0',NULL,'/upload/sys/menu/10.jpg',NULL,'SYSTEM_ROLE','/roleAction.do?fn=list','/roleAction.do?fn=list','rightFrame','','2015-09-09 17:27','超级管理员','2016-04-12 18:45','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1',0),(424,'权限','Authority',420,'','\0',NULL,'/upload/sys/menu/7.jpg',NULL,'SYSTEM_LEVEL','/jsp/sys/module/modulemain.jsp','/jsp/sys/module/modulemain.jsp','rightFrame','','2015-09-09 17:28','超级管理员','2016-04-12 18:45','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1',0),(425,'登陆日志','Login Log',420,'','\0',NULL,'/upload/sys/menu/8.jpg',NULL,'SYSTEM_SYSLOG','/LogAction.do?fn=list','/LogAction.do?fn=list','rightFrame','','2015-09-09 17:28','超级管理员','2016-04-12 18:45','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1',0),(426,'菜单管理','Menu Manager',420,'','\0',NULL,'/upload/sys/menu/9.jpg',NULL,'SYSTEM_MENU','/jsp/sys/menu/menumain.jsp','/jsp/sys/menu/menumain.jsp','rightFrame','','2015-09-09 17:29','超级管理员','2016-04-12 18:45','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1',0),(508,'呼叫统计','Call Statistics',1,'','\0',NULL,'/upload/sys/menu/1.png',NULL,'MYSQL_REPORT_CALL_STATICTIS','',NULL,'rightFrame','','2016-01-14 14:46','超级管理员','2016-04-12 18:43','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(509,'当日','Today',508,'','\0',NULL,'/upload/sys/menu/2.png',NULL,'MYSQL_REPORT_TODAY','',NULL,'rightFrame','','2016-01-14 14:47','超级管理员','2016-04-12 18:40','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(510,'历史','Hristory',508,'','\0',NULL,'/upload/sys/menu/2.png',NULL,'MYSQL_REPORT_HISTORY','',NULL,'rightFrame','','2016-01-14 14:47','超级管理员','2016-04-12 18:41','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(511,'详单','Specifications',508,'','\0',NULL,'/upload/sys/menu/2.png',NULL,'MYSQL_REPORT_DETAIL','',NULL,'rightFrame','','2016-01-14 14:48','超级管理员','2016-04-12 18:41','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(512,'座席','Agent',509,'','\0',NULL,'/upload/sys/menu/3.png',NULL,'MYSQL_REPORT_TODAY_AGENT','',NULL,'rightFrame','','2016-01-14 14:49','超级管理员','2016-04-12 18:46','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(513,'呼叫','Call',509,'','\0',NULL,'/upload/sys/menu/3.png',NULL,'MYSQL_REPORT_TODAY_CALL','',NULL,'rightFrame','','2016-01-14 14:51','超级管理员','2016-04-12 18:47','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(515,'座席状态统计','Agent State Statistic',512,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_TODAY_AGENT_MYCOMM_ZX_ZT','/ReportServer?reportlet=c8cpt/callcenter/today/agent/mycomm_zx_zt.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/today/agent/mycomm_zx_zt.cpt','rightFrame','','2016-01-14 14:53','超级管理员','2016-04-12 18:56','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(519,'呼叫统计','Call Statistics',513,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_TODAY_CALL_CTI_SYSTEM_CDR','/ReportServer?reportlet=c8cpt/callcenter/today/system/CTI_SYSTEM_CDR.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/today/system/CTI_SYSTEM_CDR.cpt','rightFrame','','2016-01-14 14:55','超级管理员','2016-04-12 18:57','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(520,'呼入统计','Incoming Call Statistics',513,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_TODAY_CALL_CTI_INBOUND','/ReportServer?reportlet=c8cpt/callcenter/today/system/CTI_INBOUND.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/today/system/CTI_INBOUND.cpt','rightFrame','','2016-01-14 14:56','超级管理员','2016-04-12 18:57','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(521,'呼出统计 ','Outgoing Statistics',513,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_TODAY_CALL_CTI_OUTBOUND','/ReportServer?reportlet=c8cpt/callcenter/today/system/CTI_OUTBOUND.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/today/system/CTI_OUTBOUND.cpt','rightFrame','','2016-01-14 14:57','超级管理员','2016-04-12 18:57','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(522,'内呼统计','Internal Call Statistics',513,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_TODAY_CALL_CTI_INNER','/ReportServer?reportlet=c8cpt/callcenter/today/system/CTI_INNER.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/today/system/CTI_INNER.cpt','rightFrame','','2016-01-14 14:58','超级管理员','2016-04-12 18:58','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(523,'呼叫统计(图)','Call Statistics (FIG.)',513,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_TODAY_CALL_CTI_SYSTEM_COUNT','/ReportServer?reportlet=c8cpt/callcenter/today/system/CTI_SYSTEM_COUNT.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/today/system/CTI_SYSTEM_COUNT.cpt','rightFrame','','2016-01-14 15:00','超级管理员','2016-04-12 18:58','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(526,'座席','Agent',510,'','\0',NULL,'/upload/sys/menu/3.png',NULL,'MYSQL_REPORT_HISTORY_AGENT','',NULL,'rightFrame','','2016-01-14 15:03','超级管理员','2016-04-12 18:47','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(527,'呼叫','Call',510,'','\0',NULL,'/upload/sys/menu/3.png',NULL,'MYSQL_REPORT_HISTORY_CALL','',NULL,'rightFrame','','2016-01-14 15:03','超级管理员','2016-04-12 18:47','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(529,'座席状态统计','Agent State Statistic',526,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_HISTORY_AGENT_MYCOMM_ZX_ZT','/ReportServer?reportlet=c8cpt/callcenter/history/agent/mycomm_zx_zt.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/history/agent/mycomm_zx_zt.cpt','rightFrame','','2016-01-14 15:05','超级管理员','2016-04-12 18:54','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(530,'座席绩效统计','Agent Performance Statistics',526,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_HISTORY_AGENT_AGENTJX','/ReportServer?reportlet=c8cpt/callcenter/history/agent/agentjx.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/history/agent/agentjx.cpt','rightFrame','','2016-01-14 15:06','超级管理员','2016-04-12 18:54','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(534,'呼叫统计 ','Call Statistics',527,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_HISTORY_CALL_CTI_SYSTEM_CDR','/ReportServer?reportlet=c8cpt/callcenter/history/system/CTI_SYSTEM_CDR.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/history/system/CTI_SYSTEM_CDR.cpt','rightFrame','','2016-01-14 15:10','超级管理员','2016-04-12 18:54','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(535,'呼入统计','Incoming Call Statistics',527,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_HISTORY_CALL_CTI_INBOUND','/ReportServer?reportlet=c8cpt/callcenter/history/system/CTI_INBOUND.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/history/system/CTI_INBOUND.cpt','rightFrame','','2016-01-14 15:11','超级管理员','2016-04-12 18:54','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(536,'呼出统计','Outgoing Statistics',527,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_HISTORY_CALL_CTI_OUTBOUND','/ReportServer?reportlet=c8cpt/callcenter/history/system/CTI_OUTBOUND.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/history/system/CTI_OUTBOUND.cpt','rightFrame','','2016-01-14 15:12','超级管理员','2016-04-12 18:55','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(537,'内呼统计','Internal Call Statistics',527,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_HISTORY_CALL_CTI_INNER','/ReportServer?reportlet=c8cpt/callcenter/history/system/CTI_INNER.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/history/system/CTI_INNER.cpt','rightFrame','','2016-01-14 15:15','超级管理员','2016-04-12 18:55','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(538,'呼叫统计(图)','Call statistics (FIG.)',527,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_HISTORY_CALL_CTI_SYSTEM_COUNT','/ReportServer?reportlet=c8cpt/callcenter/history/system/CTI_SYSTEM_COUNT.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/history/system/CTI_SYSTEM_COUNT.cpt','rightFrame','','2016-01-14 15:16','超级管理员','2016-04-12 18:56','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(539,'系统绩效统计','Seating performance statistics',527,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_HISTORY_CALL_REPORT_GENERAL_KPI_SYSTEM','/ReportServer?reportlet=c8cpt/callcenter/history/system/REPORT_GENERAL_KPI_SYSTEM.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/history/system/REPORT_GENERAL_KPI_SYSTEM.cpt','rightFrame','','2016-01-14 15:17','超级管理员','2016-04-12 18:56','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(540,'座席','Agent',511,'','\0',NULL,'/upload/sys/menu/3.png',NULL,'MYSQL_REPORT_DETAIL_AGENT','',NULL,'rightFrame','','2016-01-14 15:22','超级管理员','2016-04-12 18:48','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(541,'签入记录','Check-in Record',540,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_DETAIL_AGENT_AGENTQR','/ReportServer?reportlet=c8cpt/callcenter/detail/Agentqr.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/detail/Agentqr.cpt','rightFrame','','2016-01-14 15:23','超级管理员','2016-04-12 18:51','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(542,'操作记录','Operation Records',540,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_DETAIL_AGENT_AGENTCZ','/ReportServer?reportlet=c8cpt/callcenter/detail/Agentcz.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/detail/Agentcz.cpt','rightFrame','','2016-01-14 15:24','超级管理员','2016-04-12 18:51','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(543,'状态记录','State Records',540,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_DETAIL_AGENT_AGENTSTATE','/ReportServer?reportlet=c8cpt/callcenter/detail/AgentState.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/detail/AgentState.cpt','rightFrame','','2016-01-14 15:25','超级管理员','2016-04-12 18:51','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(544,'呼叫','Call',511,'','\0',NULL,'/upload/sys/menu/3.png',NULL,'MYSQL_REPORT_DETAIL_CALL','',NULL,'rightFrame','','2016-01-14 15:25','超级管理员','2016-04-12 18:48','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(545,'呼叫详单','Call Details',544,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_DETAIL_CALL_REPORT_CDR','/ReportServer?reportlet=c8cpt/platform/detail/REPORT_CDR.cpt','/ReportServer?reportlet=c8cpt_en/platform/detail/REPORT_CDR.cpt','rightFrame','','2016-01-14 15:26','超级管理员','2016-04-12 18:49','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(546,'未接来电','Did not call',544,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_DETAIL_CALL_CTI_REPORT_MISSCALL','/ReportServer?reportlet=c8cpt/callcenter/detail/CTI_REPORT_MISSCALL.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/detail/CTI_REPORT_MISSCALL.cpt','rightFrame','','2016-01-14 15:27','超级管理员','2016-04-12 18:50','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(547,'排队记录','Line up record',544,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_DETAIL_CALL_ACD','/ReportServer?reportlet=c8cpt/callcenter/detail/ACD.cpt','/ReportServer?reportlet=c8cpt_en/callcenter/detail/ACD.cpt','rightFrame','','2016-01-14 15:27','超级管理员','2016-04-12 18:50','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(548,'通道记录','Channel record',544,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_DETAIL_CALL_CTI_CHANNEL','/ReportServer?reportlet=c8cpt/platform/detail/CTI_CHANNEL.cpt','/ReportServer?reportlet=c8cpt_en/platform/detail/CTI_CHANNEL.cpt','rightFrame','','2016-01-14 15:28','超级管理员','2016-04-12 18:50','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0),(550,'录音记录','recordings',544,'','\0',NULL,'/upload/sys/menu/4.png',NULL,'MYSQL_REPORT_DETAIL_CALL_CTI_RECORD_FILES','/ReportServer?reportlet=c8cpt/platform/detail/CTI_RECORD_FILES.cpt','/ReportServer?reportlet=c8cpt_en/platform/detail/CTI_RECORD_FILES.cpt','rightFrame','','2016-01-14 15:32','超级管理员','2016-04-12 18:50','superadmin','10.1.3.6','0:0:0:0:0:0:0:1',0);
/*!40000 ALTER TABLE `t_sys_menu` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_sys_menu1`
--

DROP TABLE IF EXISTS `t_sys_menu1`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_sys_menu1` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `pId` int(11) DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `open` bit(1) DEFAULT b'0',
  `icon` varchar(255) DEFAULT NULL,
  `iconOpen` varchar(255) DEFAULT NULL,
  `iconClose` varchar(255) DEFAULT NULL,
  `code` varchar(255) DEFAULT NULL,
  `url` varchar(255) DEFAULT NULL,
  `target` varchar(255) DEFAULT NULL,
  `remark` varchar(255) DEFAULT NULL,
  `createDate` varchar(255) DEFAULT NULL,
  `creater` varchar(255) DEFAULT NULL,
  `updateDate` varchar(255) DEFAULT NULL,
  `updater` varchar(255) DEFAULT NULL,
  `createIp` varchar(255) DEFAULT NULL,
  `updateIp` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=141 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_sys_menu1`
--

LOCK TABLES `t_sys_menu1` WRITE;
/*!40000 ALTER TABLE `t_sys_menu1` DISABLE KEYS */;
INSERT INTO `t_sys_menu1` VALUES (1,'根菜单',0,'不可删除','','',NULL,NULL,'ROOT',NULL,'rightFrame',NULL,'2014-09-26 08:19:22','admin','2014-09-26 08:19:22','admin','127.0.0.1','127.0.0.1'),(40,'网关',1,'','\0',NULL,NULL,NULL,'GATEWAY','/gateway.do?fn=list','rightFrame','','2014-12-02 10:45','admin','2014-12-02 10:45','admin','127.0.0.1','127.0.0.1'),(41,'路由',1,'','\0',NULL,NULL,NULL,'ROUTE','','rightFrame','','2014-12-02 10:47','admin','2014-12-02 10:47','admin','127.0.0.1','127.0.0.1'),(42,'接入号码',41,'','\0',NULL,NULL,NULL,'ROUTE_ACCESSNUMBER','/access.do?fn=list','rightFrame','','2014-12-02 10:52','admin','2014-12-02 10:52','admin','127.0.0.1','127.0.0.1'),(43,'拨号计划',41,'','\0',NULL,NULL,NULL,'ROUTE_CALLPLAN','/routeCallPlanAction.do?fn=list&type=3','rightFrame','','2014-12-02 10:53','admin','2014-12-02 10:53','admin','127.0.0.1','127.0.0.1'),(44,'呼入路由',41,'','\0',NULL,NULL,NULL,'ROUTE_INTERNAL','/routeInternalAction.do?fn=list&type=2','rightFrame','','2014-12-02 10:54','admin','2014-12-02 10:54','admin','127.0.0.1','127.0.0.1'),(45,'呼出路由',41,'','\0',NULL,NULL,NULL,'ROUTE_EXTERNAL','/routeExternalAction.do?fn=list&type=1','rightFrame','','2014-12-02 10:54','admin','2014-12-02 10:54','admin','127.0.0.1','127.0.0.1'),(46,'分机',1,'','\0',NULL,NULL,NULL,'EXTENSION','/extension.do?fn=list','rightFrame','','2014-12-02 10:57','admin','2014-12-02 10:57','admin','127.0.0.1','127.0.0.1'),(47,'座席',1,'','\0',NULL,NULL,NULL,'AGENT','/agent.do?fn=list','rightFrame','','2014-12-02 11:00','admin','2014-12-02 11:00','admin','127.0.0.1','127.0.0.1'),(48,'技能组',1,'','\0',NULL,NULL,NULL,'QUEUE','/queue.do?fn=list','rightFrame','','2014-12-02 11:01','admin','2014-12-02 11:01','admin','127.0.0.1','127.0.0.1'),(49,'IVR',1,'','\0',NULL,NULL,NULL,'IVR','','rightFrame','','2014-12-02 11:03','admin','2014-12-02 11:03','admin','127.0.0.1','127.0.0.1'),(50,'IVR流程',49,'','\0',NULL,NULL,NULL,'IVR_IVRCONFIG','/ivrmenu.do?fn=list','rightFrame','','2014-12-02 11:04','admin','2014-12-02 11:04','admin','127.0.0.1','127.0.0.1'),(51,'语音文件',49,'','\0',NULL,NULL,NULL,'IVR_IVRSOUND','/ivrsound.do?fn=list','rightFrame','','2014-12-02 11:04','admin','2014-12-02 11:04','admin','127.0.0.1','127.0.0.1'),(52,'保持音',1,'','\0',NULL,NULL,NULL,'VOICEHOLD','/voicehold.do?fn=list','rightFrame','','2014-12-02 11:05','admin','2014-12-02 11:05','admin','127.0.0.1','127.0.0.1'),(53,'传真号码',1,'','\0',NULL,NULL,NULL,'FAX','/fax.do?fn=list','rightFrame','','2014-12-02 11:07','admin','2014-12-02 11:07','admin','127.0.0.1','127.0.0.1'),(54,'语音信箱',1,'','\0',NULL,NULL,NULL,'VOICEBOX','/voicebox.do?fn=list','rightFrame','','2014-12-02 11:07','admin','2014-12-02 11:07','admin','127.0.0.1','127.0.0.1'),(55,'黑名单',1,'','\0',NULL,NULL,NULL,'BLACKLIST','/blacklist.do?fn=list','rightFrame','','2014-12-02 11:09','admin','2014-12-02 11:09','admin','127.0.0.1','127.0.0.1'),(56,'系统资源',1,'','\0',NULL,NULL,NULL,'SYS_AUTHOR_SRC','/appres.do?fn=list','rightFrame','','2014-12-02 11:10','admin','2014-12-02 11:10','admin','127.0.0.1','127.0.0.1'),(57,'系统接口授权',1,'','\0',NULL,NULL,NULL,'SYS_AUTHOR_INTERFACE','/app.do?fn=list','rightFrame','','2014-12-02 11:12','admin','2014-12-02 11:12','admin','127.0.0.1','127.0.0.1'),(58,'配置更新',1,'','\0',NULL,NULL,NULL,'CONFIG','','rightFrame','','2014-12-02 11:14','admin','2014-12-02 11:14','admin','127.0.0.1','127.0.0.1'),(59,'消息服务器设置',58,'','\0',NULL,NULL,NULL,'CONFIG_RABBITMQCONFIG','/mqConfig.do?fn=list','rightFrame','','2014-12-02 11:15','admin','2014-12-02 11:15','admin','127.0.0.1','127.0.0.1'),(60,'配置日志',58,'','\0',NULL,NULL,NULL,'CONFIG_LOG','/configLog.do?fn=list','rightFrame','','2014-12-02 11:18','admin','2014-12-02 11:18','admin','127.0.0.1','127.0.0.1'),(64,'系统功能',1,'','\0',NULL,NULL,NULL,'SYSTEM','','rightFrame','','2014-12-02 11:51','admin','2014-12-02 11:51','admin','127.0.0.1','127.0.0.1'),(66,'组织机构',64,'','\0',NULL,NULL,NULL,'SYSTEM_ORGANIZATION','/jsp/sys/org/orgmain.jsp','rightFrame','','2014-12-02 11:59','admin','2014-12-02 11:59','admin','127.0.0.1','127.0.0.1'),(67,'用户',64,'','\0',NULL,NULL,NULL,'SYSTEM_USER','/findUser.do?fn=first','rightFrame','','2014-12-02 14:20','admin','2014-12-04 18:20','超级管理员2','127.0.0.1','127.0.0.1'),(68,'角色',64,'','\0',NULL,NULL,NULL,'SYSTEM_ROLE','/roleAction.do?fn=list','rightFrame','','2014-12-02 14:21','admin','2014-12-02 14:21','admin','127.0.0.1','127.0.0.1'),(69,'权限',64,'','\0',NULL,NULL,NULL,'SYSTEM_LEVEL','/jsp/sys/module/modulemain.jsp','rightFrame','','2014-12-02 14:22','admin','2014-12-02 14:22','admin','127.0.0.1','127.0.0.1'),(70,'系统日志',64,'','\0',NULL,NULL,NULL,'SYSTEM_SYSLOG','/LogAction.do?fn=list','rightFrame','','2014-12-02 14:23','admin','2014-12-02 14:23','admin','127.0.0.1','127.0.0.1'),(71,'菜单管理',64,'','\0',NULL,NULL,NULL,'SYSTEM_MENU','/jsp/sys/menu/menumain.jsp','rightFrame','','2014-12-02 14:24','admin','2014-12-02 14:24','admin','127.0.0.1','127.0.0.1'),(73,'全局路由',41,'','\0',NULL,NULL,NULL,'ROUTE_GLOBAL','/routeGlobalAction.do?fn=list&type=4','rightFrame','','2014-10-30 13:14','dsfs','2014-10-30 13:14','dsfs','192.168.1.158','192.168.1.158'),(74,'平台统计',1,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM','','rightFrame','','2014-12-19 17:13','dsfs','2014-12-19 17:29','dsfs','127.0.0.1','127.0.0.1'),(75,'呼叫中心统计',1,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER','','rightFrame','','2014-12-19 17:28','dsfs','2014-12-19 17:28','dsfs','127.0.0.1','127.0.0.1'),(76,'办公分机统计',1,'','\0',NULL,NULL,NULL,'REPORT_EXT','','rightFrame','','2014-12-19 17:30','dsfs','2014-12-19 17:30','dsfs','127.0.0.1','127.0.0.1'),(77,'当日',74,'当日统计','\0',NULL,NULL,NULL,'REPORT_PLATFORM_TODAY','','rightFrame','','2014-12-19 17:35','dsfs','2014-12-19 17:35','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(78,'历史',74,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_HISTORY','','rightFrame','','2014-12-19 17:36','dsfs','2014-12-19 17:36','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(79,'详单',74,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_DETAIL','','rightFrame','','2014-12-19 17:37','dsfs','2014-12-19 17:37','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(80,'当日',75,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_TODAY','','rightFrame','','2014-12-19 17:39','dsfs','2014-12-19 17:39','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(81,'历史',75,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_HISTORY','','rightFrame','','2014-12-19 17:40','dsfs','2014-12-19 17:40','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(82,'详单',75,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_DETAIL','','rightFrame','','2014-12-19 17:41','dsfs','2014-12-19 17:41','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(83,'当日',76,'','\0',NULL,NULL,NULL,'REPORT_EXT_TODAY','','rightFrame','','2014-12-19 17:41','dsfs','2014-12-19 17:41','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(84,'历史',76,'','\0',NULL,NULL,NULL,'REPORT_EXT_HISTORY','','rightFrame','','2014-12-19 17:42','dsfs','2014-12-19 17:42','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(85,'详单',76,'','\0',NULL,NULL,NULL,'REPORT_EXT_DETAIL','','rightFrame','','2014-12-19 17:43','dsfs','2014-12-19 17:43','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(86,'系统统计',77,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_TODAY_SYSTEM','','rightFrame','','2014-12-19 17:48','dsfs','2014-12-19 17:48','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(87,'传真统计',77,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_TODAY_FAX','','rightFrame','','2014-12-19 17:48','dsfs','2014-12-19 17:48','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(88,'语音信箱统计',77,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_TODAY_VM','','rightFrame','','2014-12-19 17:49','dsfs','2014-12-19 17:49','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(89,'系统统计',78,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_HISTORY_SYSTEM','','rightFrame','','2014-12-19 17:50','dsfs','2014-12-19 17:50','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(90,'传真统计',78,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_HISTORY_FAX','','rightFrame','','2014-12-19 17:51','dsfs','2014-12-19 17:51','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(91,'语音信箱统计',78,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_HISTORY_VM','','rightFrame','','2014-12-19 17:52','dsfs','2014-12-19 17:52','dsfs','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(92,'通道记录',79,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_DETAIL_CHANNEL','/ReportServer?reportlet=C8_1_mysql/platform/detail/CTI_CHANNEL.cpt','rightFrame','','2014-12-19 17:56','dsfs','2014-11-02 19:39','dsfs','0:0:0:0:0:0:0:1','192.168.1.159'),(93,'呼叫详单',79,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_DETAIL_CDR','/ReportServer?reportlet=C8_1_mysql/platform/detail/REPORT_CDR.cpt','rightFrame','','2014-12-19 17:56','dsfs','2014-12-20 18:45','dsfs','0:0:0:0:0:0:0:1','192.168.1.159'),(94,'传真记录',79,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_DETAIL_FAX','/ReportServer?reportlet=C8_1_mysql/platform/detail/REPORT_FAX.cpt','rightFrame','','2014-12-19 17:57','dsfs','2014-12-20 18:47','dsfs','0:0:0:0:0:0:0:1','192.168.1.159'),(95,'IVR应答',79,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_DETAIL_IVR','/ReportServer?reportlet=C8_1_mysql/platform/detail/REPORT_IVR.cpt','rightFrame','','2014-12-19 17:57','dsfs','2014-12-20 18:47','dsfs','0:0:0:0:0:0:0:1','192.168.1.159'),(96,'未接来电',79,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_DETAIL_MISSCALL','/ReportServer?reportlet=C8_1_mysql/platform/detail/REPORT_CDRMISSCALL.cpt','rightFrame','','2014-12-19 17:58','dsfs','2014-12-20 18:46','dsfs','0:0:0:0:0:0:0:1','192.168.1.159'),(97,'语音信箱',79,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_DETAIL_VM','/ReportServer?reportlet=C8_1_mysql/platform/detail/REPORT_VM.cpt','rightFrame','','2014-12-19 18:00','dsfs','2014-12-20 18:48','dsfs','0:0:0:0:0:0:0:1','192.168.1.159'),(98,'座席',82,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_DETAIL_AGENT','','rightFrame','','2014-12-20 17:28','dsfs','2014-12-20 17:28','dsfs','192.168.1.159','192.168.1.159'),(99,'呼叫',82,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_DETAIL_CALL','','rightFrame','','2014-12-20 17:29','dsfs','2014-12-20 17:29','dsfs','192.168.1.159','192.168.1.159'),(100,'签入记录',98,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_DETAIL_AGENT_CHECKIN','/ReportServer?reportlet=C8_1_mysql/callcenter/detail/Agentqr.cpt','rightFrame','','2014-12-20 17:33','dsfs','2014-12-20 17:59','dsfs','192.168.1.159','192.168.1.159'),(101,'操作记录',98,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_DETAIL_AGENT_ACTION','/ReportServer?reportlet=C8_1_mysql/callcenter/detail/Agentcz.cpt','rightFrame','','2014-12-20 17:34','dsfs','2014-12-20 18:00','dsfs','192.168.1.159','192.168.1.159'),(102,'状态记录',98,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_DETAIL_AGENT_STATUS','/ReportServer?reportlet=C8_1_mysql/callcenter/detail/AgentState.cpt','rightFrame','','2014-12-20 17:35','dsfs','2014-12-20 18:01','dsfs','192.168.1.159','192.168.1.159'),(103,'服务记录',98,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_DETAIL_AGENT_SERVICE','/ReportServer?reportlet=C8_1_mysql/callcenter/detail/AgentService.cpt','rightFrame','','2014-12-20 17:36','dsfs','2014-12-20 18:08','dsfs','192.168.1.159','192.168.1.159'),(104,'未接来电',98,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_DETAIL_AGENT_MISCALL','/ReportServer?reportlet=C8_1_mysql/callcenter/detail/AgentMissCalled.cpt','rightFrame','','2014-12-20 17:36','dsfs','2014-12-20 18:02','dsfs','192.168.1.159','192.168.1.159'),(105,'呼叫详单',99,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_DETAIL_CALL_CDR','/ReportServer?reportlet=C8_1_mysql/callcenter/detail/CTI_REPORT_CDR.cpt','rightFrame','','2014-12-20 17:38','dsfs','2014-12-20 17:57','dsfs','192.168.1.159','192.168.1.159'),(106,'未接来电',99,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_DETAIL_CALL_MISSCALL','/ReportServer?reportlet=C8_1_mysql/callcenter/detail/CTI_REPORT_MISSCALL.cpt','rightFrame','','2014-12-20 17:39','dsfs','2014-12-20 18:03','dsfs','192.168.1.159','192.168.1.159'),(107,'排队记录',99,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_DETAIL_CALL_ACD','/ReportServer?reportlet=C8_1_mysql/callcenter/detail/ACD.cpt','rightFrame','','2014-12-20 17:40','dsfs','2014-12-20 18:04','dsfs','192.168.1.159','192.168.1.159'),(108,'呼叫详单',85,'','\0',NULL,NULL,NULL,'REPORT_EXT_DETAIL_CDR','/ReportServer?reportlet=C8_1_mysql/ext/detail/REPORT_CDR_EXT.cpt','rightFrame','','2014-12-20 18:29','dsfs','2014-12-20 18:29','dsfs','192.168.1.159','192.168.1.159'),(109,'电话分机记录',85,'','\0',NULL,NULL,NULL,'REPORT_EXT_DETAIL_EXT','/ReportServer?reportlet=C8_1_mysql/ext/detail/CTI_WORK_EXT.cpt','rightFrame','','2014-12-20 18:29','dsfs','2014-12-22 11:15','dsfs','192.168.1.159','192.168.1.159'),(110,'分机未接来电',85,'','\0',NULL,NULL,NULL,'REPORT_EXT_DETAIL_MISSCALL','/ReportServer?reportlet=C8_1_mysql/ext/detail/REPORT_EXT_MISSCALL.cpt','rightFrame','','2014-12-20 18:30','dsfs','2014-12-20 18:30','dsfs','192.168.1.159','192.168.1.159'),(111,'呼叫统计',86,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_TODAY_SYSTEM_CALL','/ReportServer?reportlet=C8_1_mysql/platform/today/system/CTI_SYSTEM_CDR.cpt','rightFrame','','2014-12-22 09:49','dsfs','2014-12-22 10:46','dsfs','192.168.1.159','192.168.1.159'),(112,'呼入统计',86,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_TODAY_SYSTEM_IN','/ReportServer?reportlet=C8_1_mysql/platform/today/system/CTI_INBOUND.cpt','rightFrame','','2014-12-22 09:50','dsfs','2014-12-22 10:47','dsfs','192.168.1.159','192.168.1.159'),(113,'呼出统计',86,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_TODAY_SYSTEM_OUT','/ReportServer?reportlet=C8_1_mysql/platform/today/system/CTI_OUTBOUND.cpt','rightFrame','','2014-12-22 10:29','dsfs','2014-12-22 10:48','dsfs','192.168.1.159','192.168.1.159'),(114,'本地呼叫',86,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_TODAY_SYSTEM_LOCAL','/ReportServer?reportlet=C8_1_mysql/platform/today/system/CTI_LOCAL.cpt','rightFrame','','2014-12-22 09:51','dsfs','2014-12-22 10:49','dsfs','192.168.1.159','192.168.1.159'),(115,'呼叫统计',89,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_HISTORY_SYSTEM_CALL','/ReportServer?reportlet=C8_1_mysql/platform/history/system/CTI_SYSTEM_CDR.cpt','rightFrame','','2014-12-22 09:53','dsfs','2014-12-22 10:54','dsfs','192.168.1.159','192.168.1.159'),(116,'呼入统计',89,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_HISTORY_SYSTEM_IN','/ReportServer?reportlet=C8_1_mysql/platform/history/system/CTI_INBOUND.cpt','rightFrame','','2014-12-22 09:53','dsfs','2014-12-22 09:53','dsfs','192.168.1.159','192.168.1.159'),(117,'呼出统计',89,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_HISTORY_SYSTEM_OUT','/ReportServer?reportlet=C8_1_mysql/platform/history/system/','rightFrame','','2014-12-22 09:54','dsfs','2014-12-22 09:54','dsfs','192.168.1.159','192.168.1.159'),(118,'本地呼叫统计',89,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_HISTORY_SYSTEM_LOCAL','/ReportServer?reportlet=C8_1_mysql/platform/history/system/CTI_OUTBOUND.cpt','rightFrame','','2014-12-22 09:54','dsfs','2014-12-22 09:55','dsfs','192.168.1.159','192.168.1.159'),(119,'呼叫统计(图)',89,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_HISTORY_SYSTEM_CALLPHOTO','/ReportServer?reportlet=C8_1_mysql/platform/history/system/CTI_SYSTEM_COUNT.cpt','rightFrame','','2014-12-22 09:56','dsfs','2014-12-22 09:56','dsfs','192.168.1.159','192.168.1.159'),(120,'分机呼叫统计',83,'','\0',NULL,NULL,NULL,'REPORT_EXT_TODAY_CALL','/ReportServer?reportlet=C8_1_mysql/ext/today/CTI_SYSTEM_EXT.cpt','rightFrame','','2014-12-22 09:58','dsfs','2014-12-22 11:17','dsfs','192.168.1.159','192.168.1.159'),(121,'分机呼入统计',83,'','\0',NULL,NULL,NULL,'REPORT_EXT_TODAY_IN','/ReportServer?reportlet=C8_1_mysql/ext/today/CTI_SYSTEM_EXT_INBOUND.cpt','rightFrame','','2014-12-22 09:59','dsfs','2014-12-22 09:59','dsfs','192.168.1.159','192.168.1.159'),(122,'分机呼出统计',83,'','\0',NULL,NULL,NULL,'REPORT_EXT_TODAY_OUT','/ReportServer?reportlet=C8_1_mysql/ext/today/CTI_SYSTEM_EXT_OUTBOUND.cpt','rightFrame','','2014-12-22 10:00','dsfs','2014-12-22 10:00','dsfs','192.168.1.159','192.168.1.159'),(123,'分机本地呼叫统计',83,'','\0',NULL,NULL,NULL,'REPORT_EXT_TODAY_LOCAL','/ReportServer?reportlet=C8_1_mysql/ext/today/CTI_SYSTEM_EXT_LOCAL.cpt','rightFrame','','2014-12-22 10:00','dsfs','2014-12-22 10:00','dsfs','192.168.1.159','192.168.1.159'),(124,'分机呼叫统计',84,'','\0',NULL,NULL,NULL,'REPORT_EXT_HISTORY_CALL','/ReportServer?reportlet=C8_1_mysql/ext/history/CTI_SYSTEM_EXT.cpt','rightFrame','','2014-12-22 10:01','dsfs','2014-12-22 10:01','dsfs','192.168.1.159','192.168.1.159'),(125,'分机呼入统计',84,'','\0',NULL,NULL,NULL,'REPORT_EXT_HISTORY_IN','/ReportServer?reportlet=C8_1_mysql/ext/history/CTI_SYSTEM_EXT_INBOUND.cpt','rightFrame','','2014-12-22 10:02','dsfs','2014-12-22 10:02','dsfs','192.168.1.159','192.168.1.159'),(126,'分机呼出统计',84,'','\0',NULL,NULL,NULL,'REPORT_EXT_HISTORY_OUT','/ReportServer?reportlet=C8_1_mysql/ext/history/CTI_SYSTEM_EXT_OUTBOUND.cpt','rightFrame','','2014-12-22 10:02','dsfs','2014-12-22 10:02','dsfs','192.168.1.159','192.168.1.159'),(127,'分机本地呼叫统计',84,'','\0',NULL,NULL,NULL,'REPORT_EXT_HISTORY_LOCAL','/ReportServer?reportlet=C8_1_mysql/ext/history/CTI_SYSTEM_EXT_LOCAL.cpt','rightFrame','','2014-12-22 10:03','dsfs','2014-12-22 10:03','dsfs','192.168.1.159','192.168.1.159'),(128,'呼叫统计',138,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_TODAY_CALL','/ReportServer?reportlet=C8_1_mysql/callcenter/today/system/CTI_SYSTEM_CDR.cpt','rightFrame','','2014-12-22 10:04','dsfs','2014-12-22 11:03','dsfs','192.168.1.159','192.168.1.159'),(129,'呼入统计',138,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_TODAY_IN','/ReportServer?reportlet=C8_1_mysql/callcenter/today/system/CTI_INBOUND.cpt','rightFrame','','2014-12-22 10:05','dsfs','2014-12-22 10:05','dsfs','192.168.1.159','192.168.1.159'),(130,'呼出统计',138,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_TODAY_OUT','/ReportServer?reportlet=C8_1_mysql/callcenter/today/system/CTI_OUTBOUND.cpt','rightFrame','','2014-12-22 10:06','dsfs','2014-12-22 10:06','dsfs','192.168.1.159','192.168.1.159'),(131,'内呼统计',138,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_TODAY_INNER','/ReportServer?reportlet=C8_1_mysql/callcenter/today/system/CTI_INNER.cpt','rightFrame','','2014-12-22 10:06','dsfs','2014-12-22 10:06','dsfs','192.168.1.159','192.168.1.159'),(132,'呼叫统计(图)',138,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_TODAY_CALLPHOTO','/ReportServer?reportlet=C8_1_mysql/callcenter/today/system/CTI_SYSTEM_COUNT.cpt','rightFrame','','2014-12-22 10:07','dsfs','2014-12-22 10:07','dsfs','192.168.1.159','192.168.1.159'),(133,'呼叫统计',139,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_HISTORY_CALL','/ReportServer?reportlet=C8_1_mysql/callcenter/history/system/CTI_SYSTEM_CDR.cpt','rightFrame','','2014-12-22 10:07','dsfs','2014-12-22 10:07','dsfs','192.168.1.159','192.168.1.159'),(134,'呼入统计',139,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_HISTORY_IN','/ReportServer?reportlet=C8_1_mysql/callcenter/history/system/CTI_INBOUND.cpt','rightFrame','','2014-12-22 10:08','dsfs','2014-12-22 10:08','dsfs','192.168.1.159','192.168.1.159'),(135,'呼出统计',139,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_HISTORY_OUT','/ReportServer?reportlet=C8_1_mysql/callcenter/history/system/CTI_OUTBOUND.cpt','rightFrame','','2014-12-22 10:08','dsfs','2014-12-22 10:08','dsfs','192.168.1.159','192.168.1.159'),(136,'内呼统计',139,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_HISTORY_INNER','/ReportServer?reportlet=C8_1_mysql/callcenter/history/system/CTI_INNER.cpt','rightFrame','','2014-12-22 10:09','dsfs','2014-12-22 10:09','dsfs','192.168.1.159','192.168.1.159'),(137,'呼叫统计(图)',139,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_HISTORY_CALLPHOTO','/ReportServer?reportlet=C8_1_mysql/callcenter/history/system/CTI_SYSTEM_COUNT.cpt','rightFrame','','2014-12-22 10:09','dsfs','2014-12-22 10:09','dsfs','192.168.1.159','192.168.1.159'),(138,'系统统计',80,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_TODAY_SYSTEM','','rightFrame','','2014-12-22 10:11','dsfs','2014-12-22 10:13','dsfs','192.168.1.159','192.168.1.159'),(139,'系统统计',81,'','\0',NULL,NULL,NULL,'REPORT_CALLCENTER_HISTORY_SYSTEM','','rightFrame','','2014-12-22 10:12','dsfs','2014-12-22 10:12','dsfs','192.168.1.159','192.168.1.159'),(140,'呼叫统计(图)',86,'','\0',NULL,NULL,NULL,'REPORT_PLATFORM_TODAY_SYSTEM_CALLPHOTO','/ReportServer?reportlet=C8_1_mysql/platform/today/system/CTI_SYSTEM_COUNT.cpt','rightFrame','','2014-12-22 09:52','dsfs','2014-12-22 10:49','dsfs','192.168.1.159','192.168.1.159');
/*!40000 ALTER TABLE `t_sys_menu1` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_sys_module`
--

DROP TABLE IF EXISTS `t_sys_module`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_sys_module` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `enname` varchar(45) DEFAULT NULL,
  `code` varchar(255) DEFAULT NULL,
  `parentId` int(11) DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  `open` bit(1) DEFAULT b'0',
  `description` varchar(255) DEFAULT NULL,
  `remark` varchar(255) DEFAULT NULL,
  `createDate` varchar(255) DEFAULT NULL,
  `creater` varchar(255) DEFAULT NULL,
  `updateDate` varchar(255) DEFAULT NULL,
  `updater` varchar(255) DEFAULT NULL,
  `createIp` varchar(255) DEFAULT NULL,
  `updateIp` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=1352 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_sys_module`
--

LOCK TABLES `t_sys_module` WRITE;
/*!40000 ALTER TABLE `t_sys_module` DISABLE KEYS */;
INSERT INTO `t_sys_module` VALUES (1,'权限管理','Authority Management','ROOT',0,NULL,'','不可删除','','2014-09-26 08:19:22','admin','2014-09-26 08:19:22','admin','127.0.0.1','127.0.0.1'),(884,'用户管理','User Management','SYSTEM',1,NULL,'\0','','','2015-09-09 18:04:25','超级管理员','2016-04-13 16:01:07','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(888,'用户','User','SYSTEM_USER',884,NULL,'\0','','','2015-09-09 18:05:32','超级管理员','2015-09-09 18:05:32','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(889,'角色','Role','SYSTEM_ROLE',884,NULL,'\0','','','2015-09-09 18:05:42','超级管理员','2015-09-09 18:05:42','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(890,'权限','Authority','SYSTEM_LEVEL',884,NULL,'\0','','','2015-09-09 18:05:53','超级管理员','2015-09-09 18:05:53','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(891,'登陆日志','Login Log','SYSTEM_SYSLOG',884,NULL,'\0','','','2015-09-09 18:06:08','超级管理员','2015-09-09 18:06:08','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(892,'菜单管理','Menu Management','SYSTEM_MENU',884,NULL,'\0','','','2015-09-09 18:06:18','超级管理员','2015-09-09 18:06:18','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(894,'新增','add','SYSTEM_LEVEL_ADD',890,NULL,'\0','','','2015-09-09 18:06:56','超级管理员','2015-09-09 18:06:56','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(895,'修改','modify','SYSTEM_LEVEL_MOD',890,NULL,'\0','','','2015-09-09 18:07:07','超级管理员','2015-09-09 18:07:07','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(896,'删除','delete','SYSTEM_LEVEL_DEL',890,NULL,'\0','','','2015-09-09 18:07:18','超级管理员','2015-09-09 18:07:18','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(897,'查看','scan','SYSTEM_LEVEL_VIEW',890,NULL,'\0','','','2015-09-09 18:07:28','超级管理员','2015-09-09 18:07:28','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(898,'批量删除','batch delete','SYSTEM_LEVEL_BATDEL',890,NULL,'\0','','','2015-09-09 18:07:38','超级管理员','2015-09-09 18:07:38','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(991,'新增','add','SYSTEM_USER_ADD',888,NULL,'\0','','','2015-09-09 19:29:22','超级管理员','2016-04-14 13:48:06','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(992,'修改','modify','SYSTEM_USER_MOD',888,NULL,'\0','','','2015-09-09 19:29:34','超级管理员','2015-09-09 19:29:34','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(993,'禁用','disable','SYSTEM_USER_DEL',888,NULL,'\0','','','2015-09-09 19:29:44','超级管理员','2015-09-09 19:29:44','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(994,'查看','scan','SYSTEM_USER_VIEW',888,NULL,'\0','','','2015-09-09 19:30:36','超级管理员','2015-09-09 19:30:36','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(995,'删除','delete','SYSTEM_USER_LDEL',888,NULL,'\0','','','2015-09-09 19:30:48','超级管理员','2015-09-09 19:30:48','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(996,'新增','add','SYSTEM_ROLE_ADD',889,NULL,'\0','','','2015-09-09 19:31:08','超级管理员','2015-09-09 19:31:08','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(997,'修改','modify','SYSTEM_ROLE_MOD',889,NULL,'\0','','','2015-09-09 19:31:32','超级管理员','2015-09-09 19:31:32','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(998,'删除','delete','SYSTEM_ROLE_DEL',889,NULL,'\0','','','2015-09-09 19:31:46','超级管理员','2015-09-09 19:31:46','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(999,'查看','scan','SYSTEM_ROLE_VIEW',889,NULL,'\0','','','2015-09-09 19:32:08','超级管理员','2015-09-09 19:32:08','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1000,'批量删除','batch delete','SYSTEM_ROLE_BATDEL',889,NULL,'\0','','','2015-09-09 19:32:20','超级管理员','2015-09-09 19:32:20','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1001,'查看','scan','SYSTEM_SYSLOG_VIEW',891,NULL,'\0','','','2015-09-09 19:32:54','超级管理员','2015-09-09 19:32:54','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1002,'批量删除','batch delete','SYSTEM_SYSLOG_BATDEL',891,NULL,'\0','','','2015-09-09 19:33:05','超级管理员','2015-09-09 19:33:05','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1003,'新增','add','SYSTEM_MENU_ADD',892,NULL,'\0','','','2015-09-09 19:33:34','超级管理员','2015-09-09 19:33:34','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1004,'修改','modify','SYSTEM_MENU_MOD',892,NULL,'\0','','','2015-09-09 19:33:45','超级管理员','2015-09-09 19:33:45','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1005,'删除','delete','SYSTEM_MENU_DEL',892,NULL,'\0','','','2015-09-09 19:33:56','超级管理员','2015-09-09 19:33:56','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1006,'查看','scan','SYSTEM_MENU_VIEW',892,NULL,'\0','','','2015-09-09 19:34:07','超级管理员','2015-09-09 19:34:07','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1007,'批量删除','batch delete','SYSTEM_MENU_BATDEL',892,NULL,'\0','','','2015-09-09 19:34:20','超级管理员','2015-09-09 19:34:20','超级管理员','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1320,'呼叫统计','Call Statistics','MYSQL_REPORT_CALL_STATICTIS',1,NULL,'\0','','','2016-04-12 15:40:03','superadmin','2016-04-13 16:01:37','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1321,'当日','Today','MYSQL_REPORT_TODAY',1320,NULL,'\0','','','2016-04-12 15:41:32','superadmin','2016-04-12 15:41:32','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1322,'历史','Hristory','MYSQL_REPORT_HISTORY',1320,NULL,'\0','','','2016-04-12 15:41:54','superadmin','2016-04-12 15:41:54','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1323,'详单','Specifications','MYSQL_REPORT_DETAIL',1320,NULL,'\0','','','2016-04-12 15:42:13','superadmin','2016-04-12 15:42:13','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1324,'座席','Agent','MYSQL_REPORT_TODAY_AGENT',1321,NULL,'\0','','','2016-04-12 15:43:59','superadmin','2016-04-12 15:43:59','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1325,'呼叫','Call','MYSQL_REPORT_TODAY_CALL',1321,NULL,'\0','','','2016-04-12 15:44:45','superadmin','2016-04-12 15:44:45','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1326,'座席状态统计','At state','MYSQL_REPORT_TODAY_AGENT_MYCOMM_ZX_ZT',1324,NULL,'\0','','','2016-04-12 15:47:56','superadmin','2016-04-12 15:47:56','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1327,'呼叫统计','Agent State Statistic','MYSQL_REPORT_TODAY_CALL_CTI_SYSTEM_CDR',1325,NULL,'\0','','','2016-04-12 15:48:37','superadmin','2016-04-12 15:48:37','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1328,'呼入统计','Incoming Call Statistics','MYSQL_REPORT_TODAY_CALL_CTI_INBOUND',1325,NULL,'\0','','','2016-04-12 15:49:31','superadmin','2016-04-12 15:49:31','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1329,'呼出统计','Outgoing Statistics','MYSQL_REPORT_TODAY_CALL_CTI_OUTBOUND',1325,NULL,'\0','','','2016-04-12 15:50:19','superadmin','2016-04-12 15:50:19','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1330,'内呼统计','Internal Call Statistics','MYSQL_REPORT_TODAY_CALL_CTI_INNER',1325,NULL,'\0','','','2016-04-12 15:50:53','superadmin','2016-04-12 15:50:53','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1331,'呼叫统计(图)','Call Statistics (FIG.)','MYSQL_REPORT_TODAY_CALL_CTI_SYSTEM_COUNT',1325,NULL,'\0','','','2016-04-12 15:51:26','superadmin','2016-04-12 15:51:26','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1332,'座席','Agent','MYSQL_REPORT_HISTORY_AGENT',1322,NULL,'\0','','','2016-04-12 15:52:19','superadmin','2016-04-12 15:52:19','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1333,'呼叫','Call','MYSQL_REPORT_HISTORY_CALL',1322,NULL,'\0','','','2016-04-12 15:52:43','superadmin','2016-04-12 15:52:43','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1334,'座席状态统计','Agent State Statistic','MYSQL_REPORT_HISTORY_AGENT_MYCOMM_ZX_ZT',1332,NULL,'\0','','','2016-04-12 15:53:20','superadmin','2016-04-12 15:53:20','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1335,'座席绩效统计','Agent Performance Statistics','MYSQL_REPORT_HISTORY_AGENT_AGENTJX',1332,NULL,'\0','','','2016-04-12 15:53:47','superadmin','2016-04-12 15:53:47','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1336,'呼叫统计','Call Statistics','MYSQL_REPORT_HISTORY_CALL_CTI_SYSTEM_CDR',1333,NULL,'\0','','','2016-04-12 15:54:26','superadmin','2016-04-12 15:54:26','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1337,'呼入统计','Incoming Call Statistics','MYSQL_REPORT_HISTORY_CALL_CTI_INBOUND',1333,NULL,'\0','','','2016-04-12 15:54:55','superadmin','2016-04-12 15:54:55','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1338,'呼出统计','Outgoing Statistics','MYSQL_REPORT_HISTORY_CALL_CTI_OUTBOUND',1333,NULL,'\0','','','2016-04-12 15:55:28','superadmin','2016-04-12 15:55:28','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1339,'内呼统计','Internal Call Statistics','MYSQL_REPORT_HISTORY_CALL_CTI_INNER',1333,NULL,'\0','','','2016-04-12 15:55:51','superadmin','2016-04-12 15:55:51','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1340,'呼叫统计(图)','Call statistics (FIG.)','MYSQL_REPORT_HISTORY_CALL_CTI_SYSTEM_COUNT',1333,NULL,'\0','','','2016-04-12 15:56:20','superadmin','2016-04-12 15:56:20','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1341,'系统绩效统计','System Performance Statistics','MYSQL_REPORT_HISTORY_CALL_REPORT_GENERAL_KPI_SYSTEM',1333,NULL,'\0','','','2016-04-12 15:56:47','superadmin','2016-04-12 15:56:47','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1342,'座席','Agent','MYSQL_REPORT_DETAIL_AGENT',1323,NULL,'\0','','','2016-04-12 15:57:27','superadmin','2016-04-12 15:57:27','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1343,'呼叫','Call','MYSQL_REPORT_DETAIL_CALL',1323,NULL,'\0','','','2016-04-12 15:57:51','superadmin','2016-04-12 15:57:51','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1344,'签入记录','Check-in Record','MYSQL_REPORT_DETAIL_AGENT_AGENTQR',1342,NULL,'\0','','','2016-04-12 15:58:28','superadmin','2016-04-12 15:58:28','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1345,'操作记录','Operation Records','MYSQL_REPORT_DETAIL_AGENT_AGENTCZ',1342,NULL,'\0','','','2016-04-12 15:58:52','superadmin','2016-04-12 15:58:52','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1346,'状态记录','State Records','MYSQL_REPORT_DETAIL_AGENT_AGENTSTATE',1342,NULL,'\0','','','2016-04-12 15:59:17','superadmin','2016-04-12 15:59:17','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1347,'呼叫详单','Call Details','MYSQL_REPORT_DETAIL_CALL_REPORT_CDR',1343,NULL,'\0','','','2016-04-12 15:59:56','superadmin','2016-04-12 15:59:56','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1348,'未接来电','Did not call','MYSQL_REPORT_DETAIL_CALL_CTI_REPORT_MISSCALL',1343,NULL,'\0','','','2016-04-12 16:00:25','superadmin','2016-04-12 16:00:25','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1349,'排队记录','Line up record','MYSQL_REPORT_DETAIL_CALL_ACD',1343,NULL,'\0','','','2016-04-12 16:00:51','superadmin','2016-04-12 16:00:51','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1350,'通道记录','Channel record','MYSQL_REPORT_DETAIL_CALL_CTI_CHANNEL',1343,NULL,'\0','','','2016-04-12 16:01:15','superadmin','2016-04-12 16:01:15','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1'),(1351,'录音记录','recordings','MYSQL_REPORT_DETAIL_CALL_CTI_RECORD_FILES',1343,NULL,'\0','','','2016-04-12 16:01:43','superadmin','2016-04-12 16:01:43','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1');
/*!40000 ALTER TABLE `t_sys_module` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_sys_module1`
--

DROP TABLE IF EXISTS `t_sys_module1`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_sys_module1` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `code` varchar(255) DEFAULT NULL,
  `parentId` int(11) DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  `open` bit(1) DEFAULT b'0',
  `description` varchar(255) DEFAULT NULL,
  `remark` varchar(255) DEFAULT NULL,
  `createDate` varchar(255) DEFAULT NULL,
  `creater` varchar(255) DEFAULT NULL,
  `updateDate` varchar(255) DEFAULT NULL,
  `updater` varchar(255) DEFAULT NULL,
  `createIp` varchar(255) DEFAULT NULL,
  `updateIp` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=518 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_sys_module1`
--

LOCK TABLES `t_sys_module1` WRITE;
/*!40000 ALTER TABLE `t_sys_module1` DISABLE KEYS */;
INSERT INTO `t_sys_module1` VALUES (1,'根权限','ROOT',0,NULL,'','不可删除','','2014-09-26 08:19:22','admin','2014-09-26 08:19:22','admin','127.0.0.1','127.0.0.1'),(241,'网关','GATEWAY',1,NULL,'\0','','','2014-12-02 11:33:49','admin','2014-12-02 11:33:49','admin','127.0.0.1','127.0.0.1'),(242,'路由','ROUTE',1,NULL,'\0','','','2014-12-02 11:34:09','admin','2014-12-02 11:34:09','admin','127.0.0.1','127.0.0.1'),(243,'接入号码','ROUTE_ACCESSNUMBER',242,NULL,'\0','','','2014-12-02 11:34:35','admin','2014-12-02 11:34:35','admin','127.0.0.1','127.0.0.1'),(244,'拨号计划','ROUTE_CALLPLAN',242,NULL,'\0','','','2014-12-02 11:34:52','admin','2014-12-02 11:34:52','admin','127.0.0.1','127.0.0.1'),(245,'呼入路由','ROUTE_INTERNAL',242,NULL,'\0','','','2014-12-02 11:35:10','admin','2014-12-02 11:35:10','admin','127.0.0.1','127.0.0.1'),(246,'呼出路由','ROUTE_EXTERNAL',242,NULL,'\0','','','2014-12-02 11:35:26','admin','2014-12-02 11:35:26','admin','127.0.0.1','127.0.0.1'),(247,'分机','EXTENSION',1,NULL,'\0','','','2014-12-02 11:35:46','admin','2014-12-02 11:35:46','admin','127.0.0.1','127.0.0.1'),(248,'座席','AGENT',1,NULL,'\0','','','2014-12-02 11:36:00','admin','2014-12-02 11:36:00','admin','127.0.0.1','127.0.0.1'),(249,'技能组','QUEUE',1,NULL,'\0','','','2014-12-02 11:36:14','admin','2014-12-02 11:36:14','admin','127.0.0.1','127.0.0.1'),(250,'IVR','IVR',1,NULL,'\0','','','2014-12-02 11:36:27','admin','2014-12-02 11:36:27','admin','127.0.0.1','127.0.0.1'),(251,'IVR流程','IVR_IVRCONFIG',250,NULL,'\0','','','2014-12-02 11:36:45','admin','2014-12-02 11:36:45','admin','127.0.0.1','127.0.0.1'),(252,'语音文件','IVR_IVRSOUND',250,NULL,'\0','','','2014-12-02 11:36:59','admin','2014-12-02 11:36:59','admin','127.0.0.1','127.0.0.1'),(253,'保持音','VOICEHOLD',1,NULL,'\0','','','2014-12-02 11:37:17','admin','2014-12-02 11:37:17','admin','127.0.0.1','127.0.0.1'),(254,'传真号码','FAX',1,NULL,'\0','','','2014-12-02 11:37:34','admin','2014-12-02 11:37:34','admin','127.0.0.1','127.0.0.1'),(255,'语音信箱','VOICEBOX',1,NULL,'\0','','','2014-12-02 11:41:23','admin','2014-12-02 11:41:23','admin','127.0.0.1','127.0.0.1'),(256,'黑名单','BLACKLIST',1,NULL,'\0','','','2014-12-02 11:41:38','admin','2014-12-02 11:41:38','admin','127.0.0.1','127.0.0.1'),(257,'系统资源','SYS_AUTHOR_SRC',1,NULL,'\0','','','2014-12-02 11:42:41','admin','2014-12-02 11:42:41','admin','127.0.0.1','127.0.0.1'),(258,'系统接口授权','SYS_AUTHOR_INTERFACE',1,NULL,'\0','','','2014-12-02 11:42:55','admin','2014-12-02 11:42:55','admin','127.0.0.1','127.0.0.1'),(259,'配置更新','CONFIG',1,NULL,'\0','','','2014-12-02 11:43:10','admin','2014-12-02 11:43:10','admin','127.0.0.1','127.0.0.1'),(264,'系统功能','SYSTEM',1,NULL,'\0','','','2014-12-02 14:25:10','admin','2014-12-02 14:25:10','admin','127.0.0.1','127.0.0.1'),(265,'组织机构','SYSTEM_ORGANIZATION',264,NULL,'\0','','','2014-12-02 14:25:29','admin','2014-12-02 14:25:29','admin','127.0.0.1','127.0.0.1'),(266,'用户','SYSTEM_USER',264,NULL,'\0','','','2014-12-02 14:25:46','admin','2014-12-02 14:25:46','admin','127.0.0.1','127.0.0.1'),(267,'角色','SYSTEM_ROLE',264,NULL,'\0','','','2014-12-02 14:26:02','admin','2014-12-02 14:26:02','admin','127.0.0.1','127.0.0.1'),(268,'权限','SYSTEM_LEVEL',264,NULL,'\0','','','2014-12-02 14:26:17','admin','2014-12-02 14:26:17','admin','127.0.0.1','127.0.0.1'),(269,'系统日志','SYSTEM_SYSLOG',264,NULL,'\0','','','2014-12-02 14:26:32','admin','2014-12-02 14:26:32','admin','127.0.0.1','127.0.0.1'),(270,'菜单管理','SYSTEM_MENU',264,NULL,'\0','','','2014-12-02 14:26:47','admin','2014-12-02 14:26:47','admin','127.0.0.1','127.0.0.1'),(271,'新增','GATEWAY_ADD',241,NULL,'\0','','','2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(272,'修改','GATEWAY_MOD',241,NULL,'\0','','','2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(273,'删除','GATEWAY_DEL',241,NULL,'\0','','','2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(274,'查询','GATEWAY_VIEW',241,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:44:18','admin','127.0.0.1','127.0.0.1'),(275,'新增','ROUTE_ACCESSNUMBER_ADD',243,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(276,'修改','ROUTE_ACCESSNUMBER_MOD',243,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(277,'删除','ROUTE_ACCESSNUMBER_DEL',243,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(278,'查看','ROUTE_ACCESSNUMBER_VIEW',243,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:44:30','admin','127.0.0.1','127.0.0.1'),(282,'消息服务器设置','CONFIG_RABBITMQCONFIG',259,NULL,'\0','','','2014-12-02 15:44:55','admin','2014-12-02 15:44:55','admin','127.0.0.1','127.0.0.1'),(283,'配置更新日志','CONFIG_LOG',259,NULL,'\0','','','2014-12-02 15:46:09','admin','2014-12-02 15:46:09','admin','127.0.0.1','127.0.0.1'),(284,'新增','ROUTE_CALLPLAN_ADD',244,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(285,'修改','ROUTE_CALLPLAN_MOD',244,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(286,'删除','ROUTE_CALLPLAN_DEL',244,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(287,'查看','ROUTE_CALLPLAN_VIEW',244,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:44:40','admin','127.0.0.1','127.0.0.1'),(288,'新增','ROUTE_INTERNAL_ADD',245,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(289,'修改','ROUTE_INTERNAL_MOD',245,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(290,'删除','ROUTE_INTERNAL_DEL',245,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(291,'查看','ROUTE_INTERNAL_VIEW',245,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:44:50','admin','127.0.0.1','127.0.0.1'),(292,'新增','ROUTE_EXTERNAL_ADD',246,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(293,'修改','ROUTE_EXTERNAL_MOD',246,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(294,'删除','ROUTE_EXTERNAL_DEL',246,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(295,'查看','ROUTE_EXTERNAL_VIEW',246,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:44:59','admin','127.0.0.1','127.0.0.1'),(296,'新增','EXTENSION_ADD',247,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(297,'修改','EXTENSION_MOD',247,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(298,'删除','EXTENSION_DEL',247,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(299,'查看','EXTENSION_VIEW',247,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:45:08','admin','127.0.0.1','127.0.0.1'),(300,'新增','AGENT_ADD',248,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(301,'修改','AGENT_MOD',248,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(302,'删除','AGENT_DEL',248,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(303,'查看','AGENT_VIEW',248,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:45:19','admin','127.0.0.1','127.0.0.1'),(304,'新增','QUEUE_ADD',249,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(305,'修改','QUEUE_MOD',249,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(306,'删除','QUEUE_DEL',249,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(307,'查看','QUEUE_VIEW',249,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:45:28','admin','127.0.0.1','127.0.0.1'),(308,'新增','IVR_IVRCONFIG_ADD',251,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(309,'修改','IVR_IVRCONFIG_MOD',251,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(310,'删除','IVR_IVRCONFIG_DEL',251,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(311,'查看','IVR_IVRCONFIG_VIEW',251,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:45:37','admin','127.0.0.1','127.0.0.1'),(312,'新增','IVR_IVRSOUND_ADD',252,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(313,'修改','IVR_IVRSOUND_MOD',252,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(314,'删除','IVR_IVRSOUND_DEL',252,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(315,'查看','IVR_IVRSOUND_VIEW',252,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:45:46','admin','127.0.0.1','127.0.0.1'),(316,'新增','VOICEHOLD_ADD',253,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(317,'修改','VOICEHOLD_MOD',253,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(318,'删除','VOICEHOLD_DEL',253,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(319,'查看','VOICEHOLD_VIEW',253,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:45:53','admin','127.0.0.1','127.0.0.1'),(320,'新增','FAX_ADD',254,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(321,'修改','FAX_MOD',254,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(322,'删除','FAX_DEL',254,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(323,'查看','FAX_VIEW',254,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:46:04','admin','127.0.0.1','127.0.0.1'),(324,'新增','VOICEBOX_ADD',255,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(325,'修改','VOICEBOX_MOD',255,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(326,'删除','VOICEBOX_DEL',255,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(327,'查看','VOICEBOX_VIEW',255,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:46:11','admin','127.0.0.1','127.0.0.1'),(328,'新增','BLACKLIST_ADD',256,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(329,'修改','BLACKLIST_MOD',256,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(330,'删除','BLACKLIST_DEL',256,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(331,'查看','BLACKLIST_VIEW',256,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:46:18','admin','127.0.0.1','127.0.0.1'),(332,'新增','SYS_AUTHOR_SRC_ADD',257,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(333,'修改','SYS_AUTHOR_SRC_MOD',257,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(334,'删除','SYS_AUTHOR_SRC_DEL',257,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(335,'查看','SYS_AUTHOR_SRC_VIEW',257,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:46:27','admin','127.0.0.1','127.0.0.1'),(336,'新增','SYS_AUTHOR_INTERFACE_ADD',258,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(337,'修改','SYS_AUTHOR_INTERFACE_MOD',258,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(338,'删除','SYS_AUTHOR_INTERFACE_DEL',258,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(339,'查看','SYS_AUTHOR_INTERFACE_VIEW',258,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:46:35','admin','127.0.0.1','127.0.0.1'),(341,'修改','CONFIG_RABBITMQCONFIG_MOD',282,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(343,'查看','CONFIG_RABBITMQCONFIG_VIEW',282,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:46:44','admin','127.0.0.1','127.0.0.1'),(347,'查看','CONFIG_LOG_VIEW',283,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:46:52','admin','127.0.0.1','127.0.0.1'),(348,'新增','SYSTEM_ORGANIZATION_ADD',265,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(349,'修改','SYSTEM_ORGANIZATION_MOD',265,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(350,'禁用','SYSTEM_ORGANIZATION_DEL',265,NULL,'\0','','','2014-12-02 14:47:38','admin','2014-12-02 18:29:39','admin','127.0.0.1','127.0.0.1'),(351,'查看','SYSTEM_ORGANIZATION_VIEW',265,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:47:01','admin','127.0.0.1','127.0.0.1'),(352,'新增','SYSTEM_USER_ADD',266,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(353,'修改','SYSTEM_USER_MOD',266,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(354,'禁用','SYSTEM_USER_DEL',266,NULL,'\0','','','2014-12-02 14:47:38','admin','2014-12-02 18:32:31','admin','127.0.0.1','127.0.0.1'),(355,'查看','SYSTEM_USER_VIEW',266,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:47:09','admin','127.0.0.1','127.0.0.1'),(356,'新增','SYSTEM_ROLE_ADD',267,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(357,'修改','SYSTEM_ROLE_MOD',267,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(358,'删除','SYSTEM_ROLE_DEL',267,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(359,'查看','SYSTEM_ROLE_VIEW',267,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:47:19','admin','127.0.0.1','127.0.0.1'),(360,'新增','SYSTEM_LEVEL_ADD',268,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(361,'修改','SYSTEM_LEVEL_MOD',268,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(362,'删除','SYSTEM_LEVEL_DEL',268,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(363,'查看','SYSTEM_LEVEL_VIEW',268,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:47:28','admin','127.0.0.1','127.0.0.1'),(367,'查看','SYSTEM_SYSLOG_VIEW',269,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:47:36','admin','127.0.0.1','127.0.0.1'),(368,'新增','SYSTEM_MENU_ADD',270,NULL,'\0',NULL,NULL,'2014-12-02 14:46:25','admin','2014-12-02 14:46:25','admin','127.0.0.1','127.0.0.1'),(369,'修改','SYSTEM_MENU_MOD',270,NULL,'\0',NULL,NULL,'2014-12-02 14:47:07','admin','2014-12-02 14:47:07','admin','127.0.0.1','127.0.0.1'),(370,'删除','SYSTEM_MENU_DEL',270,NULL,'\0',NULL,NULL,'2014-12-02 14:47:38','admin','2014-12-02 14:47:38','admin','127.0.0.1','127.0.0.1'),(371,'查看','SYSTEM_MENU_VIEW',270,NULL,'\0','','','2014-12-02 14:47:54','admin','2014-12-02 18:47:44','admin','127.0.0.1','127.0.0.1'),(411,'批量删除','ROUTE_ACCESSNUMBER_BATDEL',243,NULL,'\0','','','2014-12-02 16:23:01','admin','2014-12-02 16:23:01','admin','127.0.0.1','127.0.0.1'),(412,'批量删除','GATEWAY_BATDEL',241,NULL,'\0','','','2014-12-02 16:23:28','admin','2014-12-02 16:23:28','admin','127.0.0.1','127.0.0.1'),(413,'批量删除','ROUTE_CALLPLAN_BATDEL',244,NULL,'\0','','','2014-12-02 16:24:18','admin','2014-12-02 16:24:18','admin','127.0.0.1','127.0.0.1'),(414,'批量删除','ROUTE_INTERNAL_BATDEL',245,NULL,'\0','','','2014-12-02 16:24:50','admin','2014-12-02 16:24:50','admin','127.0.0.1','127.0.0.1'),(415,'批量删除','ROUTE_EXTERNAL_BATDEL',246,NULL,'\0','','','2014-12-02 16:25:17','admin','2014-12-02 16:25:17','admin','127.0.0.1','127.0.0.1'),(416,'批量删除','EXTENSION_BATDEL',247,NULL,'\0','','','2014-12-02 16:25:45','admin','2014-12-02 16:25:45','admin','127.0.0.1','127.0.0.1'),(417,'批量删除','AGENT_BATDEL',248,NULL,'\0','','','2014-12-02 16:26:09','admin','2014-12-02 16:26:09','admin','127.0.0.1','127.0.0.1'),(418,'批量删除','QUEUE_BATDEL',249,NULL,'\0','','','2014-12-02 16:26:29','admin','2014-12-02 16:26:29','admin','127.0.0.1','127.0.0.1'),(419,'批量删除','IVR_IVRCONFIG_BATDEL',251,NULL,'\0','','','2014-12-02 16:26:55','admin','2014-12-02 16:26:55','admin','127.0.0.1','127.0.0.1'),(420,'批量删除','IVR_IVRSOUND_BATDEL',252,NULL,'\0','','','2014-12-02 16:27:18','admin','2014-12-02 16:27:18','admin','127.0.0.1','127.0.0.1'),(421,'批量删除','VOICEHOLD_BATDEL',253,NULL,'\0','','','2014-12-02 16:27:42','admin','2014-12-02 16:27:42','admin','127.0.0.1','127.0.0.1'),(422,'批量删除','FAX_BATDEL',254,NULL,'\0','','','2014-12-02 16:28:02','admin','2014-12-02 16:28:02','admin','127.0.0.1','127.0.0.1'),(423,'批量删除','VOICEBOX_BATDEL',255,NULL,'\0','','','2014-12-02 16:28:27','admin','2014-12-02 16:28:27','admin','127.0.0.1','127.0.0.1'),(424,'批量删除','BLACKLIST_BATDEL',256,NULL,'\0','','','2014-12-02 16:28:54','admin','2014-12-02 16:28:54','admin','127.0.0.1','127.0.0.1'),(425,'批量删除','SYS_AUTHOR_SRC_BATDEL',257,NULL,'\0','','','2014-12-02 16:29:22','admin','2014-12-02 16:29:22','admin','127.0.0.1','127.0.0.1'),(426,'批量删除','SYS_AUTHOR_INTERFACE_BATDEL',258,NULL,'\0','','','2014-12-02 16:29:45','admin','2014-12-02 16:29:45','admin','127.0.0.1','127.0.0.1'),(428,'批量删除','CONFIG_LOG_BATDEL',283,NULL,'\0','','','2014-12-02 16:30:31','admin','2014-12-02 16:30:31','admin','127.0.0.1','127.0.0.1'),(431,'批量删除','SYSTEM_ROLE_BATDEL',267,NULL,'\0','','','2014-12-02 16:31:41','admin','2014-12-02 16:31:41','admin','127.0.0.1','127.0.0.1'),(432,'批量删除','SYSTEM_LEVEL_BATDEL',268,NULL,'\0','','','2014-12-02 16:32:00','admin','2014-12-02 16:32:00','admin','127.0.0.1','127.0.0.1'),(433,'批量删除','SYSTEM_SYSLOG_BATDEL',269,NULL,'\0','','','2014-12-02 16:32:19','admin','2014-12-02 16:32:19','admin','127.0.0.1','127.0.0.1'),(434,'批量删除','SYSTEM_MENU_BATDEL',270,NULL,'\0','','','2014-12-02 16:32:40','admin','2014-12-02 16:32:40','admin','127.0.0.1','127.0.0.1'),(435,'导出','AGENT_EXP',248,NULL,'\0','','','2014-12-02 16:39:25','admin','2014-12-02 16:39:25','admin','127.0.0.1','127.0.0.1'),(436,'管理','SYS_AUTHOR_INTERFACE_MAN',258,NULL,'\0','','','2014-12-02 17:00:29','admin','2014-12-02 17:00:29','admin','127.0.0.1','127.0.0.1'),(437,'导出','EXTENSION_EXP',247,NULL,'\0','','','2014-12-02 17:24:55','admin','2014-12-02 17:24:55','admin','127.0.0.1','127.0.0.1'),(440,'管理','ROUTE_CALLPLAN_MAN',244,NULL,'\0','','','2014-12-02 18:04:03','admin','2014-12-02 18:04:03','admin','127.0.0.1','127.0.0.1'),(441,'管理','ROUTE_INTERNAL_MAN',245,NULL,'\0','','','2014-12-02 18:04:34','admin','2014-12-02 18:04:34','admin','127.0.0.1','127.0.0.1'),(442,'管理','ROUTE_EXTERNAL_MAN',246,NULL,'\0','','','2014-12-02 18:04:50','admin','2014-12-02 18:04:50','admin','127.0.0.1','127.0.0.1'),(444,'全局路由','ROUTE_GLOBAL',242,NULL,'\0','','','2014-10-30 13:15:03','dsfs','2014-10-30 13:15:03','dsfs','192.168.1.158','192.168.1.158'),(445,'新增','ROUTE_GLOBAL_ADD',444,NULL,'\0','','','2014-10-30 13:15:39','dsfs','2014-10-30 13:15:39','dsfs','192.168.1.158','192.168.1.158'),(446,'修改','ROUTE_GLOBAL_MOD',444,NULL,'\0','','','2014-10-30 13:15:59','dsfs','2014-10-30 13:15:59','dsfs','192.168.1.158','192.168.1.158'),(447,'删除','ROUTE_GLOBAL_DEL',444,NULL,'\0','','','2014-10-30 13:16:24','dsfs','2014-10-30 13:16:24','dsfs','192.168.1.158','192.168.1.158'),(448,'查看','ROUTE_GLOBAL_VIEW',444,NULL,'\0','','','2014-10-30 13:16:41','dsfs','2014-10-30 13:16:41','dsfs','192.168.1.158','192.168.1.158'),(449,'批量删除','ROUTE_GLOBAL_BATDEL',444,NULL,'\0','','','2014-10-30 13:17:06','dsfs','2014-10-30 13:17:06','dsfs','192.168.1.158','192.168.1.158'),(450,'管理','ROUTE_GLOBAL_MAN',444,NULL,'\0','','','2014-10-30 13:17:27','dsfs','2014-10-30 13:17:27','dsfs','192.168.1.158','192.168.1.158'),(451,'平台统计','REPORT_PLATFORM',1,NULL,'\0','','','2014-12-19 17:13:35','dsfs','2014-11-02 19:40:38','dsfs','127.0.0.1','192.168.1.159'),(452,'呼叫中心统计','REPORT_CALLCENTER',1,NULL,'\0','','','2014-11-02 19:41:04','dsfs','2014-11-02 19:41:04','dsfs','192.168.1.159','192.168.1.159'),(453,'办公分机统计','REPORT_EXT',1,NULL,'\0','','','2014-11-02 19:41:29','dsfs','2014-11-02 19:41:29','dsfs','192.168.1.159','192.168.1.159'),(454,'当日','REPORT_PLATFORM_TODAY',451,NULL,'\0','','','2014-11-02 19:41:55','dsfs','2014-11-02 19:41:55','dsfs','192.168.1.159','192.168.1.159'),(455,'历史','REPORT_PLATFORM_HISTORY',451,NULL,'\0','','','2014-11-02 19:42:19','dsfs','2014-11-02 19:42:19','dsfs','192.168.1.159','192.168.1.159'),(456,'详单','REPORT_PLATFORM_DETAIL',451,NULL,'\0','','','2014-11-02 19:42:49','dsfs','2014-11-02 19:42:49','dsfs','192.168.1.159','192.168.1.159'),(457,'通道记录','REPORT_PLATFORM_DETAIL_CHANNEL',456,NULL,'\0','','','2014-11-02 19:43:58','dsfs','2014-11-02 19:43:58','dsfs','192.168.1.159','192.168.1.159'),(458,'当日','REPORT_CALLCENTER_TODAY',452,NULL,'\0','','','2014-12-20 17:41:30','dsfs','2014-12-20 17:41:30','dsfs','192.168.1.159','192.168.1.159'),(459,'历史','REPORT_CALLCENTER_HISTORY',452,NULL,'\0','','','2014-12-20 17:41:58','dsfs','2014-12-20 17:41:58','dsfs','192.168.1.159','192.168.1.159'),(460,'详单','REPORT_CALLCENTER_DETAIL',452,NULL,'\0','','','2014-12-20 17:42:25','dsfs','2014-12-20 17:42:25','dsfs','192.168.1.159','192.168.1.159'),(461,'座席','REPORT_CALLCENTER_DETAIL_AGENT',460,NULL,'\0','','','2014-12-20 17:42:52','dsfs','2014-12-20 17:42:52','dsfs','192.168.1.159','192.168.1.159'),(462,'呼叫','REPORT_CALLCENTER_DETAIL_CALL',460,NULL,'\0','','','2014-12-20 17:43:20','dsfs','2014-12-20 17:43:20','dsfs','192.168.1.159','192.168.1.159'),(463,'签入记录','REPORT_CALLCENTER_DETAIL_AGENT_CHECKIN',461,NULL,'\0','','','2014-12-20 17:44:36','dsfs','2014-12-20 17:44:36','dsfs','192.168.1.159','192.168.1.159'),(464,'操作记录','REPORT_CALLCENTER_DETAIL_AGENT_ACTION',461,NULL,'\0','','','2014-12-20 17:45:06','dsfs','2014-12-20 17:45:06','dsfs','192.168.1.159','192.168.1.159'),(466,'状态记录','REPORT_CALLCENTER_DETAIL_AGENT_STATUS',461,NULL,'\0','','','2014-12-20 17:48:30','dsfs','2014-12-20 17:48:30','dsfs','192.168.1.159','192.168.1.159'),(467,'服务记录','REPORT_CALLCENTER_DETAIL_AGENT_SERVICE',461,NULL,'\0','','','2014-12-20 17:48:56','dsfs','2014-12-20 17:48:56','dsfs','192.168.1.159','192.168.1.159'),(468,'未接来电','REPORT_CALLCENTER_DETAIL_AGENT_MISCALL',461,NULL,'\0','','','2014-12-20 17:49:18','dsfs','2014-12-20 17:49:18','dsfs','192.168.1.159','192.168.1.159'),(469,'呼叫详单','REPORT_CALLCENTER_DETAIL_CALL_CDR',462,NULL,'\0','','','2014-12-20 17:50:33','dsfs','2014-12-20 17:50:33','dsfs','192.168.1.159','192.168.1.159'),(470,'未接来电','REPORT_CALLCENTER_DETAIL_CALL_MISSCALL',462,NULL,'\0','','','2014-12-20 17:50:59','dsfs','2014-12-20 17:50:59','dsfs','192.168.1.159','192.168.1.159'),(471,'排队记录','REPORT_CALLCENTER_DETAIL_CALL_ACD',462,NULL,'\0','','','2014-12-20 17:51:23','dsfs','2014-12-20 17:51:23','dsfs','192.168.1.159','192.168.1.159'),(472,'呼叫详单','REPORT_PLATFORM_DETAIL_CDR',456,NULL,'\0','','','2014-12-20 18:31:40','dsfs','2014-12-20 18:31:40','dsfs','192.168.1.159','192.168.1.159'),(473,'传真记录','REPORT_PLATFORM_DETAIL_FAX',456,NULL,'\0','','','2014-12-20 18:32:08','dsfs','2014-12-20 18:32:08','dsfs','192.168.1.159','192.168.1.159'),(474,'IVR应答','REPORT_PLATFORM_DETAIL_IVR',456,NULL,'\0','','','2014-12-20 18:32:40','dsfs','2014-12-20 18:32:40','dsfs','192.168.1.159','192.168.1.159'),(475,'未接来电','REPORT_PLATFORM_DETAIL_MISSCALL',456,NULL,'\0','','','2014-12-20 18:33:11','dsfs','2014-12-20 18:33:11','dsfs','192.168.1.159','192.168.1.159'),(476,'语音信箱','REPORT_PLATFORM_DETAIL_VM',456,NULL,'\0','','','2014-12-20 18:34:38','dsfs','2014-12-20 18:34:38','dsfs','192.168.1.159','192.168.1.159'),(477,'当日','REPORT_EXT_TODAY',453,NULL,'\0','','','2014-12-20 18:36:40','dsfs','2014-12-20 18:36:40','dsfs','192.168.1.159','192.168.1.159'),(478,'历史','REPORT_EXT_HISTORY',453,NULL,'\0','','','2014-12-20 18:36:59','dsfs','2014-12-20 18:36:59','dsfs','192.168.1.159','192.168.1.159'),(479,'详单','REPORT_EXT_DETAIL',453,NULL,'\0','','','2014-12-20 18:37:24','dsfs','2014-12-20 18:37:24','dsfs','192.168.1.159','192.168.1.159'),(480,'呼叫详单','REPORT_EXT_DETAIL_CDR',479,NULL,'\0','','','2014-12-20 18:37:49','dsfs','2014-12-20 18:37:49','dsfs','192.168.1.159','192.168.1.159'),(481,'电话分机记录','REPORT_EXT_DETAIL_EXT',479,NULL,'\0','','','2014-12-20 18:38:21','dsfs','2014-12-20 18:38:47','dsfs','192.168.1.159','192.168.1.159'),(482,'分机未接来电','REPORT_EXT_DETAIL_MISSCALL',479,NULL,'\0','','','2014-12-20 18:39:38','dsfs','2014-12-20 18:39:38','dsfs','192.168.1.159','192.168.1.159'),(483,'系统统计','REPORT_PLATFORM_TODAY_SYSTEM',454,NULL,'\0','','','2014-12-22 10:18:50','dsfs','2014-12-22 10:18:50','dsfs','192.168.1.159','192.168.1.159'),(484,'传真统计','REPORT_PLATFORM_TODAY_FAX',454,NULL,'\0','','','2014-12-22 10:19:14','dsfs','2014-12-22 10:19:14','dsfs','192.168.1.159','192.168.1.159'),(485,'语音信箱统计','REPORT_PLATFORM_TODAY_VM',454,NULL,'\0','','','2014-12-22 10:19:44','dsfs','2014-12-22 10:19:44','dsfs','192.168.1.159','192.168.1.159'),(486,'系统统计','REPORT_PLATFORM_HISTORY_SYSTEM',455,NULL,'\0','','','2014-12-22 10:20:17','dsfs','2014-12-22 10:20:17','dsfs','192.168.1.159','192.168.1.159'),(487,'传真统计','REPORT_PLATFORM_HISTORY_FAX',455,NULL,'\0','','','2014-12-22 10:20:47','dsfs','2014-12-22 10:20:47','dsfs','192.168.1.159','192.168.1.159'),(488,'语音信箱统计','REPORT_PLATFORM_HISTORY_VM',455,NULL,'\0','','','2014-12-22 10:21:14','dsfs','2014-12-22 10:21:14','dsfs','192.168.1.159','192.168.1.159'),(489,'系统统计','REPORT_CALLCENTER_TODAY_SYSTEM',458,NULL,'\0','','','2014-12-22 10:22:00','dsfs','2014-12-22 10:22:00','dsfs','192.168.1.159','192.168.1.159'),(490,'系统统计','REPORT_CALLCENTER_HISTORY_SYSTEM',459,NULL,'\0','','','2014-12-22 10:22:31','dsfs','2014-12-22 10:22:31','dsfs','192.168.1.159','192.168.1.159'),(491,'呼叫统计','REPORT_CALLCENTER_TODAY_CALL',489,NULL,'\0','','','2014-12-22 10:23:08','dsfs','2014-12-22 10:23:08','dsfs','192.168.1.159','192.168.1.159'),(492,'呼入统计','REPORT_CALLCENTER_TODAY_IN',489,NULL,'\0','','','2014-12-22 10:23:34','dsfs','2014-12-22 10:23:34','dsfs','192.168.1.159','192.168.1.159'),(493,'内呼统计','REPORT_CALLCENTER_TODAY_INNER',489,NULL,'\0','','','2014-12-22 10:24:01','dsfs','2014-12-22 10:24:01','dsfs','192.168.1.159','192.168.1.159'),(494,'呼叫统计(图)','REPORT_CALLCENTER_TODAY_CALLPHOTO',489,NULL,'\0','','','2014-12-22 10:24:49','dsfs','2014-12-22 10:24:49','dsfs','192.168.1.159','192.168.1.159'),(495,'系统统计','REPORT_CALLCENTER_HISTORY_CALL',490,NULL,'\0','','','2014-12-22 10:25:35','dsfs','2014-12-22 10:25:35','dsfs','192.168.1.159','192.168.1.159'),(496,'呼入统计','REPORT_CALLCENTER_HISTORY_IN',490,NULL,'\0','','','2014-12-22 10:25:59','dsfs','2014-12-22 10:25:59','dsfs','192.168.1.159','192.168.1.159'),(497,'呼出统计','REPORT_CALLCENTER_HISTORY_OUT',490,NULL,'\0','','','2014-12-22 10:26:25','dsfs','2014-12-22 10:26:25','dsfs','192.168.1.159','192.168.1.159'),(498,'内呼统计','REPORT_CALLCENTER_HISTORY_INNER',490,NULL,'\0','','','2014-12-22 10:27:20','dsfs','2014-12-22 10:27:20','dsfs','192.168.1.159','192.168.1.159'),(499,'呼叫统计(图)','REPORT_CALLCENTER_HISTORY_CALLPHOTO',490,NULL,'\0','','','2014-12-22 10:27:48','dsfs','2014-12-22 10:27:48','dsfs','192.168.1.159','192.168.1.159'),(500,'呼叫统计','REPORT_PLATFORM_TODAY_SYSTEM_CALL',483,NULL,'\0','','','2014-12-22 10:38:44','dsfs','2014-12-22 10:38:44','dsfs','192.168.1.159','192.168.1.159'),(501,'呼入统计','REPORT_PLATFORM_TODAY_SYSTEM_IN',483,NULL,'\0','','','2014-12-22 10:39:08','dsfs','2014-12-22 10:39:08','dsfs','192.168.1.159','192.168.1.159'),(502,'呼出统计','REPORT_PLATFORM_TODAY_SYSTEM_OUT',483,NULL,'\0','','','2014-12-22 10:39:33','dsfs','2014-12-22 10:39:33','dsfs','192.168.1.159','192.168.1.159'),(503,'本地呼叫','REPORT_PLATFORM_TODAY_SYSTEM_LOCAL',483,NULL,'\0','','','2014-12-22 10:39:58','dsfs','2014-12-22 10:39:58','dsfs','192.168.1.159','192.168.1.159'),(504,'呼叫统计(图)','REPORT_PLATFORM_TODAY_SYSTEM_CALLPHOTO',483,NULL,'\0','','','2014-12-22 10:40:32','dsfs','2014-12-22 10:40:32','dsfs','192.168.1.159','192.168.1.159'),(505,'呼叫统计','REPORT_PLATFORM_HISTORY_SYSTEM_CALL',486,NULL,'\0','','','2014-12-22 10:41:10','dsfs','2014-12-22 10:41:10','dsfs','192.168.1.159','192.168.1.159'),(506,'呼入统计','REPORT_PLATFORM_HISTORY_SYSTEM_IN',486,NULL,'\0','','','2014-12-22 10:41:34','dsfs','2014-12-22 10:41:34','dsfs','192.168.1.159','192.168.1.159'),(507,'呼出统计','REPORT_PLATFORM_HISTORY_SYSTEM_OUT',486,NULL,'\0','','','2014-12-22 10:41:56','dsfs','2014-12-22 10:41:56','dsfs','192.168.1.159','192.168.1.159'),(508,'本地呼叫统计','REPORT_PLATFORM_HISTORY_SYSTEM_LOCAL',486,NULL,'\0','','','2014-12-22 10:42:24','dsfs','2014-12-22 10:42:24','dsfs','192.168.1.159','192.168.1.159'),(509,'呼叫统计(图)','REPORT_PLATFORM_HISTORY_SYSTEM_CALLPHOTO',486,NULL,'\0','','','2014-12-22 10:42:54','dsfs','2014-12-22 10:42:54','dsfs','192.168.1.159','192.168.1.159'),(510,'分机呼叫统计','REPORT_EXT_TODAY_CALL',477,NULL,'\0','','','2014-12-22 11:10:52','dsfs','2014-12-22 11:11:11','dsfs','192.168.1.159','192.168.1.159'),(511,'分机呼入统计','REPORT_EXT_TODAY_IN',477,NULL,'\0','','','2014-12-22 11:11:41','dsfs','2014-12-22 11:11:41','dsfs','192.168.1.159','192.168.1.159'),(512,'分机呼出统计','REPORT_EXT_TODAY_OUT',477,NULL,'\0','','','2014-12-22 11:12:06','dsfs','2014-12-22 11:12:06','dsfs','192.168.1.159','192.168.1.159'),(513,'本地呼叫统计','REPORT_EXT_TODAY_LOCAL',477,NULL,'\0','','','2014-12-22 11:12:29','dsfs','2014-12-22 11:12:29','dsfs','192.168.1.159','192.168.1.159'),(514,'分机呼叫统计','REPORT_EXT_HISTORY_CALL',478,NULL,'\0','','','2014-12-22 11:13:07','dsfs','2014-12-22 11:13:07','dsfs','192.168.1.159','192.168.1.159'),(515,'分机呼入统计','REPORT_EXT_HISTORY_IN',478,NULL,'\0','','','2014-12-22 11:13:35','dsfs','2014-12-22 11:13:35','dsfs','192.168.1.159','192.168.1.159'),(516,'分机呼出统计','REPORT_EXT_HISTORY_OUT',478,NULL,'\0','','','2014-12-22 11:13:55','dsfs','2014-12-22 11:13:55','dsfs','192.168.1.159','192.168.1.159'),(517,'分机本地呼叫统计','REPORT_EXT_HISTORY_LOCAL',478,NULL,'\0','','','2014-12-22 11:14:17','dsfs','2014-12-22 11:14:17','dsfs','192.168.1.159','192.168.1.159');
/*!40000 ALTER TABLE `t_sys_module1` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_sys_organization`
--

DROP TABLE IF EXISTS `t_sys_organization`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_sys_organization` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `enname` varchar(50) DEFAULT NULL,
  `parentId` int(11) DEFAULT NULL,
  `type` int(11) DEFAULT NULL,
  `code` varchar(50) DEFAULT NULL,
  `domain` varchar(50) DEFAULT NULL COMMENT '域名',
  `extensionsNum` int(11) DEFAULT NULL COMMENT '分机授权数',
  `linesNum` int(11) DEFAULT NULL COMMENT '外线授权数',
  `agentsNum` int(11) DEFAULT NULL COMMENT '座席授权数',
  `faxsNum` int(11) DEFAULT '0' COMMENT '传真授权数',
  `conferencesNum` int(11) DEFAULT '0' COMMENT '会议授权数',
  `storegeSpace` int(11) DEFAULT '0' COMMENT '存储空间',
  `IsEnabled` bit(1) DEFAULT b'1' COMMENT '是否可用',
  `parentCode` varchar(50) DEFAULT NULL,
  `description` varchar(200) DEFAULT NULL,
  `open` bit(1) DEFAULT b'0',
  `remark` varchar(255) DEFAULT NULL,
  `createDate` varchar(255) DEFAULT NULL,
  `creater` varchar(255) DEFAULT NULL,
  `updateDate` varchar(255) DEFAULT NULL,
  `updater` varchar(255) DEFAULT NULL,
  `createIp` varchar(255) DEFAULT NULL,
  `updateIp` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`Id`),
  KEY `parentId` (`parentId`)
) ENGINE=InnoDB AUTO_INCREMENT=69 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_sys_organization`
--

LOCK TABLES `t_sys_organization` WRITE;
/*!40000 ALTER TABLE `t_sys_organization` DISABLE KEYS */;
INSERT INTO `t_sys_organization` VALUES (1,'organization_institution','organization_institution',0,0,'ORG','root',0,0,0,0,0,0,'','','不能删除。','','','2014-09-26 03:56:33','admin','2014-09-26 04:21:58','admin','127.0.0.1','127.0.0.1'),(68,'default','default',1,1,'default','default',50,NULL,50,50,NULL,NULL,'',NULL,'qwqw','\0',NULL,'2015-06-01 10:05:02','超级管理员','2015-07-31 09:54:26','超级管理员','192.168.1.144','0:0:0:0:0:0:0:1');
/*!40000 ALTER TABLE `t_sys_organization` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_sys_role`
--

DROP TABLE IF EXISTS `t_sys_role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_sys_role` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `module` mediumtext,
  `moduleId` mediumtext,
  `moduleCode` mediumtext,
  `remark` varchar(255) DEFAULT NULL,
  `status` varchar(255) DEFAULT NULL COMMENT 'Y正常 N不可用',
  `createDate` varchar(255) DEFAULT NULL,
  `creater` varchar(255) DEFAULT NULL,
  `updateDate` varchar(255) DEFAULT NULL,
  `updater` varchar(255) DEFAULT NULL,
  `createIp` varchar(255) DEFAULT NULL,
  `updateIp` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_sys_role`
--

LOCK TABLES `t_sys_role` WRITE;
/*!40000 ALTER TABLE `t_sys_role` DISABLE KEYS */;
INSERT INTO `t_sys_role` VALUES (7,'superadmin','权限管理,用户管理,用户,新增,修改,禁用,查看,删除,角色,新增,修改,删除,查看,批量删除,权限,新增,修改,删除,查看,批量删除,登陆日志,查看,批量删除,菜单管理,新增,修改,删除,查看,批量删除,呼叫统计,当日,座席,座席状态统计,呼叫,呼叫统计,呼入统计,呼出统计,内呼统计,呼叫统计(图),历史,座席,座席状态统计,座席绩效统计,呼叫,呼叫统计,呼入统计,呼出统计,内呼统计,呼叫统计(图),系统绩效统计,详单,座席,签入记录,操作记录,状态记录,呼叫,呼叫详单,未接来电,排队记录,通道记录,录音记录','1,884,888,991,992,993,994,995,889,996,997,998,999,1000,890,894,895,896,897,898,891,1001,1002,892,1003,1004,1005,1006,1007,1320,1321,1324,1326,1325,1327,1328,1329,1330,1331,1322,1332,1334,1335,1333,1336,1337,1338,1339,1340,1341,1323,1342,1344,1345,1346,1343,1347,1348,1349,1350,1351','ROOT,SYSTEM,SYSTEM_USER,SYSTEM_USER_ADD,SYSTEM_USER_MOD,SYSTEM_USER_DEL,SYSTEM_USER_VIEW,SYSTEM_USER_LDEL,SYSTEM_ROLE,SYSTEM_ROLE_ADD,SYSTEM_ROLE_MOD,SYSTEM_ROLE_DEL,SYSTEM_ROLE_VIEW,SYSTEM_ROLE_BATDEL,SYSTEM_LEVEL,SYSTEM_LEVEL_ADD,SYSTEM_LEVEL_MOD,SYSTEM_LEVEL_DEL,SYSTEM_LEVEL_VIEW,SYSTEM_LEVEL_BATDEL,SYSTEM_SYSLOG,SYSTEM_SYSLOG_VIEW,SYSTEM_SYSLOG_BATDEL,SYSTEM_MENU,SYSTEM_MENU_ADD,SYSTEM_MENU_MOD,SYSTEM_MENU_DEL,SYSTEM_MENU_VIEW,SYSTEM_MENU_BATDEL,MYSQL_REPORT_CALL_STATICTIS,MYSQL_REPORT_TODAY,MYSQL_REPORT_TODAY_AGENT,MYSQL_REPORT_TODAY_AGENT_MYCOMM_ZX_ZT,MYSQL_REPORT_TODAY_CALL,MYSQL_REPORT_TODAY_CALL_CTI_SYSTEM_CDR,MYSQL_REPORT_TODAY_CALL_CTI_INBOUND,MYSQL_REPORT_TODAY_CALL_CTI_OUTBOUND,MYSQL_REPORT_TODAY_CALL_CTI_INNER,MYSQL_REPORT_TODAY_CALL_CTI_SYSTEM_COUNT,MYSQL_REPORT_HISTORY,MYSQL_REPORT_HISTORY_AGENT,MYSQL_REPORT_HISTORY_AGENT_MYCOMM_ZX_ZT,MYSQL_REPORT_HISTORY_AGENT_AGENTJX,MYSQL_REPORT_HISTORY_CALL,MYSQL_REPORT_HISTORY_CALL_CTI_SYSTEM_CDR,MYSQL_REPORT_HISTORY_CALL_CTI_INBOUND,MYSQL_REPORT_HISTORY_CALL_CTI_OUTBOUND,MYSQL_REPORT_HISTORY_CALL_CTI_INNER,MYSQL_REPORT_HISTORY_CALL_CTI_SYSTEM_COUNT,MYSQL_REPORT_HISTORY_CALL_REPORT_GENERAL_KPI_SYSTEM,MYSQL_REPORT_DETAIL,MYSQL_REPORT_DETAIL_AGENT,MYSQL_REPORT_DETAIL_AGENT_AGENTQR,MYSQL_REPORT_DETAIL_AGENT_AGENTCZ,MYSQL_REPORT_DETAIL_AGENT_AGENTSTATE,MYSQL_REPORT_DETAIL_CALL,MYSQL_REPORT_DETAIL_CALL_REPORT_CDR,MYSQL_REPORT_DETAIL_CALL_CTI_REPORT_MISSCALL,MYSQL_REPORT_DETAIL_CALL_ACD,MYSQL_REPORT_DETAIL_CALL_CTI_CHANNEL,MYSQL_REPORT_DETAIL_CALL_CTI_RECORD_FILES','superadmin','Y','2014-09-26 06:19:59','admin','2016-04-12 16:02:43','superadmin','127.0.0.1','0:0:0:0:0:0:0:1'),(39,'admin','权限管理,呼叫统计,当日,座席,座席状态统计,呼叫,呼叫统计,呼入统计,呼出统计,内呼统计,呼叫统计(图),历史,座席,座席状态统计,座席绩效统计,呼叫,呼叫统计,呼入统计,呼出统计,内呼统计,呼叫统计(图),系统绩效统计,详单,座席,签入记录,操作记录,状态记录,呼叫,呼叫详单,未接来电,排队记录,通道记录,录音记录','1,1320,1321,1324,1326,1325,1327,1328,1329,1330,1331,1322,1332,1334,1335,1333,1336,1337,1338,1339,1340,1341,1323,1342,1344,1345,1346,1343,1347,1348,1349,1350,1351','ROOT,MYSQL_REPORT_CALL_STATICTIS,MYSQL_REPORT_TODAY,MYSQL_REPORT_TODAY_AGENT,MYSQL_REPORT_TODAY_AGENT_MYCOMM_ZX_ZT,MYSQL_REPORT_TODAY_CALL,MYSQL_REPORT_TODAY_CALL_CTI_SYSTEM_CDR,MYSQL_REPORT_TODAY_CALL_CTI_INBOUND,MYSQL_REPORT_TODAY_CALL_CTI_OUTBOUND,MYSQL_REPORT_TODAY_CALL_CTI_INNER,MYSQL_REPORT_TODAY_CALL_CTI_SYSTEM_COUNT,MYSQL_REPORT_HISTORY,MYSQL_REPORT_HISTORY_AGENT,MYSQL_REPORT_HISTORY_AGENT_MYCOMM_ZX_ZT,MYSQL_REPORT_HISTORY_AGENT_AGENTJX,MYSQL_REPORT_HISTORY_CALL,MYSQL_REPORT_HISTORY_CALL_CTI_SYSTEM_CDR,MYSQL_REPORT_HISTORY_CALL_CTI_INBOUND,MYSQL_REPORT_HISTORY_CALL_CTI_OUTBOUND,MYSQL_REPORT_HISTORY_CALL_CTI_INNER,MYSQL_REPORT_HISTORY_CALL_CTI_SYSTEM_COUNT,MYSQL_REPORT_HISTORY_CALL_REPORT_GENERAL_KPI_SYSTEM,MYSQL_REPORT_DETAIL,MYSQL_REPORT_DETAIL_AGENT,MYSQL_REPORT_DETAIL_AGENT_AGENTQR,MYSQL_REPORT_DETAIL_AGENT_AGENTCZ,MYSQL_REPORT_DETAIL_AGENT_AGENTSTATE,MYSQL_REPORT_DETAIL_CALL,MYSQL_REPORT_DETAIL_CALL_REPORT_CDR,MYSQL_REPORT_DETAIL_CALL_CTI_REPORT_MISSCALL,MYSQL_REPORT_DETAIL_CALL_ACD,MYSQL_REPORT_DETAIL_CALL_CTI_CHANNEL,MYSQL_REPORT_DETAIL_CALL_CTI_RECORD_FILES','',NULL,'2015-07-23 09:31:09','超级管理员','2016-04-12 16:03:05','superadmin','0:0:0:0:0:0:0:1','0:0:0:0:0:0:0:1');
/*!40000 ALTER TABLE `t_sys_role` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_sys_role_menu`
--

DROP TABLE IF EXISTS `t_sys_role_menu`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_sys_role_menu` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `menu_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`Id`),
  KEY `role_id` (`role_id`),
  KEY `menu_id` (`menu_id`),
  CONSTRAINT `t_sys_role_menu_ibfk_1` FOREIGN KEY (`role_id`) REFERENCES `t_sys_role` (`Id`),
  CONSTRAINT `t_sys_role_menu_ibfk_2` FOREIGN KEY (`menu_id`) REFERENCES `t_sys_menu1` (`Id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_sys_role_menu`
--

LOCK TABLES `t_sys_role_menu` WRITE;
/*!40000 ALTER TABLE `t_sys_role_menu` DISABLE KEYS */;
/*!40000 ALTER TABLE `t_sys_role_menu` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_sys_user`
--

DROP TABLE IF EXISTS `t_sys_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_sys_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cord` varchar(50) DEFAULT NULL,
  `password` varchar(20) DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL,
  `level` smallint(6) DEFAULT NULL,
  `sex` bit(1) DEFAULT NULL,
  `birthDate` date DEFAULT NULL,
  `telephone` varchar(20) DEFAULT NULL,
  `moblephone` varchar(15) DEFAULT NULL,
  `address` varchar(100) DEFAULT NULL,
  `e_mail` varchar(50) DEFAULT NULL,
  `knowledge` varchar(10) DEFAULT NULL,
  `jobName` varchar(50) DEFAULT NULL,
  `levelname` varchar(10) DEFAULT NULL,
  `roleId` int(11) DEFAULT NULL,
  `organizationId` int(11) DEFAULT NULL,
  `state` tinyint(1) DEFAULT NULL,
  `login_state` int(11) DEFAULT '0',
  `createdate` varchar(255) DEFAULT NULL,
  `creater` varchar(255) DEFAULT NULL,
  `updatedate` varchar(255) DEFAULT NULL,
  `updater` varchar(255) DEFAULT NULL,
  `createip` varchar(255) DEFAULT NULL,
  `updateip` varchar(255) DEFAULT NULL,
  `isagent` bit(1) DEFAULT b'0',
  `isteamleader` bit(1) DEFAULT b'0',
  `istel` bit(1) DEFAULT b'0',
  `iswebchat` bit(1) DEFAULT b'0',
  `isweixin` bit(1) DEFAULT b'0',
  `queues` varchar(5000) DEFAULT NULL,
  `ipAddress` varchar(255) DEFAULT NULL,
  `workNumber` varchar(45) DEFAULT NULL,
  `isWork` bit(1) DEFAULT b'1',
  `isTransfer` bit(1) DEFAULT b'0',
  PRIMARY KEY (`id`),
  KEY `organizationId` (`organizationId`),
  KEY `roleId` (`roleId`),
  CONSTRAINT `t_sys_user_ibfk_1` FOREIGN KEY (`roleId`) REFERENCES `t_sys_role` (`Id`),
  CONSTRAINT `t_sys_user_ibfk_2` FOREIGN KEY (`organizationId`) REFERENCES `t_sys_organization` (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=63 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_sys_user`
--

LOCK TABLES `t_sys_user` WRITE;
/*!40000 ALTER TABLE `t_sys_user` DISABLE KEYS */;
INSERT INTO `t_sys_user` VALUES (1,'admin','\rEFG','admin',0,NULL,NULL,'','',NULL,'admin@163.com',NULL,NULL,'系统管理员',39,68,1,0,NULL,NULL,NULL,NULL,NULL,NULL,'','\0','','','\0','',NULL,'8000','','\0'),(60,'superadmin','\rEFG','superadmin',3,'',NULL,'','',NULL,'superadmin@163.com',NULL,NULL,NULL,7,1,1,0,NULL,NULL,NULL,NULL,NULL,NULL,'','','','','','',NULL,'8001','','\0'),(62,'2','F','2',3,'\0',NULL,'','',NULL,'',NULL,NULL,NULL,NULL,NULL,1,0,NULL,NULL,NULL,NULL,NULL,NULL,'\0','\0','\0','\0','\0',NULL,NULL,NULL,'','\0');
/*!40000 ALTER TABLE `t_sys_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary view structure for view `v_agent_action`
--

DROP TABLE IF EXISTS `v_agent_action`;
/*!50001 DROP VIEW IF EXISTS `v_agent_action`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_agent_action` AS SELECT 
 1 AS `ID`,
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `EVENT_TIMESTAMP`,
 1 AS `CHANNEL_UUID`,
 1 AS `OTHER_LEG_UUID`,
 1 AS `CLASS`,
 1 AS `METHOD`,
 1 AS `PARAMS`,
 1 AS `CUR_STATE_NAME`,
 1 AS `CALL_UUID`,
 1 AS `AGENT_NAME`,
 1 AS `ORG_ID`,
 1 AS `AGENT_EXT`,
 1 AS `AGENT_CONTACT`,
 1 AS `WORK_ID`,
 1 AS `LOGIN_TIMESTAMP`,
 1 AS `IS_LEADER`,
 1 AS `LOGOUT_TIMESTAMP`,
 1 AS `LOGOUT_STATE`,
 1 AS `ZH_CN`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_action`
--

DROP TABLE IF EXISTS `v_report_agent_action`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_action`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_action` AS SELECT 
 1 AS `ID`,
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `EVENT_TIMESTAMP`,
 1 AS `CHANNEL_UUID`,
 1 AS `OTHER_LEG_UUID`,
 1 AS `CLASS`,
 1 AS `METHOD`,
 1 AS `PARAMS`,
 1 AS `CUR_STATE_NAME`,
 1 AS `CALL_UUID`,
 1 AS `AGENT_NAME`,
 1 AS `ORG_ID`,
 1 AS `AGENT_EXT`,
 1 AS `AGENT_CONTACT`,
 1 AS `WORK_ID`,
 1 AS `LOGIN_TIMESTAMP`,
 1 AS `IS_LEADER`,
 1 AS `LOGOUT_TIMESTAMP`,
 1 AS `LOGOUT_STATE`,
 1 AS `ZH_CN`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx`
--

DROP TABLE IF EXISTS `v_report_agent_jx`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx` AS SELECT 
 1 AS `ID`,
 1 AS `PRE_REC_ID`,
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `ENTRY_TIMESTAMP`,
 1 AS `EXIT_TIMESTAMP`,
 1 AS `DURATION`,
 1 AS `NEW_STATE_NAME`,
 1 AS `OLD_STATE_NAME`,
 1 AS `CHANNEL_UUID`,
 1 AS `OTHER_LEG_UUID`,
 1 AS `SUB_ID`,
 1 AS `ENTRY_TIMESTAMP_30M`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_nh`
--

DROP TABLE IF EXISTS `v_report_agent_jx_nh`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_nh`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_nh` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `ENTRY_TIMESTAMP_30M`,
 1 AS `id5`,
 1 AS `duration5`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_nh_1`
--

DROP TABLE IF EXISTS `v_report_agent_jx_nh_1`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_nh_1`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_nh_1` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `CHANNEL_UUID`,
 1 AS `ENTRY_TIMESTAMP_30M`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_nh_2`
--

DROP TABLE IF EXISTS `v_report_agent_jx_nh_2`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_nh_2`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_nh_2` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `CHANNEL_UUID`,
 1 AS `ENTRY_TIMESTAMP_30M`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_nh_3`
--

DROP TABLE IF EXISTS `v_report_agent_jx_nh_3`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_nh_3`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_nh_3` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `ENTRY_TIMESTAMP_30M`,
 1 AS `duration5`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_nh_4`
--

DROP TABLE IF EXISTS `v_report_agent_jx_nh_4`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_nh_4`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_nh_4` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `ENTRY_TIMESTAMP_30M`,
 1 AS `id5`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_th`
--

DROP TABLE IF EXISTS `v_report_agent_jx_th`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_th`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_th` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `ENTRY_TIMESTAMP_30M`,
 1 AS `id5`,
 1 AS `duration5`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_th_1`
--

DROP TABLE IF EXISTS `v_report_agent_jx_th_1`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_th_1`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_th_1` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `CHANNEL_UUID`,
 1 AS `ENTRY_TIMESTAMP_30M`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_th_2`
--

DROP TABLE IF EXISTS `v_report_agent_jx_th_2`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_th_2`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_th_2` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `CHANNEL_UUID`,
 1 AS `ENTRY_TIMESTAMP_30M`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_th_3`
--

DROP TABLE IF EXISTS `v_report_agent_jx_th_3`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_th_3`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_th_3` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `ENTRY_TIMESTAMP_30M`,
 1 AS `duration5`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_th_4`
--

DROP TABLE IF EXISTS `v_report_agent_jx_th_4`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_th_4`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_th_4` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `ENTRY_TIMESTAMP_30M`,
 1 AS `id5`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_wh`
--

DROP TABLE IF EXISTS `v_report_agent_jx_wh`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_wh`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_wh` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `ENTRY_TIMESTAMP_30M`,
 1 AS `id5`,
 1 AS `duration5`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_wh_1`
--

DROP TABLE IF EXISTS `v_report_agent_jx_wh_1`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_wh_1`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_wh_1` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `CHANNEL_UUID`,
 1 AS `ENTRY_TIMESTAMP_30M`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_wh_2`
--

DROP TABLE IF EXISTS `v_report_agent_jx_wh_2`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_wh_2`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_wh_2` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `CHANNEL_UUID`,
 1 AS `ENTRY_TIMESTAMP_30M`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_wh_3`
--

DROP TABLE IF EXISTS `v_report_agent_jx_wh_3`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_wh_3`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_wh_3` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `ENTRY_TIMESTAMP_30M`,
 1 AS `duration5`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_jx_wh_4`
--

DROP TABLE IF EXISTS `v_report_agent_jx_wh_4`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_wh_4`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_jx_wh_4` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `ENTRY_TIMESTAMP_30M`,
 1 AS `id5`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agent_session`
--

DROP TABLE IF EXISTS `v_report_agent_session`;
/*!50001 DROP VIEW IF EXISTS `v_report_agent_session`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agent_session` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `AGENT_NAME`,
 1 AS `ORG_ID`,
 1 AS `AGENT_EXT`,
 1 AS `AGENT_CONTACT`,
 1 AS `WORK_ID`,
 1 AS `IS_LEADER`,
 1 AS `LOGIN_TIMESTAMP`,
 1 AS `LOGOUT_TIMESTAMP`,
 1 AS `LOGOUT_STATE`,
 1 AS `LOGIN_TIMESTAMP_30M`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agentstate`
--

DROP TABLE IF EXISTS `v_report_agentstate`;
/*!50001 DROP VIEW IF EXISTS `v_report_agentstate`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agentstate` AS SELECT 
 1 AS `ID`,
 1 AS `ENTRY_TIMESTAMP`,
 1 AS `AGENT_ID`,
 1 AS `ENTRY_TIME_H`,
 1 AS `ENTRY_TIME_DATE`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `NEW_STATE_NAME`,
 1 AS `CHANNEL_UUID`,
 1 AS `OTHER_LEG_UUID`,
 1 AS `OLD_STATE_NAME`,
 1 AS `DURATION`,
 1 AS `CALL_UUID`,
 1 AS `EXIT_TIMESTAMP`,
 1 AS `PRE_REC_ID`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agentstate_session`
--

DROP TABLE IF EXISTS `v_report_agentstate_session`;
/*!50001 DROP VIEW IF EXISTS `v_report_agentstate_session`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agentstate_session` AS SELECT 
 1 AS `ID`,
 1 AS `ENTRY_TIMESTAMP`,
 1 AS `ENTRY_TIME_H`,
 1 AS `ENTRY_TIME_DATE`,
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `NEW_STATE_NAME`,
 1 AS `CHANNEL_UUID`,
 1 AS `OTHER_LEG_UUID`,
 1 AS `OLD_STATE_NAME`,
 1 AS `DURATION`,
 1 AS `CALL_UUID`,
 1 AS `EXIT_TIMESTAMP`,
 1 AS `PRE_REC_ID`,
 1 AS `AGENT_NAME`,
 1 AS `ORG_ID`,
 1 AS `AGENT_EXT`,
 1 AS `AGENT_CONTACT`,
 1 AS `WORK_ID`,
 1 AS `IS_LEADER`,
 1 AS `LOGIN_TIMESTAMP`,
 1 AS `LOGOUT_TIMESTAMP`,
 1 AS `LOGOUT_STATE`,
 1 AS `ZH_CN`,
 1 AS `OLD_ZH_CN`,
 1 AS `sec_to_time(V_REPORT_CTI_AGENT_STATE.DURATION)`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_agentstate_session_h`
--

DROP TABLE IF EXISTS `v_report_agentstate_session_h`;
/*!50001 DROP VIEW IF EXISTS `v_report_agentstate_session_h`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_agentstate_session_h` AS SELECT 
 1 AS `ID`,
 1 AS `ENTRY_TIMESTAMP`,
 1 AS `ENTRY_TIME_H`,
 1 AS `ENTRY_TIME_DATE`,
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `NEW_STATE_NAME`,
 1 AS `CHANNEL_UUID`,
 1 AS `OTHER_LEG_UUID`,
 1 AS `OLD_STATE_NAME`,
 1 AS `DURATION`,
 1 AS `CALL_UUID`,
 1 AS `EXIT_TIMESTAMP`,
 1 AS `PRE_REC_ID`,
 1 AS `AGENT_NAME`,
 1 AS `ORG_ID`,
 1 AS `AGENT_EXT`,
 1 AS `AGENT_CONTACT`,
 1 AS `WORK_ID`,
 1 AS `IS_LEADER`,
 1 AS `LOGIN_TIMESTAMP`,
 1 AS `LOGOUT_TIMESTAMP`,
 1 AS `LOGOUT_STATE`,
 1 AS `ZH_CN`,
 1 AS `OLD_ZH_CN`,
 1 AS `DURATION1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cdr`
--

DROP TABLE IF EXISTS `v_report_cdr`;
/*!50001 DROP VIEW IF EXISTS `v_report_cdr`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cdr` AS SELECT 
 1 AS `ZH_CN`,
 1 AS `ACCOUNT_CODE`,
 1 AS `AGENT_COUNT`,
 1 AS `AGENT_TIME`,
 1 AS `AGENT_TIME1`,
 1 AS `ANSWERED`,
 1 AS `ANSWERED_TIME`,
 1 AS `ANSWERED1`,
 1 AS `BILLSEC`,
 1 AS `BILLSEC1`,
 1 AS `CALLEE_NUMBER`,
 1 AS `CANCEL_TIME`,
 1 AS `CREAT_TIME`,
 1 AS `CTI_CALL_DIRECTION`,
 1 AS `CTI_CALL_UUID`,
 1 AS `CTI_CC_DIRECTION`,
 1 AS `DURATION`,
 1 AS `DURATION1`,
 1 AS `HANGUP_CAUSE`,
 1 AS `HANGUP_DISPOSITION`,
 1 AS `ID`,
 1 AS `IVR_COUNT`,
 1 AS `IVR_TIME`,
 1 AS `IVR_TIME1`,
 1 AS `ORIG_CALLEE_NUMBER`,
 1 AS `ORIG_CALLER_NUMBER`,
 1 AS `ORIG_CALLER_TYPE`,
 1 AS `QUEUE_COUNT`,
 1 AS `QUEUE_TIME`,
 1 AS `QUEUE_TIME1`,
 1 AS `WAITSEC`,
 1 AS `WAITSEC1`,
 1 AS `ORIG_CALLER_TYPE1`,
 1 AS `HANGUP_DISPOSITION1`,
 1 AS `CTI_CALL_DIRECTION1`,
 1 AS `CTI_CC_DIRECTION1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_channel`
--

DROP TABLE IF EXISTS `v_report_channel`;
/*!50001 DROP VIEW IF EXISTS `v_report_channel`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_channel` AS SELECT 
 1 AS `DURATION1`,
 1 AS `BILLSEC1`,
 1 AS `ORIG_CALLER_NUMBER`,
 1 AS `ORIG_CALLEE_NUMBER`,
 1 AS `CONTEXT`,
 1 AS `BRIDGED_TIME`,
 1 AS `channel_name`,
 1 AS `PROGRESSSEC`,
 1 AS `CALLER_NUMBER`,
 1 AS `CALLEE_NUMBER`,
 1 AS `CALL_DIRECTION`,
 1 AS `CTI_CALL_DIRECTION`,
 1 AS `CTI_CC_DIRECTION`,
 1 AS `HANGUP_CAUSE`,
 1 AS `ZH_CN`,
 1 AS `ACCOUNT_CODE`,
 1 AS `CTI_CHANNEL_TYPE`,
 1 AS `CREATED_TIME`,
 1 AS `ANSWERED_TIME`,
 1 AS `HANGUP_TIME`,
 1 AS `HANGUP_DISPOSITION`,
 1 AS `IS_ORIGINATOR`,
 1 AS `CHANNEL_UUID`,
 1 AS `CTI_CALL_UUID`,
 1 AS `CALL_DIRECTION1`,
 1 AS `CTI_CALL_DIRECTION1`,
 1 AS `CTI_CC_DIRECTION1`,
 1 AS `DURATION`,
 1 AS `BILLSEC`,
 1 AS `CTI_CHANNEL_TYPE1`,
 1 AS `IS_ORIGINATOR1`,
 1 AS `HANGUP_DISPOSITION1`,
 1 AS `id`,
 1 AS `ANSWERSEC`,
 1 AS `WAITSEC`,
 1 AS `CTI_BRIDGE_AGENT_ACCUM`,
 1 AS `CTI_QUEUE_ACCUM`,
 1 AS `CTI_BRIDGE_ACCUM`,
 1 AS `OTHER_LEG_UUID`,
 1 AS `DESTINATION_NUMBER`,
 1 AS `CONTEXT1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cti_acd_event`
--

DROP TABLE IF EXISTS `v_report_cti_acd_event`;
/*!50001 DROP VIEW IF EXISTS `v_report_cti_acd_event`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cti_acd_event` AS SELECT 
 1 AS `ID`,
 1 AS `EVENT_TIMESTAMP`,
 1 AS `ACTION`,
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_UUID`,
 1 AS `AGENT_CHANNEL_UUID`,
 1 AS `AGENT_STATUS`,
 1 AS `AGENT_STATE`,
 1 AS `QUEUE`,
 1 AS `QUEUE_COUNT`,
 1 AS `MEMBER_UUID`,
 1 AS `MEMBER_CHANNEL_UUID`,
 1 AS `MEMBER_CID_NAME`,
 1 AS `MEMBER_CID_NUMBER`,
 1 AS `HANGUP_CAUSE`,
 1 AS `CANCEL_CAUSE`,
 1 AS `CTI_CALL_UUID`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cti_agent_action`
--

DROP TABLE IF EXISTS `v_report_cti_agent_action`;
/*!50001 DROP VIEW IF EXISTS `v_report_cti_agent_action`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cti_agent_action` AS SELECT 
 1 AS `ID`,
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `EVENT_TIMESTAMP`,
 1 AS `CHANNEL_UUID`,
 1 AS `OTHER_LEG_UUID`,
 1 AS `CLASS`,
 1 AS `METHOD`,
 1 AS `PARAMS`,
 1 AS `CUR_STATE_NAME`,
 1 AS `CALL_UUID`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cti_agent_action_name`
--

DROP TABLE IF EXISTS `v_report_cti_agent_action_name`;
/*!50001 DROP VIEW IF EXISTS `v_report_cti_agent_action_name`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cti_agent_action_name` AS SELECT 
 1 AS `ID`,
 1 AS `METHOD`,
 1 AS `ZH_CN`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cti_agent_session`
--

DROP TABLE IF EXISTS `v_report_cti_agent_session`;
/*!50001 DROP VIEW IF EXISTS `v_report_cti_agent_session`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cti_agent_session` AS SELECT 
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `AGENT_NAME`,
 1 AS `ORG_ID`,
 1 AS `AGENT_EXT`,
 1 AS `AGENT_CONTACT`,
 1 AS `WORK_ID`,
 1 AS `IS_LEADER`,
 1 AS `LOGIN_TIMESTAMP`,
 1 AS `LOGOUT_TIMESTAMP`,
 1 AS `LOGOUT_STATE`,
 1 AS `LOGIN_TIMESTAMP_30M`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cti_agent_state`
--

DROP TABLE IF EXISTS `v_report_cti_agent_state`;
/*!50001 DROP VIEW IF EXISTS `v_report_cti_agent_state`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cti_agent_state` AS SELECT 
 1 AS `ID`,
 1 AS `ENTRY_TIMESTAMP`,
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `NEW_STATE_NAME`,
 1 AS `CHANNEL_UUID`,
 1 AS `OTHER_LEG_UUID`,
 1 AS `SUB_ID`,
 1 AS `OLD_STATE_NAME`,
 1 AS `DURATION`,
 1 AS `CALL_UUID`,
 1 AS `EXIT_TIMESTAMP`,
 1 AS `PRE_REC_ID`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cti_agent_state_name`
--

DROP TABLE IF EXISTS `v_report_cti_agent_state_name`;
/*!50001 DROP VIEW IF EXISTS `v_report_cti_agent_state_name`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cti_agent_state_name` AS SELECT 
 1 AS `ID`,
 1 AS `STATE`,
 1 AS `ZH_CN`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cti_channel`
--

DROP TABLE IF EXISTS `v_report_cti_channel`;
/*!50001 DROP VIEW IF EXISTS `v_report_cti_channel`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cti_channel` AS SELECT 
 1 AS `ORIG_CALLER_NUMBER`,
 1 AS `ORIG_CALLEE_NUMBER`,
 1 AS `CONTEXT`,
 1 AS `BRIDGED_TIME`,
 1 AS `channel_name`,
 1 AS `PROGRESSSEC`,
 1 AS `CALLER_NUMBER`,
 1 AS `CALLEE_NUMBER`,
 1 AS `CALL_DIRECTION`,
 1 AS `CTI_CALL_DIRECTION`,
 1 AS `CTI_CC_DIRECTION`,
 1 AS `ACCOUNT_CODE`,
 1 AS `CTI_CHANNEL_TYPE`,
 1 AS `CREATED_TIME`,
 1 AS `ANSWERED_TIME`,
 1 AS `HANGUP_TIME`,
 1 AS `HANGUP_DISPOSITION`,
 1 AS `IS_ORIGINATOR`,
 1 AS `CHANNEL_UUID`,
 1 AS `CTI_CALL_UUID`,
 1 AS `DURATION`,
 1 AS `BILLSEC`,
 1 AS `id`,
 1 AS `ANSWERSEC`,
 1 AS `WAITSEC`,
 1 AS `CTI_BRIDGE_AGENT_ACCUM`,
 1 AS `CTI_QUEUE_ACCUM`,
 1 AS `CTI_BRIDGE_ACCUM`,
 1 AS `OTHER_LEG_UUID`,
 1 AS `DESTINATION_NUMBER`,
 1 AS `HANGUP_CAUSE`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cti_channel_execute`
--

DROP TABLE IF EXISTS `v_report_cti_channel_execute`;
/*!50001 DROP VIEW IF EXISTS `v_report_cti_channel_execute`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cti_channel_execute` AS SELECT 
 1 AS `ID`,
 1 AS `CHANNEL_UUID`,
 1 AS `APPLICATION`,
 1 AS `APPLICATION_DATA`,
 1 AS `APPLICATION_RESPONSE`,
 1 AS `START_TIME`,
 1 AS `COMPLETE_TIME`,
 1 AS `APPLICATION_UUID`,
 1 AS `CALL_UUID`,
 1 AS `CTI_CALL_UUID`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cti_fax_files`
--

DROP TABLE IF EXISTS `v_report_cti_fax_files`;
/*!50001 DROP VIEW IF EXISTS `v_report_cti_fax_files`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cti_fax_files` AS SELECT 
 1 AS `ID`,
 1 AS `EVENT_TIMESTAMP`,
 1 AS `CHANNEL_NAME`,
 1 AS `CHANNEL_UUID`,
 1 AS `CALL_UUID`,
 1 AS `CTI_CALL_UUID`,
 1 AS `CALLER_NUMBER`,
 1 AS `CALLEE_NUMBER`,
 1 AS `CTI_CALL_DIRECTION`,
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `CC_QUEUE`,
 1 AS `FAX_FILE_NAME`,
 1 AS `FAX_SUCCESS`,
 1 AS `FAX_RESULT_CODE`,
 1 AS `FAX_RESULT_TEXT`,
 1 AS `FAX_DOCUMENT_TRANSFERRED_PAGES`,
 1 AS `FAX_DOCUMENT_TOTAL_PAGES`,
 1 AS `FAX_IMAGE_RESOLUTION`,
 1 AS `FAX_IMAGE_SIZE`,
 1 AS `FAX_TRANSFER_RATE`,
 1 AS `FAX_DIRECTION`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cti_hangup_cause`
--

DROP TABLE IF EXISTS `v_report_cti_hangup_cause`;
/*!50001 DROP VIEW IF EXISTS `v_report_cti_hangup_cause`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cti_hangup_cause` AS SELECT 
 1 AS `id`,
 1 AS `HANGUP_CAUSE`,
 1 AS `ZH_CN`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_cti_record_files`
--

DROP TABLE IF EXISTS `v_report_cti_record_files`;
/*!50001 DROP VIEW IF EXISTS `v_report_cti_record_files`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_cti_record_files` AS SELECT 
 1 AS `ID`,
 1 AS `CHANNEL_UUID`,
 1 AS `CTI_CALL_DIRECTION`,
 1 AS `CALL_UUID`,
 1 AS `CTI_CALL_UUID`,
 1 AS `CALLER_NUMBER`,
 1 AS `CALLEE_NUMBER`,
 1 AS `RECORD_STEREO`,
 1 AS `READ_CODEC`,
 1 AS `READ_RATE`,
 1 AS `WRITE_CODEC`,
 1 AS `WRITE_RATE`,
 1 AS `RECORD_FILE_NAME`,
 1 AS `START_TIME`,
 1 AS `STOP_TIME`,
 1 AS `CC_QUEUE`,
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `CTI_RECORD_TYPE`,
 1 AS `ORG_ID`,
 1 AS `VM_NUMBER`,
 1 AS `URL_PREFIX`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_im_history`
--

DROP TABLE IF EXISTS `v_report_im_history`;
/*!50001 DROP VIEW IF EXISTS `v_report_im_history`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_im_history` AS SELECT 
 1 AS `timestamp`,
 1 AS `creator`,
 1 AS `to_id`,
 1 AS `to_name`,
 1 AS `wx_direction`,
 1 AS `from_id`,
 1 AS `from_name`,
 1 AS `sub_type`,
 1 AS `message_id`,
 1 AS `payload`,
 1 AS `agent_id`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `url_head`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_ivr`
--

DROP TABLE IF EXISTS `v_report_ivr`;
/*!50001 DROP VIEW IF EXISTS `v_report_ivr`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_ivr` AS SELECT 
 1 AS `ORIG_CALLER_NUMBER`,
 1 AS `ORIG_CALLEE_NUMBER`,
 1 AS `CALLER_NUMBER`,
 1 AS `CALLEE_NUMBER`,
 1 AS `CALL_DIRECTION`,
 1 AS `CTI_CALL_DIRECTION`,
 1 AS `CTI_CC_DIRECTION`,
 1 AS `DURATION`,
 1 AS `DURATION1`,
 1 AS `ACCOUNT_CODE`,
 1 AS `CTI_CHANNEL_TYPE`,
 1 AS `CREATED_TIME`,
 1 AS `ANSWERED_TIME`,
 1 AS `HANGUP_TIME`,
 1 AS `HANGUP_DISPOSITION`,
 1 AS `IS_ORIGINATOR`,
 1 AS `CHANNEL_UUID`,
 1 AS `CTI_CALL_UUID`,
 1 AS `START_TIME`,
 1 AS `COMPLETE_TIME`,
 1 AS `IVRDURATION`,
 1 AS `IVRDURATION1`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_record_files`
--

DROP TABLE IF EXISTS `v_report_record_files`;
/*!50001 DROP VIEW IF EXISTS `v_report_record_files`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_record_files` AS SELECT 
 1 AS `ID`,
 1 AS `CHANNEL_UUID`,
 1 AS `CTI_CALL_DIRECTION`,
 1 AS `CTI_CALL_UUID`,
 1 AS `CALLER_NUMBER`,
 1 AS `CALLEE_NUMBER`,
 1 AS `RECORD_FILE_NAME`,
 1 AS `START_TIME`,
 1 AS `STOP_TIME`,
 1 AS `CC_QUEUE`,
 1 AS `AGENT_ID`,
 1 AS `AGENT_SESSION_ID`,
 1 AS `ORG_ID`,
 1 AS `VM_NUMBER`,
 1 AS `CTI_RECORD_TYPE`,
 1 AS `URL_PREFIX`,
 1 AS `CTI_RECORD_TYPE1`,
 1 AS `AGENT_NAME`,
 1 AS `AGENT_EXT`,
 1 AS `WORK_ID`,
 1 AS `DIRECTION1`,
 1 AS `rf`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_service`
--

DROP TABLE IF EXISTS `v_report_service`;
/*!50001 DROP VIEW IF EXISTS `v_report_service`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_service` AS SELECT 
 1 AS `SelectName`,
 1 AS `PJcount`,
 1 AS `hour`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_report_service1`
--

DROP TABLE IF EXISTS `v_report_service1`;
/*!50001 DROP VIEW IF EXISTS `v_report_service1`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_report_service1` AS SELECT 
 1 AS `totalRecord`,
 1 AS `hour`*/;
SET character_set_client = @saved_cs_client;

--
-- Dumping events for database 'c8report'
--
/*!50106 SET @save_time_zone= @@TIME_ZONE */ ;
/*!50106 DROP EVENT IF EXISTS `EVENT_lqy_test_insert_23` */;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = '' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `EVENT_lqy_test_insert_23` ON SCHEDULE EVERY 1 DAY STARTS '2015-04-27 00:30:00' ON COMPLETION NOT PRESERVE ENABLE DO call c8config.p_load_data_2() */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
/*!50106 DROP EVENT IF EXISTS `EVENT_TRANSFER_DATA1` */;;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `EVENT_TRANSFER_DATA1` ON SCHEDULE EVERY 1 DAY STARTS '2016-03-03 03:12:00' ON COMPLETION PRESERVE ENABLE DO CALL p_load_transfer_data2 */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
/*!50106 DROP EVENT IF EXISTS `EVENT_TRANSFER_DATA2` */;;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `EVENT_TRANSFER_DATA2` ON SCHEDULE EVERY 1 DAY STARTS '2016-03-03 04:14:00' ON COMPLETION PRESERVE ENABLE DO CALL p_load_transfer_data1 */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
/*!50106 DROP EVENT IF EXISTS `p_c8_EVENT_0` */;;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = '' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `p_c8_EVENT_0` ON SCHEDULE EVERY 1 DAY STARTS '2015-06-02 12:00:00' ON COMPLETION PRESERVE ENABLE DO call c8config.p_load_data_4() */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
/*!50106 DROP EVENT IF EXISTS `p_c8_EVENT_1` */;;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = '' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `p_c8_EVENT_1` ON SCHEDULE EVERY 5 MINUTE STARTS '2016-01-14 18:05:00' ON COMPLETION PRESERVE ENABLE DO call c8config.p_load_data_1 */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
/*!50106 DROP EVENT IF EXISTS `p_c8_EVENT_2` */;;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = '' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `p_c8_EVENT_2` ON SCHEDULE EVERY 1 DAY STARTS '2015-05-27 00:20:10' ON COMPLETION PRESERVE ENABLE DO call c8config.p_load_data_2() */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
/*!50106 DROP EVENT IF EXISTS `p_c8_EVENT_5` */;;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = '' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `p_c8_EVENT_5` ON SCHEDULE EVERY 30 MINUTE STARTS '2015-06-09 14:10:00' ON COMPLETION PRESERVE ENABLE DO call c8config.p_load_data_5 */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
/*!50106 DROP EVENT IF EXISTS `p_c8_EVENT_MISCALL` */;;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = '' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = 'SYSTEM' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`root`@`localhost`*/ /*!50106 EVENT `p_c8_EVENT_MISCALL` ON SCHEDULE EVERY 5 MINUTE STARTS '2016-01-14 16:56:17' ON COMPLETION PRESERVE ENABLE DO call c8config.p_load_miscall */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
DELIMITER ;
/*!50106 SET TIME_ZONE= @save_time_zone */ ;

--
-- Dumping routines for database 'c8report'
--
/*!50003 DROP FUNCTION IF EXISTS `report_number_to_time` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `report_number_to_time`(
number1 int 
) RETURNS varchar(255) CHARSET utf8
BEGIN
    declare char1 varchar(255);
    declare number2 varchar(255);
    declare number3 varchar(255);
    if number1>=86400 then
    set number2=convert(floor(number1/86400),char(8));
    set number3=convert(sec_to_time(number1%86400),char(8));
    set char1=concat(number2,' ',number3);
  else
    set char1=convert(sec_to_time(number1),char(8));
  end if;
RETURN char1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `REPORT_TIME_30M` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `REPORT_TIME_30M`(
datetime1 DATETIME
) RETURNS datetime
BEGIN
  declare time1 DATETIME;
    SET time1=str_to_date(concat(date_format(datetime1,'%Y-%m-%d %H:')
  ,floor((date_format(datetime1,'%i')*60+date_format(datetime1,'%s'))/1800)*30,':00') ,'%Y-%m-%d %T');
  
RETURN time1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `add_test` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `add_test`(IN A INT, IN B INT, OUT C INT)
BEGIN SELECT A+B INTO C; END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `insert_t1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `insert_t1`()
begin
select last_insert_id();
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `insert_t2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `insert_t2`(IN N varchar(255))
begin
insert into t1(name) values(N);
select last_insert_id();
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `insert_t3` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `insert_t3`(IN N varchar(255))
begin
insert into t1(name) values(N);
select last_insert_id() as ID;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `insert_t4` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `insert_t4`(IN N varchar(255), IN NOUSE int(11))
begin
insert into t1(name) values(N);
select last_insert_id() as ID;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `insert_t5` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `insert_t5`(IN N varchar(255), OUT NOUSE int(11))
begin
insert into t1(name) values(N);
select last_insert_id() into NOUSE;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `insert_t6` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `insert_t6`(IN N varchar(255), INOUT NOUSE int(11))
begin
insert into t1(name) values(N);
select last_insert_id() into NOUSE;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `insert_t7` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `insert_t7`(IN N varchar(255), IN NOUSE int(11))
begin
insert into t1(name) values(N);
select last_insert_id() as ID;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PROC_INSERT_CTI_ACD_EVENT` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `PROC_INSERT_CTI_ACD_EVENT`(

  IN_EVENT_TIMESTAMP VARCHAR(255),

  IN_ACTION VARCHAR(255),

  IN_AGENT_ID VARCHAR(255),

  IN_AGENT_SESSION_UUID VARCHAR(255),

  IN_AGENT_CHANNEL_UUID VARCHAR(255),

  IN_AGENT_STATUS VARCHAR(255),

  IN_AGENT_STATE VARCHAR(255),

  IN_QUEUE VARCHAR(255),

  IN_QUEUE_COUNT VARCHAR(255),

  IN_MEMBER_UUID VARCHAR(255),

  IN_MEMBER_CHANNEL_UUID VARCHAR(255),

  IN_MEMBER_CID_NAME VARCHAR(255),

  IN_MEMBER_CID_NUMBER VARCHAR(255),

  IN_HANGUP_CAUSE VARCHAR(255),

  IN_CANCEL_CAUSE VARCHAR(255),

  IN_CTI_CALL_UUID VARCHAR(255)

)
BEGIN
      START TRANSACTION;
  INSERT INTO cti_acd_event

       (EVENT_TIMESTAMP

       ,ACTION

       ,AGENT_ID

       ,AGENT_SESSION_UUID

       ,AGENT_CHANNEL_UUID

       ,AGENT_STATUS

       ,AGENT_STATE

       ,QUEUE

       ,QUEUE_COUNT

       ,MEMBER_UUID

       ,MEMBER_CHANNEL_UUID

       ,MEMBER_CID_NAME

       ,MEMBER_CID_NUMBER

       ,HANGUP_CAUSE

       ,CANCEL_CAUSE

       ,CTI_CALL_UUID)

    VALUES(

       CAST(IN_EVENT_TIMESTAMP AS datetime),

     IN_ACTION,

     IN_AGENT_ID,

     IN_AGENT_SESSION_UUID,

     IN_AGENT_CHANNEL_UUID,

     IN_AGENT_STATUS,

     IN_AGENT_STATE,

     IN_QUEUE,

     IN_QUEUE_COUNT,

     IN_MEMBER_UUID,

     IN_MEMBER_CHANNEL_UUID,

     IN_MEMBER_CID_NAME,

     IN_MEMBER_CID_NUMBER,

     IN_HANGUP_CAUSE,

     IN_CANCEL_CAUSE,

     IN_CTI_CALL_UUID);
     commit;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PROC_INSERT_CTI_AGENT_ACTION` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `PROC_INSERT_CTI_AGENT_ACTION`(
  IN_EVENT_TIMESTAMP VARCHAR(255),
  IN_AGENT_ID VARCHAR(255),
  IN_AGENT_SESSION_ID VARCHAR(255),
  IN_CUR_STATE_NAME VARCHAR(255),
  IN_CHANNEL_UUID VARCHAR(255),
  IN_OTHER_LEG_UUID VARCHAR(255),
  IN_CALL_UUID VARCHAR(255),
  IN_CLASS VARCHAR(255),
  IN_METHOD VARCHAR(255),
  IN_PARAMS VARCHAR(1024)
)
BEGIN
      START TRANSACTION;
 INSERT INTO cti_agent_action(
  EVENT_TIMESTAMP,
  AGENT_ID,
  AGENT_SESSION_ID,
  CUR_STATE_NAME,
  CHANNEL_UUID,
  OTHER_LEG_UUID,
  CALL_UUID,
  CLASS,
  METHOD,
  PARAMS
   ) VALUES(
    IN_EVENT_TIMESTAMP,
    IN_AGENT_ID,
    IN_AGENT_SESSION_ID,
    IN_CUR_STATE_NAME,
    IN_CHANNEL_UUID,
    IN_OTHER_LEG_UUID,
    IN_CALL_UUID,
    IN_CLASS,
    IN_METHOD,
    IN_PARAMS
   );
   commit;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PROC_INSERT_CTI_AGENT_SESSION` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `PROC_INSERT_CTI_AGENT_SESSION`(

    IN_AGENT_ID VARCHAR(255),

         IN_AGENT_SESSION_ID VARCHAR(255),

         IN_AGENT_NAME VARCHAR(255),

         IN_ORG_ID VARCHAR(255),

         IN_AGENT_EXT VARCHAR(255),

         IN_AGENT_CONTACT VARCHAR(255),

         IN_WORK_ID VARCHAR(255),

         IN_IS_LEADER INT,

         IN_LOGIN_TIMESTAMP VARCHAR(255)

 )
BEGIN

     DECLARE t_error INTEGER DEFAULT 0;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET t_error=1;

         START TRANSACTION;

             INSERT INTO cti_agent_session (

         AGENT_ID,

         AGENT_SESSION_ID,

         AGENT_NAME,

         ORG_ID,

         AGENT_EXT,

         AGENT_CONTACT,

         WORK_ID,

         IS_LEADER,

         LOGIN_TIMESTAMP

     )

     VALUES(

         IN_AGENT_ID,

         IN_AGENT_SESSION_ID,

         IN_AGENT_NAME,

         IN_ORG_ID,

         IN_AGENT_EXT,

         IN_AGENT_CONTACT,

         IN_WORK_ID,

         IN_IS_LEADER,

         IN_LOGIN_TIMESTAMP

     );

         IF t_error = 1 THEN

             ROLLBACK;

         ELSE

             COMMIT;

         END IF;



     END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PROC_INSERT_CTI_AGENT_STATE` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `PROC_INSERT_CTI_AGENT_STATE`(
   IN_ENTRY_TIMESTAMP VARCHAR(255),
   IN_AGENT_ID VARCHAR(255),
   IN_AGENT_SESSION_ID VARCHAR(255),
   IN_NEW_STATE_NAME VARCHAR(255),
   IN_OLD_STATE_NAME VARCHAR(255),
   IN_CHANNEL_UUID VARCHAR(255),
   IN_OTHER_LEG_UUID VARCHAR(255),
   IN_CALL_UUID VARCHAR(255),
   IN_SUB_ID INT,
   IN_PRE_REC_ID INT,
   IN_OUT_ID INT
)
BEGIN
      START TRANSACTION;
  INSERT INTO cti_agent_state(ENTRY_TIMESTAMP,
                            EXIT_TIMESTAMP,
                            DURATION,
                            AGENT_ID,
                            AGENT_SESSION_ID,
                            NEW_STATE_NAME,
                            OLD_STATE_NAME,
                            CHANNEL_UUID,
                            OTHER_LEG_UUID,
                            CALL_UUID,
                            SUB_ID,
                            PRE_REC_ID)
  VALUES(IN_ENTRY_TIMESTAMP,
         IN_ENTRY_TIMESTAMP,
          0,
          IN_AGENT_ID,
    IN_AGENT_SESSION_ID,
          IN_NEW_STATE_NAME,
          IN_OLD_STATE_NAME,
          IN_CHANNEL_UUID,
          IN_OTHER_LEG_UUID,
          IN_CALL_UUID,
          IN_SUB_ID,
          IN_PRE_REC_ID);
SELECT last_insert_id();
commit;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PROC_INSERT_CTI_FAX_FILES` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `PROC_INSERT_CTI_FAX_FILES`(

     IN_EVENT_TIMESTAMP VARCHAR(255),

    IN_CHANNEL_NAME VARCHAR(255),

    IN_CHANNEL_UUID VARCHAR(255),

    IN_CALL_UUID VARCHAR(255),

    IN_CTI_CALL_UUID VARCHAR(255),

    IN_CALLER_NUMBER VARCHAR(255),

    IN_CALLEE_NUMBER VARCHAR(255),

    IN_CTI_CALL_DIRECTION VARCHAR(255),

    IN_AGENT_ID VARCHAR(255),

    IN_AGENT_SESSION_ID VARCHAR(255),

    IN_CC_QUEUE VARCHAR(255),

    IN_FAX_FILE_NAME VARCHAR(512),

    IN_FAX_SUCCESS INT,

    IN_FAX_RESULT_CODE INT,

    IN_FAX_RESULT_TEXT VARCHAR(512),

    IN_FAX_DOCUMENT_TRANSFERRED_PAGES INT,

    IN_FAX_DOCUMENT_TOTAL_PAGES INT,

    IN_FAX_IMAGE_RESOLUTION VARCHAR(255),

    IN_FAX_IMAGE_SIZE VARCHAR(255),

    IN_FAX_TRANSFER_RATE VARCHAR(255),

    IN_FAX_DIRECTION VARCHAR(255)

)
BEGIN
      START TRANSACTION;

   INSERT INTO cti_fax_files

       (EVENT_TIMESTAMP

     ,CHANNEL_NAME

     ,CHANNEL_UUID

     ,CALL_UUID

     ,CTI_CALL_UUID

     ,CALLER_NUMBER

     ,CALLEE_NUMBER

     ,CTI_CALL_DIRECTION

     ,AGENT_ID

     ,AGENT_SESSION_ID

     ,CC_QUEUE

     ,FAX_FILE_NAME

     ,FAX_SUCCESS

     ,FAX_RESULT_CODE

     ,FAX_RESULT_TEXT

     ,FAX_DOCUMENT_TRANSFERRED_PAGES

     ,FAX_DOCUMENT_TOTAL_PAGES

     ,FAX_IMAGE_RESOLUTION

     ,FAX_IMAGE_SIZE

     ,FAX_TRANSFER_RATE

     ,FAX_DIRECTION)

    VALUES(

        IN_EVENT_TIMESTAMP,

     IN_CHANNEL_NAME,

     IN_CHANNEL_UUID,

     IN_CALL_UUID,

     IN_CTI_CALL_UUID,

     IN_CALLER_NUMBER,

     IN_CALLEE_NUMBER,

     IN_CTI_CALL_DIRECTION,

     IN_AGENT_ID,

     IN_AGENT_SESSION_ID,

     IN_CC_QUEUE,

     IN_FAX_FILE_NAME,

     IN_FAX_SUCCESS,

     IN_FAX_RESULT_CODE,

     IN_FAX_RESULT_TEXT,

     IN_FAX_DOCUMENT_TRANSFERRED_PAGES,

     IN_FAX_DOCUMENT_TOTAL_PAGES,

     IN_FAX_IMAGE_RESOLUTION,

     IN_FAX_IMAGE_SIZE,

     IN_FAX_TRANSFER_RATE,

     IN_FAX_DIRECTION);
     commit;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PROC_INSERT_CTI_RECORD_FILES` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `PROC_INSERT_CTI_RECORD_FILES`(

 IN_CHANNEL_UUID VARCHAR(255),

         IN_CTI_CALL_DIRECTION VARCHAR(255),

         IN_CALL_UUID VARCHAR(255),

         IN_CTI_CALL_UUID VARCHAR(255),

         IN_CALLER_NUMBER VARCHAR(255),

         IN_CALLEE_NUMBER VARCHAR(255),

       IN_VM_NUMBER VARCHAR(255),

         IN_RECORD_STEREO NUMERIC(1,0),

         IN_READ_CODEC VARCHAR(155),

         IN_READ_RATE INT,

         IN_WRITE_CODEC VARCHAR(155),

         IN_WRITE_RATE INT,

         IN_RECORD_FILE_NAME VARCHAR(512),

         IN_START_TIME VARCHAR(255),

         IN_STOP_TIME VARCHAR(255),

         IN_CC_QUEUE VARCHAR(255),

         IN_AGENT_ID VARCHAR(255),

         IN_AGENT_SESSION_ID VARCHAR(255),

         IN_CTI_RECORD_TYPE VARCHAR(255),

       IN_ORG_ID VARCHAR(255),

       IN_URL_PREFIX VARCHAR(255)

)
BEGIN
      START TRANSACTION;
   INSERT INTO cti_record_files

       (CHANNEL_UUID

                    ,CTI_CALL_DIRECTION

                    ,CALL_UUID

                    ,CTI_CALL_UUID

                    ,CALLER_NUMBER

                    ,CALLEE_NUMBER

     ,VM_NUMBER

                    ,RECORD_STEREO

                    ,READ_CODEC

                    ,READ_RATE

                    ,WRITE_CODEC

                    ,WRITE_RATE

                    ,RECORD_FILE_NAME

                    ,START_TIME

                    ,STOP_TIME

                    ,CC_QUEUE

                    ,AGENT_ID

                    ,AGENT_SESSION_ID

                    ,CTI_RECORD_TYPE

     ,ORG_ID

     ,URL_PREFIX)

    VALUES(

        IN_CHANNEL_UUID,

     IN_CTI_CALL_DIRECTION,

     IN_CALL_UUID,

     IN_CTI_CALL_UUID,

     IN_CALLER_NUMBER,

     IN_CALLEE_NUMBER,

     IN_VM_NUMBER,

     IN_RECORD_STEREO,

     IN_READ_CODEC,

     IN_READ_RATE,

     IN_WRITE_CODEC,

     IN_WRITE_RATE,

     IN_RECORD_FILE_NAME,

     IN_START_TIME,

     IN_STOP_TIME,

     IN_CC_QUEUE,

     IN_AGENT_ID,

     IN_AGENT_SESSION_ID,

     IN_CTI_RECORD_TYPE,

     IN_ORG_ID,

     IN_URL_PREFIX);
     commit;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PROC_UPDATE_CTI_AGENT_SESSION` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `PROC_UPDATE_CTI_AGENT_SESSION`(

         IN_LOGOUT_TIMESTAMP VARCHAR(255),

         IN_LOGOUT_STATE VARCHAR(255),

         IN_AGENT_SESSION_ID VARCHAR(255),

         IN_AGENT_ID VARCHAR(255)

 )
BEGIN

     DECLARE t_error INTEGER DEFAULT 0;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET t_error=1;

         START TRANSACTION;

            SET SQL_SAFE_UPDATES = 0;

   UPDATE cti_agent_session SET LOGOUT_TIMESTAMP=IN_LOGOUT_TIMESTAMP,LOGOUT_STATE=IN_LOGOUT_STATE

            WHERE AGENT_SESSION_ID=IN_AGENT_SESSION_ID;

   SET SQL_SAFE_UPDATES = 1;

         IF t_error = 1 THEN

             ROLLBACK;

         ELSE

             COMMIT;

         END IF;

     END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_agent_action` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_agent_action`( 
                org_id varchar(40),
                agent_id varchar(40),
                work_id varchar(40),
                agent_name varchar(40),
                agent_ext varchar(40),
                start_time varchar(40),
                end_time varchar(40),
                zh_cn varchar(40)
       
)
begin

  declare sql1 nvarchar(2500);
    set @org_id=org_id;
    set @agent_id=agent_id;
    set @work_id=work_id;
    set @agent_name=agent_name;
    set @agent_ext=agent_ext;
    set @start_time=start_time;
    set @end_time=end_time;
    set @zh_cn=zh_cn;
   
    set sql1=concat('select d.org_id,d.agent_id,c.work_id,c.agent_name,d.agent_ext,c.event_timestamp,c.method,c.zh_cn,c.call_uuid'
                ,' from v_agent_action as c,v_report_cti_agent_session as d '
        ,' where c.agent_session_id=d.agent_session_id ');




          if @org_id is not null and @org_id<>'' then
            set sql1=concat(sql1,' and c.org_id=@org_id ');
            end if;
            
            if @agent_id is not null and @agent_id<>'' then 
            set sql1=concat(sql1,' and c.agent_id=@agent_id ');
            end if;
            
            if @work_id is not null and @work_id<>'' then
            set sql1=concat(sql1,' and c.work_id=@work_id ');
            end if;
            
            if @agent_name is not null and  @agent_name<>'' then
            set sql1=concat(sql1,' and c.agent_name=@agent_name ');    
            end if;
            
            if @agent_ext is not null and @agent_ext<>'' then
            set sql1=concat(sql1,' and c.agent_ext=@agent_ext ');    
            end if;
            
            if @start_time is not null and @start_time<>'' then
        set sql1=concat(sql1,' and date_format(c.event_timestamp,''%Y-%m-%d'')>=@start_time');
            end if; 
  
            if @end_time is not null and @end_time<>'' then
        set sql1=concat(sql1,' and date_format(c.event_timestamp,''%Y-%m-%d'')<=@end_time');
            end if; 
     
            if @zh_cn is not null and @zh_cn<>'' then
            set sql1=concat(sql1,' and c.zh_cn=@zh_cn ');
            end if;
            
            set sql1=concat(sql1,' order by c.event_timestamp desc');   

    

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;
    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_agent_inbound` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_agent_inbound`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                agent_id varchar(40),
                agent_name varchar(40)
             
      
)
begin
  declare sql1 nvarchar(5000);
  declare starthour varchar(255);
  declare endhour varchar(255);
    set starthour='';
    set @starthour=starthour;
    set endhour='';
    set @endhour=endhour;
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @agent_id=agent_id;
    set @agent_name=agent_name;
   
        if @times='小时' or @times='半小时' then
          set @starthour=date_format(now(),'%Y-%m-%d ');
        end if;     
        if @times='小时' or @times='半小时' then
          set @endhour=date_format(date_add(now(),interval 1 day),'%Y-%m-%d '); 
               end if;     
                   
        set sql1=concat('select ' );
        if @times='小时' then
              set sql1=concat(sql1,'substring(a.tjdate1,1,13) as calldate');
       elseif @times='半小时' then
             set sql1=concat(sql1,'substring(a.tjdate1,1,16) as calldate');
       else
                   set sql1=concat(sql1,'a.tjdate1');
       end if;
      set sql1=concat(sql1,','
      ,'case   '
        ,' when (a.num1 is null or a.num1='''') then 0 '
      ,' else a.num1 '
            ,' end  num1, '
        , ' case   '
        ,' when (b.num2 is null or b.num2='''') then 0 '
        ,' else b.num2 '
            ,' end  num2 '
        ,' from  ');  
      
            set sql1=concat(sql1,'( select d.tjdate1,cdr.num1  '
          ,' from ( select distinct ');
          if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
        
   if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;  
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
        set sql1=concat(sql1,' as tjdate1 from report_date as dat1  where 1=1 ');
        
        
          if @starthour is not null and @starthour<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starthour');
     elseif @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
          
          if @endhour is not null and @endhour<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endhour');
      elseif @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
          
      set sql1=concat(sql1,' ) as d left join (' );
      set sql1=concat(sql1,'select d1,num1 from  ( select' );     
           
           
    if @times='半小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d '')');
         end if;
        
        
         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(creat_time_30m) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(creat_time_30m,''%Y''),''-0'',cast(week(creat_time_30m) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(creat_time_30m,''%Y''),''-'',cast(week(creat_time_30m) as SIGNED)+1)  end ');
         end if;
         
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(creat_time_30m,''%Y''),''-'',quarter(creat_time_30m))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y'')');
         end if;
         
         
    set sql1=concat(sql1,' as d1,count(id) as num1 from report_agent_services as c '
        ,'  where  c.cti_cc_direction is not null and c.cti_cc_direction=''inbound''' );
        
        
          if @starthour is not null and @starthour<>'' then
      set sql1=concat(sql1,' and  date_format(start_time,''%Y-%m-%d'')>=@starthour');
      elseif @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and date_format(start_time,''%Y-%m-%d'')>=@starttime');
      end if; 
          
          if @endhour is not null and @endhour<>'' then
      set sql1=concat(sql1,' and date_format(start_time,''%Y-%m-%d'')<=@endhour');
      elseif @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(start_time,''%Y-%m-%d'')<=@endtime');
      end if; 
            
 
      if @agent_id is not null and @agent_id<>'' then
      set sql1=concat(sql1,' and c.agent_id=@agent_id');
      end if;

   if @agent_name is not null and @agent_name<>'' then
     set sql1=concat(sql1,' and c.agent_name=@agent_name');
     end if;
 
            
        set sql1=concat(sql1,' group by ');
         
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d '')');
         end if;
        
        
         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(creat_time_30m) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(creat_time_30m,''%Y''),''-0'',cast(week(creat_time_30m) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(creat_time_30m,''%Y''),''-'',cast(week(creat_time_30m) as SIGNED)+1)  end ');
         end if;
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(creat_time_30m,''%Y''),''-'',quarter(creat_time_30m))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y'')');
         end if;
         
         set sql1=concat(sql1,') as cdr1) as cdr on tjdate1=cdr.d1) as a left join (select' );
         
          
          
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d '')');
         end if;
        
        
         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(start_time) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(start_time,''%Y''),''-0'',cast(week(start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(start_time,''%Y''),''-'',cast(week(start_time) as SIGNED)+1)  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(start_time,''%Y''),''-'',quarter(start_time))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(start_time,''%Y'')');
         end if;
         
         
         
          set sql1=concat(sql1,' as tjdate1,count(id) as num2 '
    ,' from report_agent_services as c '
  ,' where  c.cti_cc_direction is not null '
  ,' and c.cti_cc_direction=''inbound'' '
  ,' and services_type <>''未接'' ' );                          
    
   
  
         if @starthour is not null and @starthour<>'' then
      set sql1=concat(sql1,' and  date_format(start_time,''%Y-%m-%d'')>=@starthour');
      elseif @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and date_format(start_time,''%Y-%m-%d'')>=@starttime');
      end if; 
          
          if @endhour is not null and @endhour<>'' then
      set sql1=concat(sql1,' and date_format(start_time,''%Y-%m-%d'')<=@endhour');
      elseif @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(start_time,''%Y-%m-%d'')<=@endtime');
      end if; 
            
    
    
 
      if @agent_id is not null and @agent_id<>'' then
      set sql1=concat(sql1,' and c.agent_id=@agent_id');
      end if;

   if @agent_name is not null and @agent_name<>'' then
     set sql1=concat(sql1,' and c.agent_name=@agent_name');
     end if;
 
        
        
        
          set sql1=concat(sql1, ' group by  ');
         
         
         
        
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d '')');
         end if;
        
        
         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(start_time) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(start_time,''%Y''),''-0'',cast(week(start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(start_time,''%Y''),''-'',cast(week(start_time) as SIGNED)+1)  end ');
         end if;
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(start_time,''%Y''),''-'',quarter(start_time))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(start_time,''%Y'')');
         end if;
         
    set sql1=concat(sql1,') as b on a.tjdate1=b.tjdate1  order by a.tjdate1 asc');
         


    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_agent_inbound_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_agent_inbound_back`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                agent_id varchar(40),
                agent_name varchar(40)
             
      
)
begin
  declare sql1 nvarchar(5000);
  declare starthour varchar(255);
  declare endhour varchar(255);
    set starthour='';
    set @starthour=starthour;
    set endhour='';
    set @endhour=endhour;
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @agent_id=agent_id;
    set @agent_name=agent_name;
   
        if @times='小时' or @times='半小时' then
          set @starthour=date_format(now(),'%Y-%m-%d ');
        end if;     
        if @times='小时' or @times='半小时' then
          set @endhour=date_format(date_add(now(),interval 1 day),'%Y-%m-%d '); 
               end if;     
                   
        set sql1=concat('select ' );
        if @times='小时' then
              set sql1=concat(sql1,'substring(a.tjdate1,1,13) as calldate');
       elseif @times='半小时' then
             set sql1=concat(sql1,'substring(a.tjdate1,1,16) as calldate');
       else
                   set sql1=concat(sql1,'a.tjdate1');
       end if;
      set sql1=concat(sql1,','
      ,'case   '
        ,' when (a.num1 is null or a.num1='''') then 0 '
      ,' else a.num1 '
            ,' end  num1, '
        , ' case   '
        ,' when (b.num2 is null or b.num2='''') then 0 '
        ,' else b.num2 '
            ,' end  num2 '
        ,' from  ');  
      
            set sql1=concat(sql1,'( select d.tjdate1,cdr.num1  '
          ,' from ( select distinct ');
          if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
        
   if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;  
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
        set sql1=concat(sql1,' as tjdate1 from report_date as dat1  where 1=1 ');
        
        
          if @starthour is not null and @starthour<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starthour');
     elseif @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
          
          if @endhour is not null and @endhour<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endhour');
      elseif @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
          
      set sql1=concat(sql1,' ) as d left join (' );
      set sql1=concat(sql1,'select d1,num1 from  ( select' );     
           
           
    if @times='半小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d '')');
         end if;
        
        
         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(creat_time_30m) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(creat_time_30m,''%Y''),''-0'',cast(week(creat_time_30m) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(creat_time_30m,''%Y''),''-'',cast(week(creat_time_30m) as SIGNED)+1)  end ');
         end if;
         
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(creat_time_30m,''%Y''),''-'',quarter(creat_time_30m))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y'')');
         end if;
         
         
    set sql1=concat(sql1,' as d1,count(id) as num1 from report_agent_services as c '
        ,'  where  c.cti_cc_direction is not null and c.cti_cc_direction=''inbound''' );
        
        
          if @starthour is not null and @starthour<>'' then
      set sql1=concat(sql1,' and  date_format(start_time,''%Y-%m-%d'')>=@starthour');
      elseif @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and date_format(start_time,''%Y-%m-%d'')>=@starttime');
      end if; 
          
          if @endhour is not null and @endhour<>'' then
      set sql1=concat(sql1,' and date_format(start_time,''%Y-%m-%d'')<=@endhour');
      elseif @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(start_time,''%Y-%m-%d'')<=@endtime');
      end if; 
            
 
      if @agent_id is not null and @agent_id<>'' then
      set sql1=concat(sql1,' and c.agent_id=@agent_id');
      end if;

   if @agent_name is not null and @agent_name<>'' then
     set sql1=concat(sql1,' and c.agent_name=@agent_name');
     end if;
 
            
        set sql1=concat(sql1,' group by ');
         
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d '')');
         end if;
        
        
         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(creat_time_30m) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(creat_time_30m,''%Y''),''-0'',cast(week(creat_time_30m) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(creat_time_30m,''%Y''),''-'',cast(week(creat_time_30m) as SIGNED)+1)  end ');
         end if;
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(creat_time_30m,''%Y''),''-'',quarter(creat_time_30m))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y'')');
         end if;
         
         set sql1=concat(sql1,') as cdr1) as cdr on tjdate1=cdr.d1) as a left join (select' );
         
          
          
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d '')');
         end if;
        
        
         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(start_time) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(start_time,''%Y''),''-0'',cast(week(start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(start_time,''%Y''),''-'',cast(week(start_time) as SIGNED)+1)  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(start_time,''%Y''),''-'',quarter(start_time))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(start_time,''%Y'')');
         end if;
         
         
         
          set sql1=concat(sql1,' as tjdate1,count(id) as num2 '
    ,' from report_agent_services as c '
  ,' where  c.cti_cc_direction is not null '
  ,' and c.cti_cc_direction<>''inner'' '
  ,' and c.cti_cc_direction<>''outbound'' '
  ,' and c.toagent_time is not null ' );                          
    
   
  
         if @starthour is not null and @starthour<>'' then
      set sql1=concat(sql1,' and  date_format(start_time,''%Y-%m-%d'')>=@starthour');
      elseif @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and date_format(start_time,''%Y-%m-%d'')>=@starttime');
      end if; 
          
          if @endhour is not null and @endhour<>'' then
      set sql1=concat(sql1,' and date_format(start_time,''%Y-%m-%d'')<=@endhour');
      elseif @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(start_time,''%Y-%m-%d'')<=@endtime');
      end if; 
            
    
    
 
      if @agent_id is not null and @agent_id<>'' then
      set sql1=concat(sql1,' and c.agent_id=@agent_id');
      end if;

   if @agent_name is not null and @agent_name<>'' then
     set sql1=concat(sql1,' and c.agent_name=@agent_name');
     end if;
 
        
        
        
          set sql1=concat(sql1, ' group by  ');
         
         
         
        
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d '')');
         end if;
        
        
         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(start_time) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(start_time,''%Y''),''-0'',cast(week(start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(start_time,''%Y''),''-'',cast(week(start_time) as SIGNED)+1)  end ');
         end if;
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(start_time,''%Y''),''-'',quarter(start_time))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(start_time,''%Y'')');
         end if;
         
    set sql1=concat(sql1,') as b on a.tjdate1=b.tjdate1  order by a.tjdate1 asc');
         

        

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_agent_jx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_agent_jx`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40),
                agent_org_id varchar(40),
                agent_work_id varchar(40),
                agent_org_name varchar(40)
      
)
begin
  declare sql1 nvarchar(5000);
    declare starthour nvarchar(50);
    declare endhour    nvarchar(50);
    set @endhour=endhour;
    set @starthour=starthour;
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
    set @agent_org_id=agent_org_id;
    set @agent_work_id=agent_work_id;
  set @agent_org_name=agent_org_name;
  
         
         
         
         
        if @times='小时' or @times='半小时' then
          set @starthour=date_format(now(),'%Y-%m-%d ');
        end if;     
        if @times='小时' or @times='半小时' then
          set @endhour=date_format(date_add(now(),interval 1 day),'%Y-%m-%d '); 
               end if;     
                   
        set sql1=concat('select ' );
        if @times='小时' then
              set sql1=concat(sql1,'substring(calldate,1,13) as calldate');
       elseif @times='半小时' then
             set sql1=concat(sql1,'substring(calldate,1,16) as calldate');
       else
                   set sql1=concat(sql1,'calldate');
       end if;
           set sql1=concat(sql1,','
    ,'agent_org_id,agent_org_name,agent_name,agent_work_id,toperson,topersonsucceed,login,'
    ,'busy,hold,postcall,innercall,bell,to20,'
    ,'report_number_to_time(tosuccedtime) as tosuccedtime,report_number_to_time(logintime) as logintime,'
    ,'report_number_to_time(busytime) as busytime,report_number_to_time(holdtime) as holdtime,'
    ,'report_number_to_time(postcalltime) as postcalltime,report_number_to_time(innertime) as innertime,'
    ,'report_number_to_time(belltime) as belltime,report_number_to_time(avgtime) as avgtime,'
    ,'report_number_to_time(avglogintime) as avglogintime,report_number_to_time(avgbusytime) as avgbusytime,'
    ,'report_number_to_time(avgholetime) as avgholetime,report_number_to_time(avgpostcalltime) as avgpostcalltime,'
    ,'report_number_to_time(avginnertime) as avginnertime,report_number_to_time(avgbelltime) as avgbelltime,'
    ,'report_number_to_time(avgworktime) as avgworktime,persuccess,perfree,perwork,perhold,peraway,perto20,outcall,'
    ,'report_number_to_time(outcalltime) as outcalltime,report_number_to_time(avgoutcalltime) as avgoutcalltime'
    ,'  from ');        
  
       set sql1=concat(sql1,'(select ');       
    
          if @times='半小时' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m-%d '')');
         end if;
        
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(calldate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(calldate,''%Y''),''-0'',cast(week(calldate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(calldate,''%Y''),''-'',cast(week(calldate) as SIGNED)+1)  end ');
         end if;    
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(calldate,''%Y''),''-'',quarter(calldate))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(calldate,''%Y'')');
         end if;
        
        set sql1=concat(sql1,' as calldate,agent_org_id,agent_org_name,agent_name,agent_work_id,sum(toperson) as toperson,sum(topersonsucceed) as topersonsucceed,'
  ,'sum(login) as login,sum(busy) as busy,sum(hold) as hold,sum(postcall) as postcall,sum(innercall) as innercall,sum(bell) as bell,sum(to20) as to20,'
  ,'sum(tosuccedtime) as tosuccedtime,sum(logintime) as logintime,sum(busytime) as busytime,sum(holdtime) as holdtime,sum(postcalltime) as postcalltime,'
  ,'sum(innertime) as innertime,sum(belltime) as belltime,'
  ,' case topersonsucceed when (sum(topersonsucceed)=0) then 0 else sum(tosuccedtime)/sum(topersonsucceed) end as avgtime,'
  ,' case login when (sum(login)=0) then 0 else sum(logintime)/sum(login) end as avglogintime,'
  ,' case busy when (sum(busy)=0) then 0 else sum(busytime)/sum(busy) end as avgbusytime,'
  ,' case hold when (sum(hold)=0) then 0 else sum(holdtime)/sum(hold) end as avgholetime,'
  ,' case postcall when (sum(postcall)=0) then 0 else sum(postcalltime)/sum(postcall) end as avgpostcalltime,'
  ,' case innercall when (sum(innercall)=0) then 0 else sum(innertime)/sum(innercall) end as avginnertime,'
  ,' case bell when (sum(bell)=0) then 0 else sum(belltime)/sum(bell) end as avgbelltime,'
  ,' case topersonsucceed when (sum(topersonsucceed)+sum(postcall)=0) then 0 else (sum(tosuccedtime)+sum(postcalltime))/(sum(topersonsucceed)+sum(postcall)) end as avgworktime,'                     
    ,' case toperson when sum(toperson)=0 then 0 else format(sum(topersonsucceed)*100/sum(toperson),2) end persuccess,'
  ,' case logintime when sum(logintime)=0 then 0 else format((sum(logintime)-sum(tosuccedtime)-sum(busytime)-sum(postcalltime))*100/sum(logintime),2) end perfree,'
  ,' case logintime when sum(logintime)=0 then 0 else format((sum(tosuccedtime)+sum(postcalltime))*100/sum(logintime),2) end perwork,'
  ,' case tosuccedtime when sum(tosuccedtime)=0 then 0 else format(sum(holdtime)*100/sum(tosuccedtime),2) end perhold,'
  ,' case logintime when sum(logintime)=0 then 0 else format(sum(busytime)*100/sum(logintime),2) end peraway,'
  ,' case toperson when sum(toperson)=0 then 0 else format(sum(to20)*100/sum(toperson),2) end perto20,'
  ,' sum(outcall) as outcall,sum(outcalltime) as outcalltime,'
  ,' case outcall when (sum(outcall)=0) then 0 else sum(outcalltime)/sum(outcall) end as avgoutcalltime '
    ,'    from report_agent as c where  agent_org_id is not null '); 
        
  if @agent_org_id is not null and @agent_org_id<>'' then
    set sql1=concat(sql1,' and agent_org_id=@agent_org_id ');
    end if;
    
    if @agent_work_id is not null and @agent_work_id<>'' then
    set sql1=concat(sql1,' and agent_work_id=@agent_work_id ');  
    end if;
    
          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(calldate,''%Y-%m-%d'')>=@starttime');
      end if; 

      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(calldate,''%Y-%m-%d'')<=@endtime');
      end if; 
           
        set sql1=concat(sql1,' group by ');
        
      
      
      
      
      
      
        if @times='半小时' then
     set sql1=concat(sql1,' date_format(calldate,''Y%-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m-%d '')');
         end if;
         
     if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(calldate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(calldate,''%Y''),''-0'',cast(week(calldate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(calldate,''%Y''),''-'',cast(week(calldate) as SIGNED)+1)  end ');
         end if;  
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,' concat(date_format(calldate,''%Y''),''-'',quarter(calldate))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(calldate,''%Y'')');
         end if;
       
       set sql1=concat(sql1,',agent_org_id,agent_name,agent_work_id');
  
       set sql1=concat(sql1,'  ) as cdr where 1=1 ');
      
      
       if @start_h+@start_m+@start_s >0 then
    set sql1=concat(sql1,' and tosuccedtime>=ltrim(@start_h*3600+@start_m*60+@start_s)');
        end if; 
        if @stop_h+@stop_m+@stop_s >0 then
    set sql1=concat(sql1,' and tosuccedtime<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
        end if; 
      
  set sql1=concat(sql1,'order by calldate');
      


    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_CTI_AGENT_JX1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_CTI_AGENT_JX1`(
                TIMES varchar(40),
                STARTTIME varchar(40),
                ENDTIME varchar(40),
                START_H varchar(40),
                START_M varchar(40),
                START_S varchar(40),
                STOP_H varchar(40),
                STOP_M varchar(40),
                STOP_S varchar(40),
                AGENT_ORG_ID varchar(40),
                AGENT_WORK_ID varchar(40)
      
)
BEGIN
  DECLARE sql1 nvarchar(5000);
    set @TIMES=TIMES;
    set @STARTTIME=STARTTIME;
    set @ENDTIME=ENDTIME;
    set @START_H=START_H;
    set @START_M=START_M;
    set @START_S=START_S;
    set @STOP_H=STOP_H;
    set @STOP_M=STOP_M;
    set @STOP_S=STOP_S;
    set @AGENT_ORG_ID=AGENT_ORG_ID;
    set @AGENT_WORK_ID=AGENT_WORK_ID;
 
         
         
         
         
        IF @TIMES='小时' or @TIMES='半小时' then
          SET @starthour=date_format(now(),'%Y-%m-%d ');
        end if;     
        IF @TIMES='小时' or @TIMES='半小时' then
          SET @endhour=date_format(DATE_ADD(now(),INTERVAL 1 DAY),'%Y-%m-%d '); 
               end if;     
                   
        set sql1=concat('SELECT ' );
        if @TIMES='小时' then
              set sql1=concat(sql1,'substring(CALLDATE,11,13) as CALLDATE');
       elseif @TIMES='半小时' then
             set sql1=concat(sql1,'substring(CALLDATE,11,16) as CALLDATE');
       else
                   set sql1=concat(sql1,'CALLDATE');
       end if;
           set sql1=concat(sql1,','
    ,'AGENT_ORG_ID,AGENT_NAME,AGENT_WORK_ID,TOPERSON,TOPERSONSUCCEED,LOGIN,'
    ,'BUSY,HOLD,POSTCALL,INNERCALL,BELL,TO20,'
    ,'sec_to_time(TOSUCCEDTIME) as TOSUCCEDTIME,sec_to_time(LOGINTIME) as LOGINTIME,'
    ,'sec_to_time(BUSYTIME) as BUSYTIME,sec_to_time(HOLDTIME) as HOLDTIME,'
    ,'sec_to_time(POSTCALLTIME) as POSTCALLTIME,sec_to_time(INNERTIME) as INNERTIME,'
    ,'sec_to_time(BELLTIME) as BELLTIME,sec_to_time(AVGTIME) as AVGTIME,'
    ,'sec_to_time(AVGLOGINTIME) as AVGLOGINTIME,sec_to_time(AVGBUSYTIME) as AVGBUSYTIME,'
    ,'sec_to_time(AVGHOLETIME) as AVGHOLETIME,sec_to_time(AVGPOSTCALLTIME) as AVGPOSTCALLTIME,'
    ,'sec_to_time(AVGINNERTIME) as AVGINNERTIME,sec_to_time(AVGBELLTIME) as AVGBELLTIME,'
    ,'sec_to_time(AVGWORKTIME) as AVGWORKTIME,PERSUCCESS,PERFREE,PERWORK,PERHOLD,PERAWAY,PERTO20,OUTCALL,'
    ,'sec_to_time(OUTCALLTIME) as OUTCALLTIME,sec_to_time(AVGOUTCALLTIME) as AVGOUTCALLTIME'
    ,'  FROM ');        
  
       set sql1=concat(sql1,'(SELECT ');       
    
          IF @TIMES='半小时' then
     SET sql1=concat(sql1,' date_format(CALLDATE,''%Y-%m-%d %H:%i'')');
         end if;
         
     IF @TIMES='小时' then
     SET sql1=concat(sql1,' date_format(CALLDATE,''%Y-%m-%d %H'')');
         end if;
         
     IF @TIMES='天' then
     SET sql1=concat(sql1,' date_format(CALLDATE,''%Y-%m-%d '')');
         end if;
        
     IF @TIMES='周' then
       SET sql1=concat(sql1,' case  CALLDATE when( WEEK(CALLDATE)<10) '
        ,' then '
    ,'  concat(date_format(CALLDATE,''%Y''),''年第0'',WEEK(CALLDATE),''周'')   '
        ,' else '
        ,'  concat(date_format(CALLDATE,''%Y''),''年第'',WEEK(CALLDATE),''周'')  end ');
         end if;
         
         
     IF @TIMES='月' then
     SET sql1=concat(sql1,' date_format(CALLDATE,''%Y-%m '')');
         end if;
        
     IF @TIMES='季度' then
         SET sql1=concat(sql1,'  concat(date_format(CALLDATE,''%Y''),''年'',QUARTER(CALLDATE),''季度'')');      
         end if;
         
     IF @TIMES='年' then
     SET sql1=concat(sql1,' date_format(CALLDATE,''%Y'')');
         end if;
        
        SET sql1=concat(sql1,' as CALLDATE,AGENT_ORG_ID,AGENT_NAME,AGENT_WORK_ID,sum(TOPERSON) as TOPERSON,sum(TOPERSONSUCCEED) as TOPERSONSUCCEED,'
  ,'sum(LOGIN) as LOGIN,sum(BUSY) as BUSY,sum(HOLD) as HOLD,sum(POSTCALL) as POSTCALL,sum(INNERCALL) as INNERCALL,sum(BELL) as BELL,sum(TO20) as TO20,'
  ,'sum(TOSUCCEDTIME) as TOSUCCEDTIME,sum(LOGINTIME) as LOGINTIME,sum(BUSYTIME) as BUSYTIME,sum(HOLDTIME) as HOLDTIME,sum(POSTCALLTIME) as POSTCALLTIME,'
  ,'sum(INNERTIME) as INNERTIME,sum(BELLTIME) as BELLTIME,'
  ,' case TOPERSONSUCCEED when (sum(TOPERSONSUCCEED)=0) then 0 else sum(TOSUCCEDTIME)/sum(TOPERSONSUCCEED) end as AVGTIME,'
  ,' case LOGIN when (sum(LOGIN)=0) then 0 else sum(LOGINTIME)/sum(LOGIN) end as AVGLOGINTIME,'
  ,' case BUSY when (sum(BUSY)=0) then 0 else sum(BUSYTIME)/sum(BUSY) end as AVGBUSYTIME,'
  ,' case HOLD when (sum(HOLD)=0) then 0 else sum(HOLDTIME)/sum(HOLD) end as AVGHOLETIME,'
  ,' case POSTCALL when (sum(POSTCALL)=0) then 0 else sum(POSTCALLTIME)/sum(POSTCALL) end as AVGPOSTCALLTIME,'
  ,' case INNERCALL when (sum(INNERCALL)=0) then 0 else sum(INNERTIME)/sum(INNERCALL) end as AVGINNERTIME,'
  ,' case BELL when (sum(BELL)=0) then 0 else sum(BELLTIME)/sum(BELL) end as AVGBELLTIME,'
  ,' case TOPERSONSUCCEED when (sum(TOPERSONSUCCEED)+sum(POSTCALL)=0) then 0 else (sum(TOSUCCEDTIME)+sum(POSTCALLTIME))/(sum(TOPERSONSUCCEED)+sum(POSTCALL)) end as AVGWORKTIME,'                     
    ,' CASE TOPERSON WHEN sum(TOPERSON)=0 THEN 0 ELSE FORMAT(sum(TOPERSONSUCCEED)*100/sum(TOPERSON),2) END PERSUCCESS,'
  ,' CASE LOGINTIME WHEN sum(LOGINTIME)=0 THEN 0 ELSE FORMAT((sum(LOGINTIME)-sum(TOSUCCEDTIME)-sum(BUSYTIME)-sum(POSTCALLTIME))*100/sum(LOGINTIME),2) END PERFREE,'
  ,' CASE LOGINTIME WHEN sum(LOGINTIME)=0 THEN 0 ELSE FORMAT((sum(TOSUCCEDTIME)+sum(POSTCALLTIME))*100/sum(LOGINTIME),2) END PERWORK,'
  ,' CASE TOSUCCEDTIME WHEN sum(TOSUCCEDTIME)=0 THEN 0 ELSE FORMAT(sum(HOLDTIME)*100/sum(TOSUCCEDTIME),2) END PERHOLD,'
  ,' CASE LOGINTIME WHEN sum(LOGINTIME)=0 THEN 0 ELSE FORMAT(sum(BUSYTIME)*100/sum(LOGINTIME),2) END PERAWAY,'
  ,' CASE TOPERSON WHEN sum(TOPERSON)=0 THEN 0 ELSE FORMAT(sum(TO20)*100/sum(TOPERSON),2) END PERTO20,'
  ,' sum(OUTCALL) as OUTCALL,sum(OUTCALLTIME) as OUTCALLTIME,'
  ,' case OUTCALL when (sum(OUTCALL)=0) then 0 else sum(OUTCALLTIME)/sum(OUTCALL) end as AVGOUTCALLTIME '
    ,'    FROM REPORT_AGENT as c where  1=1 '); 
        
  IF @AGENT_ORG_ID IS NOT NULL AND @AGENT_ORG_ID<>'' then
    SET sql1=concat(sql1,' AND AGENT_ORG_ID=@AGENT_ORG_ID ');
    end if;
    
    IF @AGENT_WORK_ID IS NOT NULL AND @AGENT_WORK_ID<>'' then
    SET sql1=concat(sql1,' AND AGENT_WORK_ID=@AGENT_WORK_ID ');  
    end if;
    
          if @STARTTIME is not null and @STARTTIME<>'' then
      set sql1=CONCAT(sql1,' and  date_format(CALLDATE,''%Y-%m-%d'')>=@STARTTIME');
      end if; 

      if @ENDTIME is not null and @ENDTIME<>'' then
      set sql1=CONCAT(sql1,' and  date_format(CALLDATE,''%Y-%m-%d'')<=@ENDTIME');
      end if; 
           
        SET sql1=concat(sql1,' group by ');
        
      
      
      
      
      
      
        IF @TIMES='半小时' then
     SET sql1=concat(sql1,' date_format(CALLDATE,''%Y-%m-%d %H:%i'')');
         end if;
         
     IF @TIMES='小时' then
     SET sql1=concat(sql1,' date_format(CALLDATE,''%Y-%m-%d %H'')');
         end if;
         
     IF @TIMES='天' then
     SET sql1=concat(sql1,' date_format(CALLDATE,''%Y-%m-%d '')');
         end if;
        
     IF @TIMES='周' then
       SET sql1=concat(sql1,' case  CALLDATE when( WEEK(CALLDATE)<10) '
        ,' then '
    ,'  concat(date_format(CALLDATE,''%Y''),''年第0'',WEEK(CALLDATE),''周'')   '
        ,' else '
        ,'  concat(date_format(CALLDATE,''%Y''),''年第'',WEEK(CALLDATE),''周'')  end ');
         end if;
         
         
     IF @TIMES='月' then
     SET sql1=concat(sql1,' date_format(CALLDATE,''%Y-%m '')');
         end if;
        
     IF @TIMES='季度' then
         SET sql1=concat(sql1,' concat(date_format(CALLDATE,''%Y''),''年'',QUARTER(CALLDATE),''季度'')');      
         end if;
         
     IF @TIMES='年' then
     SET sql1=concat(sql1,' date_format(CALLDATE,''%Y'')');
         end if;
       
       SET sql1=concat(sql1,',AGENT_ORG_ID,AGENT_NAME,AGENT_WORK_ID');
  
       set sql1=concat(sql1,'  ) as cdr where 1=1 ');
      
      
       if @START_H+@START_M+@START_S >0 then
    set sql1=CONCAT(sql1,' and TOSUCCEDTIME>=LTRIM(@START_H*3600+@START_M*60+@START_S)');
        end if; 
        if @STOP_H+@STOP_M+@STOP_S >0 then
    set sql1=CONCAT(sql1,' and TOSUCCEDTIME<=LTRIM(@STOP_H*3600+@STOP_M*60+@STOP_S)');
        end if; 
      
  set sql1=concat(sql1,'order by CALLDATE');
      
  
  
 

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_agent_misscalled` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_agent_misscalled`(
                org_id varchar(40),
                agent_id varchar(40),
                work_id varchar(40),
                agent_name varchar(40),
                agent_ext varchar(40),
                service_type varchar(40),
                cti_direction varchar(40),
                cc_direction varchar(40),
                start_time varchar(40),
                end_time varchar(40),
                answer_time varchar(40),
                cancle_time varchar(40),
                cancle_type varchar(40),
                caller varchar(40),
                callee varchar(40),
                origcaller varchar(1),
                origcallee varchar(40),
                uuid varchar(40),
                d_start_h varchar(40),
                d_start_m varchar(40),
                d_start_s varchar(40),
                d_stop_h varchar(40),
                d_stop_m varchar(40),
                d_stop_s varchar(40),
                a_start_h varchar(40),
                a_start_m varchar(40),
                a_start_s varchar(40),
                a_stop_h varchar(40),
                a_stop_m varchar(40),
                a_stop_s varchar(40),
                agent_session_id varchar(40),
                h_start_h varchar(40),
                h_start_m varchar(40),
                h_start_s varchar(40),
                h_stop_h varchar(40),
                h_stop_m varchar(40),
                h_stop_s varchar(40),
                f_start_h varchar(40),
                f_start_m varchar(40),
                f_start_s varchar(40),
                f_stop_h varchar(40),
                f_stop_m varchar(40),
                f_stop_s varchar(40)
)
begin
  declare sql1 nvarchar(2500);
    set @org_id=@org_id;
    set @agent_id=agent_id;
    set @work_id=work_id;
    set @agent_name=agent_name;
    set @agent_ext=agent_ext;
    set @service_type=service_type;
    set @cti_direction=cti_direction;
    set @cc_direction=cc_direction;
    set @start_time=start_time;
    set @end_time=end_time;
    set @answer_time=answer_time;
               
    set @cancle_time=cancle_time;
    set @cancle_type=cancle_type;
    set @caller =caller;
    set @callee =callee;
    set @origcaller =origcaller;
    set @origcallee =origcallee;
    set @uuid =uuid;
    set @d_start_h =d_start_h;
    set @d_start_m =d_start_m;
    set @d_start_s=d_start_s;
    set @d_stop_h =d_stop_h;
    set @d_stop_m =d_stop_m;
    set @d_stop_s =d_stop_s;
    set @a_start_h =a_start_h; 
    set @a_start_m =a_start_m;
    set @a_start_s =a_start_s;
    set @a_stop_h =a_stop_h;
    set @a_stop_m =a_stop_m;
    set @a_stop_s =a_stop_s;
    set @agent_session_id =agent_session_id;
    set @h_start_h =h_start_h;
    set @h_start_m =h_start_m;
    set @h_start_s =h_start_s;
    set @h_stop_h =h_stop_h;
    set @h_stop_m =h_stop_m;
    set @h_stop_s =h_stop_s;
    set @f_start_h =f_start_h;
    set @f_start_m =f_start_m;
    set @f_start_s =f_start_s;
    set @f_stop_h =f_stop_h;
    set @f_stop_m =f_stop_m;
    set @f_stop_s =f_stop_s;
    set @d_stop_m =d_stop_m;
    set @d_stop_m =d_stop_m;

         set sql1=concat('select distinct c.org_id,c.agent_id,'
            ,'c.agent_session_id,d.work_id,d.agent_name,'
            ,' c.agent_ext,c.services_type,'
        ,'ccd.cti_call_direction_chinese as cti_call_direction, '
            ,'ccd1.cti_call_direction_chinese as cti_cc_direction, '
        ,'bh.cancel_cause_chinese as cancel_cause, '
        ,'c.start_time,c.toagent_time,c.end_time,'
            ,'c.duration,c.wait,c.answer,report_number_to_time(c.duration) as duration1,'
            , 'report_number_to_time(c.wait) as wait1,' 
            , 'report_number_to_time(c.answer) as answer1'
            , ',c.orig_caller_number,c.orig_callee_number,'
            ,'c.caller_number,c.callee_number,c.cti_call_uuid,c.cancel_time,'
            ,'c.post_call_time,c.post_call,c.services,c.total,'  
            ,'report_number_to_time(c.post_call) as post_call1,'
            ,'report_number_to_time(c.services) as services1,'
      ,'report_number_to_time(c.total) as total1 '
      ,'  from report_agent_services as c'
            ,'  left join v_report_cti_agent_session as d on c.agent_session_id=d.agent_session_id'
      ,'  left join report_cti_call_direction ccd on c.cti_call_direction  = ccd.cti_call_direction'
      ,'  left join report_cti_call_direction ccd1 on c.cti_cc_direction = ccd1.cti_call_direction '
      ,'  left join report_cancel_cause bh on c.cancel_cause = bh.cancel_cause' 
      ,'  where   '
      ,'  c.cti_cc_direction is not null '
      ,'   and  c.cti_cc_direction<>''inner'' '
      ,' and services_type=''未接'' ');
        
   
      
      
            if @org_id is not null and @org_id<>'' then
            set sql1=concat(sql1,' and c.org_id=@org_id ');
            end if;
            
           
            if @agent_id is not null and @agent_id<>'' then
            set sql1=concat(sql1,' and c.agent_id=@agent_id ');
            end if;
            
            if @agent_session_id is not null and @agent_session_id<>'' then
            set sql1=concat(sql1,' and c.agent_session_id=@agent_session_id ');
            end if;
            
            if @work_id is not null and @work_id<>'' then
            set sql1=concat(sql1,' and d.work_id=@work_id ');
            end if;
            
            if @agent_name is not null and  @agent_name<>'' then
            set sql1=concat(sql1,' and d.agent_name=@agent_name ');
            end if;
            
            if @agent_ext is not null and @agent_ext<>'' then
            set sql1=concat(sql1,' and c.agent_ext=@agent_ext ');  
            end if;
            
            if @service_type is not null and @service_type<>'' then
            set sql1=concat(sql1,' and c.services_type=@service_type ');
            end if;
            
            if @cti_direction is not null and @cti_direction<>'' then
            set sql1=concat(sql1,' and c.cti_call_direction=@cti_direction ');
            end if;
            
            if @cc_direction is not null and @cc_direction<>'' then
            set sql1=concat(sql1,' and c.cti_cc_direction=@cc_direction ');
            end if;
            
            
              
            if @start_time is not null and @start_time<>'' then
        set sql1=concat(sql1,' and date_format(c.start_time,''%Y-%m-%d'')>=@start_time');
            end if; 
     
     
            if @end_time is not null and @end_time<>'' then
        set sql1=concat(sql1,' and date_format(c.start_time,''%Y-%m-%d'')<=@end_time');
            end if; 
            
            
            if @answer_time is not null and @answer_time<>'' then
            set sql1=concat(sql1,' and date_format(c.toagent_time,''%Y-%m-%d'')>=@answer_time ');
            end if;
            
            if @cancle_time is not null and @cancle_time<>'' then
            set sql1=concat(sql1,' and date_format(c.toagent_time,''%Y-%m-%d'')<=@cancle_time ');
            end if;
            
            if @cancle_type is not null and @cancle_type<>'' then
            set sql1=concat(sql1,' and c.cancel_cause=@cancle_type ');
            end if;
            
            if @caller is not null and @caller<>'' then
            set sql1=concat(sql1,' and c.caller_number=@caller ');    
            end if;
             
            if @callee is not null and @callee<>'' then
            set sql1=concat(sql1,' and c.callee_number=@callee ');
            end if;
            
            if @origcaller is not null and @origcaller<>'' then
            set sql1=concat(sql1,' and c.orig_caller_number=@origcaller ');
            end if;
            
            if @origcallee is not null and @origcallee<>'' then
            set sql1=concat(sql1,' and c.orig_callee_number=@origcallee ');
            end if;
            
            if @uuid is not null and @uuid<>'' then
            set sql1=concat(sql1,' and c.cti_call_uuid=@uuid ');
            end if;
            

      
      
            if @d_start_h+@d_start_m+@d_start_s >0 then
        set sql1=concat(sql1,' and c.wait>=ltrim(@d_start_h*3600+@d_start_m*60+@d_start_s)');
            end if; 
          
            if @d_stop_h+@d_stop_m+@d_stop_s >0 then
        set sql1=concat(sql1,' and c.wait<=ltrim(@d_stop_h*3600+@d_stop_m*60+@d_stop_s)');
            end if; 
      
            if @a_start_h+@a_start_m+@a_start_s >0 then
        set sql1=concat(sql1,' and c.answer>=ltrim(@a_start_h*3600+@a_start_m*60+@a_start_s)');
            end if; 
          
            if @a_stop_h+@a_stop_m+@a_stop_s >0 then
        set sql1=concat(sql1,' and c.answer<=ltrim(@a_stop_h*3600+@a_stop_m*60+@a_stop_s)');
            end if;  
      
      
            if @f_start_h+@f_start_m+@f_start_s >0 then
        set sql1=concat(sql1,' and c.services>=ltrim(@f_start_h*3600+@f_start_m*60+@f_start_s)');
            end if; 
          
            if @f_stop_h+@f_stop_m+@f_stop_s >0 then
        set sql1=concat(sql1,' and c.services<=ltrim(@f_stop_h*3600+@f_stop_m*60+@f_stop_s)');
            end if;  
    
         set sql1=concat(sql1,' order by c.start_time desc');   

    set @exesql =sql1; 

    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_agent_orgjx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `p_cti_agent_orgjx`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40),
                agent_org_id varchar(40),
                agent_org_name varchar(40)
      
)
begin
  declare sql1 nvarchar(5000);
    declare starthour nvarchar(50);
    declare endhour    nvarchar(50);
    set @endhour=endhour;
    set @starthour=starthour;
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
    set @agent_org_id=agent_org_id;
  set @agent_org_name=agent_org_name;
  
         
         
         
         
        if @times='小时' or @times='半小时' then
          set @starthour=date_format(now(),'%Y-%m-%d ');
        end if;     
        if @times='小时' or @times='半小时' then
          set @endhour=date_format(date_add(now(),interval 1 day),'%Y-%m-%d '); 
               end if;     
                   
        set sql1=concat('select ' );
        if @times='小时' then
              set sql1=concat(sql1,'substring(calldate,1,13) as calldate');
       elseif @times='半小时' then
             set sql1=concat(sql1,'substring(calldate,1,16) as calldate');
       else
                   set sql1=concat(sql1,'calldate');
       end if;
           set sql1=concat(sql1,','
    ,'agent_org_id,agent_org_name,toperson,topersonsucceed,login,'
    ,'busy,hold,postcall,innercall,bell,to20,'
    ,'sec_to_time(tosuccedtime) as tosuccedtime,sec_to_time(logintime) as logintime,'
    ,'sec_to_time(busytime) as busytime,sec_to_time(holdtime) as holdtime,'
    ,'sec_to_time(postcalltime) as postcalltime,sec_to_time(innertime) as innertime,'
    ,'sec_to_time(belltime) as belltime,sec_to_time(avgtime) as avgtime,'
    ,'sec_to_time(avglogintime) as avglogintime,sec_to_time(avgbusytime) as avgbusytime,'
    ,'sec_to_time(avgholetime) as avgholetime,sec_to_time(avgpostcalltime) as avgpostcalltime,'
    ,'sec_to_time(avginnertime) as avginnertime,sec_to_time(avgbelltime) as avgbelltime,'
    ,'sec_to_time(avgworktime) as avgworktime,persuccess,perfree,perwork,perhold,peraway,perto20,outcall,'
    ,'sec_to_time(outcalltime) as outcalltime,sec_to_time(avgoutcalltime) as avgoutcalltime'
    ,'  from ');        
  
       set sql1=concat(sql1,'(select ');       
    
          if @times='半小时' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m-%d '')');
         end if;
        
     if @times='周' then
       set sql1=concat(sql1,' case  calldate when( week(calldate)<10) '
        ,' then '
    ,'  concat(date_format(calldate,''%Y''),''-0'',week(calldate))   '
        ,' else '
        ,'  concat(date_format(calldate,''%Y''),''-'',week(calldate))  end ');
         end if;
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(calldate,''%Y''),''-'',quarter(calldate))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(calldate,''%Y'')');
         end if;
        
        set sql1=concat(sql1,' as calldate,agent_org_id,agent_org_name,sum(toperson) as toperson,sum(topersonsucceed) as topersonsucceed,'
  ,'sum(login) as login,sum(busy) as busy,sum(hold) as hold,sum(postcall) as postcall,sum(innercall) as innercall,sum(bell) as bell,sum(to20) as to20,'
  ,'sum(tosuccedtime) as tosuccedtime,sum(logintime) as logintime,sum(busytime) as busytime,sum(holdtime) as holdtime,sum(postcalltime) as postcalltime,'
  ,'sum(innertime) as innertime,sum(belltime) as belltime,'
  ,' case topersonsucceed when (sum(topersonsucceed)=0) then 0 else sum(tosuccedtime)/sum(topersonsucceed) end as avgtime,'
  ,' case login when (sum(login)=0) then 0 else sum(logintime)/sum(login) end as avglogintime,'
  ,' case busy when (sum(busy)=0) then 0 else sum(busytime)/sum(busy) end as avgbusytime,'
  ,' case hold when (sum(hold)=0) then 0 else sum(holdtime)/sum(hold) end as avgholetime,'
  ,' case postcall when (sum(postcall)=0) then 0 else sum(postcalltime)/sum(postcall) end as avgpostcalltime,'
  ,' case innercall when (sum(innercall)=0) then 0 else sum(innertime)/sum(innercall) end as avginnertime,'
  ,' case bell when (sum(bell)=0) then 0 else sum(belltime)/sum(bell) end as avgbelltime,'
  ,' case topersonsucceed when (sum(topersonsucceed)+sum(postcall)=0) then 0 else (sum(tosuccedtime)+sum(postcalltime))/(sum(topersonsucceed)+sum(postcall)) end as avgworktime,'                     
    ,' case toperson when sum(toperson)=0 then 0 else format(sum(topersonsucceed)*100/sum(toperson),2) end persuccess,'
  ,' case logintime when sum(logintime)=0 then 0 else format((sum(logintime)-sum(tosuccedtime)-sum(busytime)-sum(postcalltime))*100/sum(logintime),2) end perfree,'
  ,' case logintime when sum(logintime)=0 then 0 else format((sum(tosuccedtime)+sum(postcalltime))*100/sum(logintime),2) end perwork,'
  ,' case tosuccedtime when sum(tosuccedtime)=0 then 0 else format(sum(holdtime)*100/sum(tosuccedtime),2) end perhold,'
  ,' case logintime when sum(logintime)=0 then 0 else format(sum(busytime)*100/sum(logintime),2) end peraway,'
  ,' case toperson when sum(toperson)=0 then 0 else format(sum(to20)*100/sum(toperson),2) end perto20,'
  ,' sum(outcall) as outcall,sum(outcalltime) as outcalltime,'
  ,' case outcall when (sum(outcall)=0) then 0 else sum(outcalltime)/sum(outcall) end as avgoutcalltime '
    ,'    from report_agent as c where  1=1 '); 
        
  if @agent_org_id is not null and @agent_org_id<>'' then
    set sql1=concat(sql1,' and agent_org_id=@agent_org_id ');
    end if;

    
          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  calldate>=@starttime');
      end if; 

      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  calldate<=@endtime');
      end if; 
           
        set sql1=concat(sql1,' group by ');
        
      
      
      
      
      
      
        if @times='半小时' then
     set sql1=concat(sql1,' date_format(calldate,''Y%-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m-%d '')');
         end if;
        
     if @times='周' then
       set sql1=concat(sql1,' case  calldate when( week(calldate)<10) '
        ,' then '
    ,'  concat(date_format(calldate,''%Y''),''-0'',week(calldate))   '
        ,' else '
        ,'  concat(date_format(calldate,''%Y''),''-'',week(calldate))  end ');
         end if;
         
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(calldate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,' concat(date_format(calldate,''%Y''),''-'',quarter(calldate))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(calldate,''%Y'')');
         end if;
       
       set sql1=concat(sql1,',agent_org_id ');
  
       set sql1=concat(sql1,'  ) as cdr where 1=1 ');
      
      
       if @start_h+@start_m+@start_s >0 then
    set sql1=concat(sql1,' and tosuccedtime>=ltrim(@start_h*3600+@start_m*60+@start_s)');
        end if; 
        if @stop_h+@stop_m+@stop_s >0 then
    set sql1=concat(sql1,' and tosuccedtime<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
        end if; 
      
  set sql1=concat(sql1,'order by calldate');
      
  
  

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_agent_qr` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_agent_qr`( 
                org_id varchar(40),
                agent_id varchar(40),
                work_id varchar(40),
                agent_name varchar(40),
                agent_ext varchar(40),
                start_time varchar(40),
                end_time varchar(40),
                starth varchar(40),
                startm varchar(40),
                starts varchar(40),
                stoph varchar(40),
                stopm varchar(40),
                stops varchar(40)
       
)
begin

  declare sql1 nvarchar(2500);
    set @org_id=org_id;
    set @agent_id=agent_id;
    set @work_id=work_id;
    set @agent_name=agent_name;
    set @agent_ext=agent_ext;
    set @start_time=start_time;
    set @end_time=end_time;
    set @starth=starth;
    set @startm=startm;
    set @starts=starts;
    set @stoph=stoph;
    set @stopm=stopm;
    set @stops=stops;
    
   set sql1=concat('select c.org_id,c.agent_id,'
            ,'c.work_id,c.agent_name,'
            ,'c.agent_ext,c.login_timestamp,c.logout_timestamp,'
            ,' report_number_to_time(timestampdiff(second,c.login_timestamp,c.logout_timestamp)) as duration'
            ,',timestampdiff(second,c.login_timestamp,c.logout_timestamp) as billsec'
            ,' from v_report_cti_agent_session as c where  1=1 ');




            if @org_id is not null and @org_id<>'' then
            set sql1=concat(sql1,' and c.org_id=@org_id');
            end if;
          
            if @agent_id is not null and @agent_id<>'' then
            set sql1=concat(sql1,' and c.agent_id=@agent_id ');
            end if;
            
            if @work_id is not null and @work_id<>'' then
            set sql1=concat(sql1,' and c.work_id=@work_id');
            end if;
            
            if @agent_name is not null and  @agent_name<>'' then
            set sql1=concat(sql1,' and c.agent_name=@agent_name ');  
            end if;
            
            if @agent_ext is not null and @agent_ext<>'' then
            set sql1=concat(sql1,' and c.agent_ext=@agent_ext ');      
      end if;

           if @start_time is not null and @start_time<>'' then
       set sql1=concat(sql1,' and date_format(c.login_timestamp,''%Y-%m-%d'')>=@start_time');
           end if; 
     
     
       if @end_time is not null and @end_time<>'' then
       set sql1=concat(sql1,' and date_format(c.login_timestamp,''%Y-%m-%d'')<=@end_time');
       end if; 

           if @starth+@startm+@starts >0 then
       set sql1=concat(sql1,' and timestampdiff(second,c.login_timestamp,c.logout_timestamp) >=ltrim(@starth*3600+@startm*60+@starts)');
           end if; 
           
           if @stoph+@stopm+@stops >0 then
       set sql1=concat(sql1,' and timestampdiff(second,c.login_timestamp,c.logout_timestamp) <=ltrim(@stoph*3600+@stopm*60+@stops)');
           end if;   
   
    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;
    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_agent_service` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_agent_service`(
                org_id varchar(40),
                agent_id varchar(40),
                work_id varchar(40),
                agent_name varchar(40),
                agent_ext varchar(40),
                service_type varchar(40),
                cti_direction varchar(40),
                cc_direction varchar(40),
                start_time varchar(40),
                end_time varchar(40),
                answer_time varchar(40),
                cancle_time varchar(40),
                cancle_type varchar(40),
                caller varchar(40),
                callee varchar(40),
                origcaller varchar(40),
                origcallee varchar(40),
                uuid varchar(40),
                d_start_h varchar(40),
                d_start_m varchar(40),
                d_start_s varchar(40),
                d_stop_h varchar(40),
                d_stop_m varchar(40),
                d_stop_s varchar(40),
                a_start_h varchar(40),
                a_start_m varchar(40),
                a_start_s varchar(40),
                a_stop_h varchar(40),
                a_stop_m varchar(40),
                a_stop_s varchar(40),
                agent_session_id varchar(40),
                h_start_h varchar(40),
                h_start_m varchar(40),
                h_start_s varchar(40),
                h_stop_h varchar(40),
                h_stop_m varchar(40),
                h_stop_s varchar(40),
                f_start_h varchar(40),
                f_start_m varchar(40),
                f_start_s varchar(40),
                f_stop_h varchar(40),
                f_stop_m varchar(40),
                f_stop_s varchar(40)
)
begin
  declare sql1 nvarchar(2500);
    set @org_id=org_id;
    set @agent_id=agent_id;
    set @work_id=work_id;
    set @agent_name=agent_name;
    set @agent_ext=agent_ext;
    set @service_type=service_type;
    set @cti_direction=cti_direction;
    set @cc_direction=cc_direction;
    set @start_time=start_time;
    set @end_time=end_time;
    set @answer_time=answer_time;
               
    set @cancle_time=cancle_time;
    set @cancle_type=cancle_type;
    set @caller =caller;
    set @callee =callee;
    set @origcaller =origcaller;
    set @origcallee =origcallee;
    set @uuid =uuid;
    set @d_start_h =d_start_h;
    set @d_start_m =d_start_m;
    set @d_start_s=d_start_s;
    set @d_stop_h =d_stop_h;
    set @d_stop_m =d_stop_m;
    set @d_stop_s =d_stop_s;
    set @a_start_h =a_start_h; 
    set @a_start_m =a_start_m;
    set @a_start_s =a_start_s;
    set @a_stop_h =a_stop_h;
    set @a_stop_m =a_stop_m;
    set @a_stop_s =a_stop_s;
    set @agent_session_id =agent_session_id;
    set @h_start_h =h_start_h;
    set @h_start_m =h_start_m;
    set @h_start_s =h_start_s;
    set @h_stop_h =h_stop_h;
    set @h_stop_m =h_stop_m;
    set @h_stop_s =h_stop_s;
    set @f_start_h =f_start_h;
    set @f_start_m =f_start_m;
    set @f_start_s =f_start_s;
    set @f_stop_h =f_stop_h;
    set @f_stop_m =f_stop_m;
    set @f_stop_s =f_stop_s;
    set @d_stop_m =d_stop_m;
    set @d_stop_m =d_stop_m;

         set sql1=concat('select distinct c.org_id,c.agent_id,'
            ,'c.agent_session_id,d.work_id,d.agent_name,'
            ,' c.agent_ext,c.services_type,'
        ,'ccd.cti_call_direction_chinese as cti_call_direction, '
            ,'ccd1.cti_call_direction_chinese as cti_cc_direction, '
        ,'bh.cancel_cause_chinese as cancel_cause, '
        ,'c.start_time,c.toagent_time,c.end_time,'
            ,'c.duration,c.wait,c.answer,report_number_to_time(c.duration) as duration1,'
            , 'report_number_to_time(c.wait) as wait1,' 
            , 'report_number_to_time(c.answer) as answer1'
            , ',c.orig_caller_number,c.orig_callee_number,'
            ,'c.caller_number,c.callee_number,c.cti_call_uuid,c.cancel_time,'
            ,'c.post_call_time,c.post_call,c.services,c.total,'  
            ,'report_number_to_time(c.post_call) as post_call1,'
            ,'report_number_to_time(c.services) as services1,'
      ,'report_number_to_time(c.total) as total1 '
      ,'  from v_report_cti_agent_session as d,report_agent_services as c '
      ,'  left join report_cti_call_direction ccd on c.cti_call_direction  = ccd.cti_call_direction'
      ,'  left join report_cti_call_direction ccd1 on c.cti_cc_direction = ccd1.cti_call_direction '
      ,'  left join report_cancel_cause bh on c.cancel_cause = bh.cancel_cause' 
      ,'  where  c.agent_session_id=d.agent_session_id ');
      
      
            if @org_id is not null and @org_id<>'' then
            set sql1=concat(sql1,' and c.org_id=@org_id ');
            end if;
            
           
            if @agent_id is not null and @agent_id<>'' then
            set sql1=concat(sql1,' and c.agent_id=@agent_id ');
            end if;
            
            if @agent_session_id is not null and @agent_session_id<>'' then
            set sql1=concat(sql1,' and c.agent_session_id=@agent_session_id ');
            end if;
            
            if @work_id is not null and @work_id<>'' then
            set sql1=concat(sql1,' and d.work_id=@work_id ');
            end if;
            
            if @agent_name is not null and  @agent_name<>'' then
            set sql1=concat(sql1,' and d.agent_name=@agent_name ');
            end if;
            
            if @agent_ext is not null and @agent_ext<>'' then
            set sql1=concat(sql1,' and c.agent_ext=@agent_ext ');  
            end if;
            
            if @service_type is not null and @service_type<>'' then
            set sql1=concat(sql1,' and c.services_type=@service_type ');
            end if;
            
            if @cti_direction is not null and @cti_direction<>'' then
            set sql1=concat(sql1,' and c.cti_call_direction=@cti_direction ');
            end if;
            
            if @cc_direction is not null and @cc_direction<>'' then
            set sql1=concat(sql1,' and c.cti_cc_direction=@cc_direction ');
            end if;
            
            
              
            if @start_time is not null and @start_time<>'' then
        set sql1=concat(sql1,' and date_format(c.start_time,''%Y-%m-%d'')>=@start_time');
            end if; 
     
     
            if @end_time is not null and @end_time<>'' then
        set sql1=concat(sql1,' and date_format(c.start_time,''%Y-%m-%d'')<=@end_time');
            end if; 
            
            
            if @answer_time is not null and @answer_time<>'' then
            set sql1=concat(sql1,' and date_format(c.toagent_time,''%Y-%m-%d'')>=@answer_time ');
            end if;
            
            if @cancle_time is not null and @cancle_time<>'' then
            set sql1=concat(sql1,' and date_format(c.toagent_time,''%Y-%m-%d'')<=@cancle_time ');
            end if;
            
            if @cancle_type is not null and @cancle_type<>'' then
            set sql1=concat(sql1,' and c.cancel_cause=@cancle_type ');
            end if;
            
            if @caller is not null and @caller<>'' then
            set sql1=concat(sql1,' and c.caller_number=@caller ');    
            end if;
             
            if @callee is not null and @callee<>'' then
            set sql1=concat(sql1,' and c.callee_number=@callee ');
            end if;
            
            if @origcaller is not null and @origcaller<>'' then
            set sql1=concat(sql1,' and c.orig_caller_number=@origcaller ');
            end if;
            
            if @origcallee is not null and @origcallee<>'' then
            set sql1=concat(sql1,' and c.orig_callee_number=@origcallee ');
            end if;
            
            if @uuid is not null and @uuid<>'' then
            set sql1=concat(sql1,' and c.cti_call_uuid=@uuid ');
            end if;
            

      
      
            if @d_start_h+@d_start_m+@d_start_s >0 then
        set sql1=concat(sql1,' and c.wait>=ltrim(@d_start_h*3600+@d_start_m*60+@d_start_s)');
            end if; 
          
            if @d_stop_h+@d_stop_m+@d_stop_s >0 then
        set sql1=concat(sql1,' and c.wait<=ltrim(@d_stop_h*3600+@d_stop_m*60+@d_stop_s)');
            end if; 
      
            if @a_start_h+@a_start_m+@a_start_s >0 then
        set sql1=concat(sql1,' and c.answer>=ltrim(@a_start_h*3600+@a_start_m*60+@a_start_s)');
            end if; 
          
            if @a_stop_h+@a_stop_m+@a_stop_s >0 then
        set sql1=concat(sql1,' and c.answer<=ltrim(@a_stop_h*3600+@a_stop_m*60+@a_stop_s)');
            end if;  
      
            if @h_start_h+@h_start_m+@h_start_s >0 then
        set sql1=concat(sql1,' and c.post_call>=ltrim(@h_start_h*3600+@h_start_m*60+@h_start_s)');
            end if; 
          
            if @h_stop_h+@h_stop_m+@h_stop_s >0 then
        set sql1=concat(sql1,' and c.post_call<=ltrim(@h_stop_h*3600+@h_stop_m*60+@h_stop_s)');
            end if;  
      
      
            if @f_start_h+@f_start_m+@f_start_s >0 then
        set sql1=concat(sql1,' and c.services>=ltrim(@f_start_h*3600+@f_start_m*60+@f_start_s)');
            end if; 
          
            if @f_stop_h+@f_stop_m+@f_stop_s >0 then
        set sql1=concat(sql1,' and c.services<=ltrim(@f_stop_h*3600+@f_stop_m*60+@f_stop_s)');
            end if;  
      
         set sql1=concat(sql1,' order by c.start_time desc');   

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_agent_state` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_agent_state`(
                starttime varchar(40),
                endtime varchar(40),
                agent_id varchar(40),
                agent_name varchar(40)
              
)
begin
  declare sql1 nvarchar(2500);

    set @starttime=starttime;
    set @endtime=endtime;
    set @agent_id=agent_id;
    set @agent_name=agent_name;
  set sql1=concat('select sum(b.zhenling) as zhenling,sum(b.tonghua) as tonghua,'
  ,'sum(b.huahou) as huahou,sum(b.weijiuxu) as weijiuxu,'
  ,'sum(b.kongxian) as kongxian,sum(b.xiaoxiu) as xiaoxiu from   ');    
  set sql1=concat(sql1,'(select  '
    ,'case new_state_name '
   ,' when (new_state_name=''st_offering'' '
   ,' or new_state_name=''st_incoming_call'' '
   ,' or new_state_name=''st_dialing_out'' '
   ,'  or new_state_name=''st_incoming_innercall'') '
   ,' then sum(duration) '
   ,'  end zhenling, '
   ,' case new_state_name '
   ,' when (new_state_name=''st_in_queue_call''  '
   ,' or new_state_name=''st_in_inbound_call'' '
   ,' or new_state_name=''st_in_outbound_call''  '
  ,'  or new_state_name=''st_in_innercall'') '
  ,'  then sum(duration) '
   ,' end tonghua, '
   ,' case new_state_name '
 ,'   when (new_state_name=''st_post_call'') '
  ,'  then sum(duration) '
   ,' end huahou,  '
  ,'  case  new_state_name  '
  ,'  when (new_state_name=''st_idle'')  '
 ,'   then sum(duration)  '
  ,'  end weijiuxu,  '
 ,'   case new_state_name  '
  ,'  when (new_state_name=''st_waiting'')  '
 ,'   then sum(duration)  '
,'    end kongxian ,  '
 ,'   case new_state_name  '
  ,'  when (new_state_name=''st_on_break'') '
  ,'  then sum(duration)  '
  ,'  end xiaoxiu '
 ,'   from cti_agent_state as c  where 1=1 ');
 
 
 
     if @agent_id is not null and @agent_id<>'' then
     set sql1=concat(sql1,' and c.agent_id=@agent_id');
     end if;
     
   if @agent_name is not null and @agent_name<>'' then
     set sql1=concat(sql1,' and s.agent_name=@agent_name');
     end if;

  

 
     set sql1=concat(sql1,' and date_format(entry_timestamp,''%Y-%m-%d'')=date_format(now(),''%Y-%m-%d'') ');
          
  set sql1=concat(sql1, ' group by new_state_name ');
  set sql1=concat(sql1, ' ) as b ');

       
   
        

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_agent_state_by_hour` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `p_cti_agent_state_by_hour`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40)
         
              
)
begin
  declare sql1 nvarchar(2500);
    
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;

 

        set sql1=concat('select tjdate1 ,org_id,org_name,zhenling1,tonghua1,huahou1,kongxian1,jiuxu1,xiaoxiu1'
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;

 
if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;


 if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

         
         
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
           ,' select sum(b.zhenling) as 振铃,report_number_to_time(sum(b.zhenling)) zhenling1, '
           ,' sum(b.tonghua)  as 通话时长,report_number_to_time(sum(b.tonghua)) tonghua1,sum(b.huahou)   as 话后时长 ,'
           ,' report_number_to_time(sum(b.huahou)) huahou1,sum(b.weijiuxu)  as 空闲,'
       ,' report_number_to_time(sum(b.weijiuxu)) kongxian1,sum(b.kongxian)  as 就绪, '
       ,' report_number_to_time(sum(b.kongxian)) jiuxu1, sum(b.xiaoxiu)  as 小休 , '
           ,' report_number_to_time(sum(b.xiaoxiu)) xiaoxiu1,org_id,t_sys_organization.name as org_name ,entry_timestamp '
       ,' from(select ');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(report_time_30m(entry_timestamp),''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(entry_timestamp,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(entry_timestamp,''%Y-%m-%d '')');
         end if;

         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(entry_timestamp) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(entry_timestamp,''%Y''),''-0'',cast(week(entry_timestamp) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(entry_timestamp,''%Y''),''-'',cast(week(entry_timestamp) as SIGNED)+1)  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(entry_timestamp,''%Y-%m '')');
         end if;
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(entry_timestamp,''%Y''),''-'',quarter(entry_timestamp))');      
         end if;
 
     if @times='年' then
     set sql1=concat(sql1,' date_format(entry_timestamp,''%Y'')');
         end if;  
          
    set sql1=concat(sql1,'   as entry_timestamp ,org_id, '
                 ,' case   when (new_state_name=''st_offering''  or new_state_name=''st_incoming_call'''  
                 ,' or new_state_name=''st_dialing_out''   or new_state_name=''st_incoming_innercall'') ' 
                 ,' then sum(round(duration/1000,0))   end zhenling,  '
         ,' case   when (new_state_name=''st_in_queue_call''   or new_state_name=''st_in_inbound_call'' ' 
         ,' or new_state_name=''st_in_outbound_call''    or new_state_name=''st_in_innercall'')'   
                 ,' then sum(round(duration/1000,0))  end tonghua, ' 
         ,' case     when (new_state_name=''st_post_call'')   then sum(round(duration/1000,0))  end huahou, '  
                 ,' case      when (new_state_name=''st_idle'')     then sum(round(duration/1000,0))   end weijiuxu, '    
                 ,' case     when (new_state_name=''st_waiting'')     then sum(round(duration/1000,0))     end kongxian, '    
                 ,' case     when (new_state_name=''st_on_break'')   then sum(round(duration/1000,0))    end xiaoxiu  '  
         ,' from v_report_cti_agent_state as c   '
                 ,' left join v_report_cti_agent_session s on c.agent_session_id= s.agent_session_id '    
                 ,' where 1=1 ');
            
          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(entry_timestamp,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(entry_timestamp,''%Y-%m-%d'')<=@endtime');
      end if; 
            
    set sql1=concat(sql1,'  '
      ,' group by org_id ,new_state_name ,');
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(report_time_30m(entry_timestamp),''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(entry_timestamp,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(entry_timestamp,''%Y-%m-%d '')');
         end if;

         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(entry_timestamp) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(entry_timestamp,''%Y''),''-0'',cast(week(entry_timestamp) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(entry_timestamp,''%Y''),''-'',cast(week(entry_timestamp) as SIGNED)+1)  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(entry_timestamp,''%Y-%m '')');
         end if;
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(entry_timestamp,''%Y''),''-'',quarter(entry_timestamp))');      
         end if;
 
     if @times='年' then
     set sql1=concat(sql1,' date_format(entry_timestamp,''%Y'')');
         end if;  
            
     set sql1 =concat(sql1,'   '
      ,' ) as b '
        ,' left join  t_sys_organization on t_sys_organization.domain=b.org_id '
      ,' group by org_id,entry_timestamp ) as bb on d.tjdate1 = bb.entry_timestamp') ;


    set @exesql =sql1; 
  


    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_agent_state_history` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_agent_state_history`(
                starttime varchar(40),
                endtime varchar(40),
                work_id varchar(40),
                agent_name varchar(40)
               
              
)
begin
  declare sql1 nvarchar(2500);

    set @starttime=starttime;
    set @endtime=endtime;
    set @work_id=work_id;
    set @agent_name=agent_name;
  set sql1=concat('select sum(b.zhenling) as zhenling,sum(b.tonghua) as tonghua,'
  ,'sum(b.huahou) as huahou,sum(b.weijiuxu) as weijiuxu,'
  ,'sum(b.kongxian) as kongxian,sum(b.xiaoxiu) as xiaoxiu from   ');    
  set sql1=concat(sql1,'(select  '
    ,'case  '
   ,' when (new_state_name=''st_offering'' '
   ,' or new_state_name=''st_incoming_call'' '
   ,' or new_state_name=''st_dialing_out'' '
   ,'  or new_state_name=''st_incoming_innercall'') '
   ,' then sum(round(duration/1000,0)) '
   ,'  end zhenling, '
   ,' case  '
   ,' when (new_state_name=''st_in_queue_call''  '
   ,' or new_state_name=''st_in_inbound_call'' '
   ,' or new_state_name=''st_in_outbound_call''  '
   ,'  or new_state_name=''st_in_innercall'') '
   ,'  then sum(round(duration/1000,0)) '
   ,' end tonghua, '
   ,' case  '
   ,'   when (new_state_name=''st_post_call'') '
   ,'  then sum(round(duration/1000,0)) '
   ,' end huahou,  '
   ,'  case    '
   ,'  when (new_state_name=''st_idle'')  '
   ,'   then sum(round(duration/1000,0))  '
   ,'  end weijiuxu,  '
   ,'   case   '
   ,'  when (new_state_name=''st_waiting'')  '
   ,'   then sum(round(duration/1000,0)) '
   ,'    end kongxian,  '
   ,'   case   '
   ,'  when (new_state_name=''st_on_break'') '
   ,'  then sum(round(duration/1000,0))  '
   ,'  end xiaoxiu '
   ,'   from v_report_cti_agent_state as c  '
 ,' left join v_report_cti_agent_session s on c.agent_session_id= s.agent_session_id  '
   ,'  where 1=1 ');
 
 
 
  

 

     if @starttime is not null and @starttime<>'' then
  set sql1=concat(sql1,' and  date_format(entry_timestamp,''%Y-%m-%d'')>=@starttime');
  end if; 

  if @endtime is not null and @endtime<>'' then
  set sql1=concat(sql1,' and   date_format(entry_timestamp,''%Y-%m-%d'')<=@endtime');
  end if; 
        

     if @work_id is not null and @work_id<>'' then
     set sql1=concat(sql1,' and work_id=@work_id');
     end if;
     
   if @agent_name is not null and @agent_name<>'' then
     set sql1=concat(sql1,' and s.agent_name=@agent_name');
     end if;

    
    
    
  set sql1=concat(sql1, ' group by new_state_name ');
  set sql1=concat(sql1,') as b  ' );
       
     

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_CTI_AGENT_STATE_HISTORY1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_CTI_AGENT_STATE_HISTORY1`(
                STARTTIME varchar(40),
                ENDTIME varchar(40),
                ORG_ID VARCHAR(40),
                ORG_NAME VARCHAR(40)
               
              
)
BEGIN
  DECLARE sql1 nvarchar(2500);

    set @STARTTIME=STARTTIME;
    set @ENDTIME=ENDTIME;
    SET @ORG_ID=ORG_ID;
    SET @ORG_NAME=ORG_NAME;
  set sql1=concat('select sum(b.ZHENLING) as 振铃,'
    ,'sec_to_time(sum(b.ZHENLING)) ZHENLING1,'
    ,'sum(b.TONGHUA)  as 通话时长,'
    ,'sec_to_time(sum(b.TONGHUA)) TONGHUA1,'
  ,'sum(b.HUAHOU)  as 话后时长 ,'
    ,'sec_to_time(sum(b.HUAHOU)) HUAHOU1,'
    ,'sum(b.WEIJIUXU)  as 未就绪,'
  ,'sec_to_time(sum(b.WEIJIUXU)) WEIJIUXU1,'
  ,'sum(b.KONGXIAN)  as 空闲,'
    ,'sec_to_time(sum(b.KONGXIAN)) KONGXIAN1,'
    ,' sum(b.XIAOXIU)  as 小休 ,'
    ,'sec_to_time(sum(b.XIAOXIU)) XIAOXIU1,'
    ,'org_id,t_sys_organization.name as org_name '
    ,' from   ');     
  set sql1=concat(sql1,'(select  org_id, '
    ,'CASE  '
   ,' WHEN (NEW_STATE_NAME=''st_offering'' '
   ,' OR NEW_STATE_NAME=''st_incoming_call'' '
   ,' OR NEW_STATE_NAME=''st_dialing_out'' '
   ,'  OR NEW_STATE_NAME=''st_incoming_innercall'') '
   ,' THEN SUM(round(DURATION/1000,0)) '
   ,'  END ZHENLING, '
   ,' CASE  '
   ,' WHEN (NEW_STATE_NAME=''st_in_queue_call''  '
   ,' OR NEW_STATE_NAME=''st_in_inbound_call'' '
   ,' OR NEW_STATE_NAME=''st_in_outbound_call''  '
   ,'  OR NEW_STATE_NAME=''st_in_innercall'') '
   ,'  THEN SUM(round(DURATION/1000,0)) '
   ,' END TONGHUA, '
   ,' CASE  '
   ,'   WHEN (NEW_STATE_NAME=''st_post_call'') '
   ,'  THEN SUM(round(DURATION/1000,0)) '
   ,' END HUAHOU,  '
   ,'  CASE    '
   ,'  WHEN (NEW_STATE_NAME=''st_idle'')  '
   ,'   THEN SUM(round(DURATION/1000,0))  '
   ,'  END WEIJIUXU,  '
   ,'   CASE   '
   ,'  WHEN (NEW_STATE_NAME=''st_waiting'')  '
   ,'   THEN SUM(round(DURATION/1000,0))  '
   ,'    END KONGXIAN,  '
   ,'   CASE   '
   ,'  WHEN (NEW_STATE_NAME=''st_on_break'') '
   ,'  THEN SUM(round(DURATION/1000,0))  '
   ,'  END XIAOXIU '
   ,'   FROM V_REPORT_CTI_AGENT_STATE as c  '
 ,' LEFT JOIN V_REPORT_CTI_AGENT_SESSION S ON C.AGENT_SESSION_ID= S.AGENT_SESSION_ID  '
   ,'  WHERE 1=1 ');
 
     if @STARTTIME is not null and @STARTTIME<>'' then
  set sql1=CONCAT(sql1,' and  date_format(ENTRY_TIMESTAMP,''%Y-%m-%d'')>=@STARTTIME');
  end if; 

  if @ENDTIME is not null and @ENDTIME<>'' then
  set sql1=CONCAT(sql1,' and   date_format(ENTRY_TIMESTAMP,''%Y-%m-%d'')<=@ENDTIME');
  end if; 
        
  
    
    
    
  set sql1=concat(sql1, ' group by NEW_STATE_NAME,org_id ');
  SET sql1=concat(sql1,') as b  '
   ,' left join  t_sys_organization on t_sys_organization.domain=b.org_id ');
   

     if @ORG_ID is not null and @ORG_ID<>'' THEN
     set sql1=CONCAT(sql1,' and ORG_ID=@ORG_ID');
     end if;
     
   if @ORG_NAME is not null and @ORG_NAME<>'' then
     set sql1=concat(sql1,' and ORG_NAME=@ORG_NAME');
     end if;

  SET sql1=concat(sql1 ,' group by org_id' );
       
select sql1;
    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_CTI_AGENT_STATE_HISTORY2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_CTI_AGENT_STATE_HISTORY2`(
                STARTTIME varchar(40),
                ENDTIME varchar(40)
      
        
               
              
)
BEGIN
  DECLARE sql1 nvarchar(2500);

    set @STARTTIME=STARTTIME;
    set @ENDTIME=ENDTIME;
   
  
  set sql1=concat('select sum(b.ZHENLING) as 振铃,'
    ,'sec_to_time(sum(b.ZHENLING)) ZHENLING1,'
    ,'sum(b.TONGHUA)  as 通话时长,'
    ,'sec_to_time(sum(b.TONGHUA)) TONGHUA1,'
  ,'sum(b.HUAHOU)  as 话后时长 ,'
    ,'sec_to_time(sum(b.HUAHOU)) HUAHOU1,'
    ,'sum(b.WEIJIUXU)  as 未就绪,'
  ,'sec_to_time(sum(b.WEIJIUXU)) WEIJIUXU1,'
  ,'sum(b.KONGXIAN)  as 空闲,'
    ,'sec_to_time(sum(b.KONGXIAN)) KONGXIAN1,'
    ,' sum(b.XIAOXIU)  as 小休 ,'
    ,'sec_to_time(sum(b.XIAOXIU)) XIAOXIU1 '
    ,' from   ');     
  set sql1=concat(sql1,'(select  org_id, '
    ,'CASE  '
   ,' WHEN (NEW_STATE_NAME=''st_offering'' '
   ,' OR NEW_STATE_NAME=''st_incoming_call'' '
   ,' OR NEW_STATE_NAME=''st_dialing_out'' '
   ,'  OR NEW_STATE_NAME=''st_incoming_innercall'') '
   ,' THEN SUM(round(DURATION/1000,0)) '
   ,'  END ZHENLING, '
   ,' CASE  '
   ,' WHEN (NEW_STATE_NAME=''st_in_queue_call''  '
   ,' OR NEW_STATE_NAME=''st_in_inbound_call'' '
   ,' OR NEW_STATE_NAME=''st_in_outbound_call''  '
   ,'  OR NEW_STATE_NAME=''st_in_innercall'') '
   ,'  THEN SUM(round(DURATION/1000,0)) '
   ,' END TONGHUA, '
   ,' CASE  '
   ,'   WHEN (NEW_STATE_NAME=''st_post_call'') '
   ,'  THEN SUM(round(DURATION/1000,0)) '
   ,' END HUAHOU,  '
   ,'  CASE    '
   ,'  WHEN (NEW_STATE_NAME=''st_idle'')  '
   ,'   THEN SUM(round(DURATION/1000,0))  '
   ,'  END WEIJIUXU,  '
   ,'   CASE   '
   ,'  WHEN (NEW_STATE_NAME=''st_waiting'')  '
   ,'   THEN SUM(round(DURATION/1000,0))  '
   ,'    END KONGXIAN,  '
   ,'   CASE   '
   ,'  WHEN (NEW_STATE_NAME=''st_on_break'') '
   ,'  THEN SUM(round(DURATION/1000,0))  '
   ,'  END XIAOXIU '
   ,'   FROM V_REPORT_CTI_AGENT_STATE as c  '
 ,' LEFT JOIN V_REPORT_CTI_AGENT_SESSION S ON C.AGENT_SESSION_ID= S.AGENT_SESSION_ID  '
   ,'  WHERE 1=1 ');
 
     if @STARTTIME is not null and @STARTTIME<>'' then
  set sql1=CONCAT(sql1,' and  date_format(ENTRY_TIMESTAMP,''%Y-%m-%d'')>=@STARTTIME');
  end if; 

  if @ENDTIME is not null and @ENDTIME<>'' then
  set sql1=CONCAT(sql1,' and   date_format(ENTRY_TIMESTAMP,''%Y-%m-%d'')<=@ENDTIME');
  end if; 
        
  
    
    
    
  set sql1=concat(sql1, ' group by NEW_STATE_NAME,org_id ');
  SET sql1=concat(sql1,') as b  ');
   

     if @ORG_ID is not null and @ORG_ID<>'' THEN
     set sql1=CONCAT(sql1,' and ORG_ID=@ORG_ID');
     end if;
     
   if @ORG_NAME is not null and @ORG_NAME<>'' then
     set sql1=concat(sql1,' and ORG_NAME=@ORG_NAME');
     end if;

 

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_agent_state_history_h` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_agent_state_history_h`(
                starttime varchar(40),
                endtime varchar(40),
                work_id varchar(40),
                agent_name varchar(40)
               
              
)
begin
	declare sql1 nvarchar(2500);

    set @starttime=starttime;
    set @endtime=endtime;
    set @work_id=work_id;
    set @agent_name=agent_name;
  set sql1=concat('select sum(b.zhenling) as zhenling,sum(b.tonghua) as tonghua,'
	,'sum(b.huahou) as huahou,sum(b.weijiuxu) as weijiuxu,'
	,'sum(b.kongxian) as kongxian,sum(b.xiaoxiu) as xiaoxiu from   '); 		
	set sql1=concat(sql1,'(select  '
    ,'case  '
   ,' when (new_state_name=''st_offering'' '
   ,' or new_state_name=''st_incoming_call'' '
   ,' or new_state_name=''st_dialing_out'' '
   ,'  or new_state_name=''st_incoming_innercall'') '
   ,' then sum(round(duration/1000,0)) '
   ,'  end zhenling, '
   ,' case  '
   ,' when (new_state_name=''st_in_queue_call''  '
   ,' or new_state_name=''st_in_inbound_call'' '
   ,' or new_state_name=''st_in_outbound_call''  '
   ,'  or new_state_name=''st_in_innercall'') '
   ,'  then sum(round(duration/1000,0)) '
   ,' end tonghua, '
   ,' case  '
   ,'   when (new_state_name=''st_post_call'') '
   ,'  then sum(round(duration/1000,0)) '
   ,' end huahou,  '
   ,'  case    '
   ,'  when (new_state_name=''st_idle'')  '
   ,'   then sum(round(duration/1000,0))  '
   ,'  end weijiuxu,  '
   ,'   case   '
   ,'  when (new_state_name=''st_waiting'')  '
   ,'   then sum(round(duration/1000,0)) '
   ,'    end kongxian,  '
   ,'   case   '
   ,'  when (new_state_name=''st_on_break'') '
   ,'  then sum(round(duration/1000,0))  '
   ,'  end xiaoxiu '
   ,'   from cti_hist_agent_state as c  '
 ,' left join cti_hist_agent_session s on c.agent_session_id= s.agent_session_id	'
   ,'  where 1=1 ');
 
 
 
	

 

     if @starttime is not null and @starttime<>'' then
	set sql1=concat(sql1,' and  date_format(entry_timestamp,''%Y-%m-%d'')>=@starttime');
	end if; 

	if @endtime is not null and @endtime<>'' then
	set sql1=concat(sql1,' and   date_format(entry_timestamp,''%Y-%m-%d'')<=@endtime');
	end if; 
        
#-------------------------------------------------------------
     if @work_id is not null and @work_id<>'' then
     set sql1=concat(sql1,' and work_id=@work_id');
     end if;
     
	 if @agent_name is not null and @agent_name<>'' then
     set sql1=concat(sql1,' and s.agent_name=@agent_name');
     end if;
#-------------------------------------------------------------    
    
    
    
	set sql1=concat(sql1, ' group by new_state_name ');
	set sql1=concat(sql1,') as b  ' );
       
     

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_report_acd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_report_acd`(
                cti_call_direction varchar(40),
                cti_cc_direction varchar(40),
                orig_caller_number varchar(40),
                orig_callee_number varchar(40),
                caller_number varchar(40),
                callee_number varchar(40),
                cancel_cause varchar(40),
                channel_type varchar(40),
                agent_name varchar(40),
                cti_call_uuid varchar(40),
                queue varchar(40),
                is_bridge_agent varchar(40),
                start_time varchar(40),
                stop_time varchar(40),
                org_id varchar(40),
                channel_uuid varchar(1),
                member_uuid varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40)
)
begin
  declare sql1 nvarchar(3500);
    set @cti_call_direction=cti_call_direction;
    set @cti_cc_direction=cti_cc_direction;
    set @orig_caller_number=orig_caller_number;
    set @orig_callee_number=orig_callee_number;
    set @caller_number=caller_number;
    set @callee_number=callee_number;
    set @cancel_cause=cancel_cause;
    set @channel_type=channel_type;
    set @agent_name=agent_name;
    set @cti_call_uuid=cti_call_uuid;
    set @queue=queue;
               
    set @is_bridge_agent=is_bridge_agent;
    set @start_time=start_time;
    set @stop_time =stop_time;
    set @org_id =org_id;
    set @channel_uuid =channel_uuid;
    set @member_uuid =member_uuid;
    set @start_h =start_h;
    set @start_m =start_m;
    set @start_s =start_s;
    set @stop_h=stop_h;
    set @stop_m =stop_m;
    set @stop_s =stop_s;
    
   
 set sql1=concat('select c.orig_caller_number,c.orig_callee_number,c.caller_number,c.callee_number,'
    ,'ccd.cti_call_direction_chinese as cti_call_direction, '
        ,' ccd1.cti_call_direction_chinese as cti_cc_direction, '
    ,' ct.cti_channel_type_chinese as channel_type,  '
        ,' bh.cancel_cause_chinese as cancel_cause,   '
    , 'case c.is_bridge_agent when ''1'' then ''是'' else ''否'' end as is_bridge_agent ,'
        ,' report_number_to_time(c.duration)  as duration1,'   
        ,' c.agent_name,c.agent_id, c.agent_session_id,c.duration,c.queue,c.start_time,c.bridge_agent_time,c.cancel_time,'
    ,' c.org_id,d.channel_uuid,c.cti_call_uuid,c.member_uuid '
    ,' from report_queue as c '
    ,' inner join report_cdr as d on c.cti_call_uuid=d.cti_call_uuid '
    ,' left join report_cti_call_direction ccd on d.cti_call_direction = ccd.cti_call_direction'
    ,'  left join report_cti_call_direction ccd1 on d.cti_cc_direction = ccd1.cti_call_direction '
    ,'  left join report_channel_type ct on c.channel_type = ct.cti_channel_type' 
    ,'  left join report_cancel_cause bh on c.cancel_cause = bh.cancel_cause where 1=1 ' );
        
  if @cti_call_direction is not null and @cti_call_direction<>'' then
      set sql1=concat(sql1,' and d.cti_call_direction=@cti_call_direction ');
      end if;
            
            if @cti_cc_direction is not null and @cti_cc_direction<>'' then
            set sql1=concat(sql1,' and d.cti_cc_direction=@cti_cc_direction ');
            end if;
            
            if @orig_caller_number is not null and @orig_caller_number<>'' then
            set sql1=concat(sql1,' and c.orig_caller_number=@orig_caller_number ');
            end if;
            
            if @orig_callee_number is not null and @orig_callee_number<>'' then
            set sql1=concat(sql1,' and c.orig_callee_number=@orig_callee_number ');
            end if;
            
            if @caller_number is not null and @caller_number<>'' then
            set sql1=concat(sql1,' and c.caller_number=@caller_number ');
            end if;
            
            if @callee_number is not null and @callee_number<>'' then
            set sql1=concat(sql1,' and c.callee_number=@callee_number ');
            end if;
            
            if @cancel_cause is not null and @cancel_cause<>'' then
            set sql1=concat(sql1,' and c.cancel_cause=@cancel_cause ');
            end if;
            
            if @channel_type is not null and  @channel_type<>'' then
            set sql1=concat(sql1,' and c.channel_type=@channel_type ');
            end if;
            
            
            if @agent_name is not null and @agent_name<>'' then
            set sql1=concat(sql1,' and c.agent_name=@agent_name ');
            end if;
            
            if @cti_call_uuid is not null and @cti_call_uuid<>'' then
            set sql1=concat(sql1,' and c.cti_call_uuid=@cti_call_uuid ');
            end if;
            
            if @queue is not null and @queue<>'' then
            set sql1=concat(sql1,' and c.queue=@queue ');
            end if;
            
            if @is_bridge_agent is not null and @is_bridge_agent<>'' then
            set sql1=concat(sql1,' and c.is_bridge_agent=@is_bridge_agent ');
            end if;
            
            if @org_id is not null and @org_id<>'' then
            set sql1=concat(sql1,' and c.org_id=@org_id ');
            end if;
            
            if @channel_uuid is not null and @channel_uuid<>'' then
            set sql1=concat(sql1,' and d.channel_uuid=@channel_uuid ');
            end if;
            
            if @member_uuid is not null and @member_uuid<>'' then
            set sql1=concat(sql1,' and c.member_uuid=@member_uuid ');
      end if;
            

            
            
             if @start_time is not null and @start_time<>'' then
        set sql1=concat(sql1,' and date_format(c.start_time,''%Y-%m-%d'')>=@start_time');
            end if; 
  
            if @stop_time is not null and @stop_time<>'' then
        set sql1=concat(sql1,' and date_format(c.start_time,''%Y-%m-%d'')<=@stop_time');
            end if; 
            
            
            
            
            if @start_h+@start_m+@start_s >0 then
        set sql1=concat(sql1,' and c.duration>=ltrim(@start_h*3600+@start_m*60+@start_s)');
            end if; 
          
            if @stop_h+@stop_m+@stop_s >0 then
        set sql1=concat(sql1,' and c.duration<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
            end if; 
          
          
          set sql1=concat(sql1,' order by c.start_time desc '); 
  
    set @exesql =sql1; 
 

 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_CTI_REPORT_ACD_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_CTI_REPORT_ACD_back`(
                cti_call_direction varchar(40),
                cti_cc_direction varchar(40),
                orig_caller_number varchar(40),
                orig_callee_number varchar(40),
                caller_number varchar(40),
                callee_number varchar(40),
                cancel_cause varchar(40),
                channel_type varchar(40),
                agent_name varchar(40),
                cti_call_uuid varchar(40),
                queue varchar(40),
                is_bridge_agent varchar(40),
                start_time varchar(40),
                stop_time varchar(40),
                org_id varchar(40),
                channel_uuid varchar(1),
                member_uuid varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40)
)
begin
  declare sql1 nvarchar(3500);
    set @cti_call_direction=cti_call_direction;
    set @cti_cc_direction=cti_cc_direction;
    set @orig_caller_number=orig_caller_number;
    set @orig_callee_number=orig_callee_number;
    set @caller_number=caller_number;
    set @callee_number=callee_number;
    set @cancel_cause=cancel_cause;
    set @channel_type=channel_type;
    set @agent_name=agent_name;
    set @cti_call_uuid=cti_call_uuid;
    set @queue=queue;
               
    set @is_bridge_agent=is_bridge_agent;
    set @start_time=start_time;
    set @stop_time =stop_time;
    set @org_id =org_id;
    set @channel_uuid =channel_uuid;
    set @member_uuid =member_uuid;
    set @start_h =start_h;
    set @start_m =start_m;
    set @start_s =start_s;
    set @stop_h=stop_h;
    set @stop_m =stop_m;
    set @stop_s =stop_s;
    
   
 set sql1=concat('select c.orig_caller_number,c.orig_callee_number,c.caller_number,c.callee_number,'
    ,'ccd.cti_call_direction_chinese as cti_call_direction, '
        ,' ccd1.cti_call_direction_chinese as cti_cc_direction, '
    ,' ct.cti_channel_type_chinese as channel_type,  '
        ,' bh.cancel_cause_chinese as cancel_cause,   '
    , 'case c.is_bridge_agent when ''1'' then ''是'' else ''否'' end as is_bridge_agent ,'
        ,' sec_to_time(c.duration)  as duration1,'   
        ,' c.agent_name,c.agent_id, c.agent_session_id,c.duration,c.queue,c.start_time,c.bridge_agent_time,c.cancel_time,'
    ,' c.org_id,d.channel_uuid,c.cti_call_uuid,c.member_uuid '
    ,' from report_queue as c '
    ,' inner join report_cdr as d on c.cti_call_uuid=d.cti_call_uuid '
    ,' left join report_cti_call_direction ccd on d.cti_call_direction = ccd.cti_call_direction'
    ,'  left join report_cti_call_direction ccd1 on d.cti_cc_direction = ccd1.cti_call_direction '
    ,'  left join report_channel_type ct on c.channel_type = ct.cti_channel_type' 
    ,'  left join report_cancel_cause bh on c.cancel_cause = bh.cancel_cause where 1=1 ' );
        
  if @cti_call_direction is not null and @cti_call_direction<>'' then
      set sql1=concat(sql1,' and d.cti_call_direction=@cti_call_direction ');
      end if;
            
            if @cti_cc_direction is not null and @cti_cc_direction<>'' then
            set sql1=concat(sql1,' and d.cti_cc_direction=@cti_cc_direction ');
            end if;
            
            if @orig_caller_number is not null and @orig_caller_number<>'' then
            set sql1=concat(sql1,' and c.orig_caller_number=@orig_caller_number ');
            end if;
            
            if @orig_callee_number is not null and @orig_callee_number<>'' then
            set sql1=concat(sql1,' and c.orig_callee_number=@orig_callee_number ');
            end if;
            
            if @caller_number is not null and @caller_number<>'' then
            set sql1=concat(sql1,' and c.caller_number=@caller_number ');
            end if;
            
            if @callee_number is not null and @callee_number<>'' then
            set sql1=concat(sql1,' and c.callee_number=@callee_number ');
            end if;
            
            if @cancel_cause is not null and @cancel_cause<>'' then
            set sql1=concat(sql1,' and c.cancel_cause=@cancel_cause ');
            end if;
            
            if @channel_type is not null and  @channel_type<>'' then
            set sql1=concat(sql1,' and c.channel_type=@channel_type ');
            end if;
            
            
            if @agent_name is not null and @agent_name<>'' then
            set sql1=concat(sql1,' and c.agent_name=@agent_name ');
            end if;
            
            if @cti_call_uuid is not null and @cti_call_uuid<>'' then
            set sql1=concat(sql1,' and c.cti_call_uuid=@cti_call_uuid ');
            end if;
            
            if @queue is not null and @queue<>'' then
            set sql1=concat(sql1,' and c.queue=@queue ');
            end if;
            
            if @is_bridge_agent is not null and @is_bridge_agent<>'' then
            set sql1=concat(sql1,' and c.is_bridge_agent=@is_bridge_agent ');
            end if;
            
            if @org_id is not null and @org_id<>'' then
            set sql1=concat(sql1,' and c.org_id=@org_id ');
            end if;
            
            if @channel_uuid is not null and @channel_uuid<>'' then
            set sql1=concat(sql1,' and d.channel_uuid=@channel_uuid ');
            end if;
            
            if @member_uuid is not null and @member_uuid<>'' then
            set sql1=concat(sql1,' and c.member_uuid=@member_uuid ');
      end if;
            

            
            
             if @start_time is not null and @start_time<>'' then
        set sql1=concat(sql1,' and c.start_time>=@start_time');
            end if; 
  
            if @stop_time is not null and @stop_time<>'' then
        set sql1=concat(sql1,' and c.start_time<=@stop_time');
            end if; 
            
            
            
            
            if @start_h+@start_m+@start_s >0 then
        set sql1=concat(sql1,' and c.duration>=ltrim(@start_h*3600+@start_m*60+@start_s)');
            end if; 
          
            if @stop_h+@stop_m+@stop_s >0 then
        set sql1=concat(sql1,' and c.duration<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
            end if; 
          
          
          set sql1=concat(sql1,' order by c.start_time desc '); 
  
    set @exesql =sql1; 
 

 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_report_cdr` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_report_cdr`(
                cti_call_direction varchar(40),
                cti_cc_direction varchar(40),
                orig_caller_number varchar(40),
                orig_callee_number varchar(40),
                caller_number varchar(40),
                callee_number varchar(40),
                account_code varchar(40),
                hangup_cause varchar(40),
                hangup_disposition varchar(40),
                cti_call_uuid varchar(40),
                orig_caller_type varchar(40),
                starttime varchar(40),
                stoptime varchar(40),
                cancel_time varchar(40),
                start_dh varchar(40),
                start_dm varchar(1),
                start_ds varchar(40),
                stop_dh varchar(40),
                stop_dm varchar(40),
                stop_ds varchar(40),
                start_bh varchar(40),
                start_bm varchar(40),
                start_bs varchar(40),
                stop_bh varchar(40),
                stop_bm varchar(40),
                stop_bs varchar(40)
             
)
begin
  declare sql1 nvarchar(4000);
    set @cti_call_direction=cti_call_direction;
    set @cti_cc_direction=cti_cc_direction;
    set @orig_caller_number=orig_caller_number;
    set @orig_callee_number=orig_callee_number;
    set @caller_number=caller_number;
    set @callee_number=callee_number;
    set @account_code=account_code;
    set @hangup_cause=hangup_cause;
    set @hangup_disposition=hangup_disposition;
    set @cti_call_uuid=cti_call_uuid;
    set @orig_caller_type=orig_caller_type;
               
    set @starttime=starttime;
    set @stoptime=stoptime;
    set @cancel_time =cancel_time;
    set @start_dh =start_dh;
    set @start_dm =start_dm;
    set @start_ds =start_ds;
    set @stop_dh =stop_dh;
    set @stop_dm =stop_dm;
    set @stop_ds =stop_ds;
    set @start_bh=start_bh;
    set @start_bm =start_bm;
    set @start_bs =start_bs;
    set @stop_bh =stop_bh;
    set @stop_bm =stop_bm; 
    set @stop_bs =stop_bs;

         set sql1=concat('select a.zh_cn,c1.account_code,c1.agent_count,c1.agent_time,c1.agent_time1,c1.answered,'
            ,'c1.answered_time,c1.answered1,'
            ,'c1.billsec,c1.billsec1,c1.callee_number,c1.caller_number,c1.cancel_time,'
            ,'c1.creat_time,c1.cti_call_direction,'
            ,'c1.cti_call_uuid,c1.cti_cc_direction,c1.duration,c1.duration1,'
            ,'c1.hangup_cause,c1.hangup_disposition,'
            ,'c1.id,c1.ivr_count,c1.ivr_time,c1.ivr_time1,'
            ,'c1.orig_callee_number,c1.orig_caller_number,'
            ,'c1.orig_caller_type,c1.queue_count,c1.queue_time,c1.queue_time1,'
            ,'c1.waitsec,c1.waitsec1, c1.orig_caller_type1,'
            ,'c1.hangup_disposition1,'
            ,'c1.cti_cc_direction1,c1.cti_call_direction1'
      ,', c1.first_agent_time,c1.org_id,c1.agent_id,c1.agent_name,c1.agent_session_id,c1.agent_channel_uuid,c1.work_id '
 ,' from (  select  c.account_code,c.agent_count,c.agent_time,report_number_to_time(c.agent_time) as agent_time1,c.answered,'
            ,'c.answered_time,report_number_to_time(answered) as answered1,'
            ,'c.billsec,c.billsec1,c.callee_number,c.caller_number,c.cancel_time,'
            ,'c.creat_time,c.cti_call_direction,'
            ,'c.cti_call_uuid,c.cti_cc_direction,c.duration,report_number_to_time(c.duration) as duration1,'
            ,'c.hangup_cause,c.hangup_disposition,'
            ,'c.id,c.ivr_count,c.ivr_time,report_number_to_time(c.ivr_time1) as ivr_time1,'
            ,'c.orig_callee_number,c.orig_caller_number,'
            ,'c.orig_caller_type,c.queue_count,c.queue_time,report_number_to_time(c.queue_time) as queue_time1,'
            ,'c.waitsec,report_number_to_time(c.waitsec) as waitsec1,'
            ,'c.first_agent_time,c.org_id,c.agent_id,c.agent_name,c.agent_session_id,c.agent_channel_uuid,c.work_id, '
            ,' w.cti_channel_type_chinese as orig_caller_type1,'
            ,' v.hangup_disposition_chinese as  hangup_disposition1,'
            ,' y.cti_call_direction_chinese as cti_call_direction1,'
            ,' x.cti_call_direction_chinese as cti_cc_direction1'            
            ,' from report_cdr  c' 
            ,' left join report_cti_call_direction y on c.cti_call_direction = y.cti_call_direction '
            ,' left join report_cti_call_direction x on c.cti_cc_direction = x.cti_call_direction '
            ,'  left join  report_channel_type w on c.orig_caller_type  = w.cti_channel_type  '
            ,'  left join  report_hangup_disposition v on c.hangup_disposition = v.hangup_disposition '
            ,' where cti_cc_direction is not null ');
      
        if @start_dh+@start_dm+@start_ds >0 then
        set sql1=concat(sql1,' and c.duration>=ltrim(@start_dh*3600+@start_dm*60+@start_ds)');
            end if; 
          
            if @stop_dh+@stop_dm+@stop_ds >0 then
        set sql1=concat(sql1,' and c.duration<=ltrim(@stop_dh*3600+@stop_dm*60+@stop_ds)');
            end if; 
            
            
      if @start_bh+@start_bm+@start_bs >0 then
        set sql1=concat(sql1,' and c.answered>=ltrim(@start_bh*3600+@start_bm*60+@start_bs)');
            end if; 
          
            if @stop_bh+@stop_bm+@stop_bs >0 then
        set sql1=concat(sql1,' and c.answered<=ltrim(@stop_bh*3600+@stop_bm*60+@stop_bs)');
            end if; 
            
            
                  
            if @starttime is not null and @starttime<>'' then
        set sql1=concat(sql1,' and date_format(c.creat_time,''%Y-%m-%d'')>=@starttime');
            end if; 
     
     
            if @stoptime is not null and @stoptime<>'' then
        set sql1=concat(sql1,' and date_format(c.creat_time,''%Y-%m-%d'')<=@stoptime');
            end if; 
            
      if @cti_call_direction is not null and @cti_call_direction<>'' then
            set sql1=concat(sql1,' and c.cti_call_direction=@cti_call_direction ');
            end if;
            
          
            
            if @cti_cc_direction is not null and @cti_cc_direction<>'' then
            set sql1=concat(sql1,' and c.cti_cc_direction=@cti_cc_direction ');
            end if;
            
            
            if @orig_caller_number is not null and @orig_caller_number<>'' then
            set sql1=concat(sql1,' and c.orig_caller_number=@orig_caller_number ');
            end if;
            
            if @orig_callee_number is not null and @orig_callee_number<>'' then
            set sql1=concat(sql1,' and c.orig_callee_number=@orig_callee_number ');
      end if;
            
            if @caller_number is not null and @caller_number<>'' then
            set sql1=concat(sql1,' and c.caller_number=@caller_number ');
            end if;
            
            if @callee_number is not null and @callee_number<>'' then
            set sql1=concat(sql1,' and c.callee_number=@callee_number ');
            end if;
            
            if @account_code is not null and @account_code<>'' then
            set sql1=concat(sql1,' and c.account_code=@account_code ');
            end if;
            
            if @hangup_cause is not null and  @hangup_cause<>'' then
            set sql1=concat(sql1,' and c.hangup_cause=@hangup_cause ');
            end if;
            
            if @hangup_disposition is not null and @hangup_disposition<>'' then
            set sql1=concat(sql1,' and c.hangup_disposition=@hangup_disposition ');
            end if;
            
            if @cti_call_uuid is not null and @cti_call_uuid<>'' then
            set sql1=concat(sql1,' and c.cti_call_uuid=@cti_call_uuid ');
            end if;
            
            if @orig_caller_type is not null and @orig_caller_type<>'' then
            set sql1=concat(sql1,' and c.orig_caller_type=@orig_caller_type ');
            end if;
  
            if @cancel_time is not null and @cancel_time<>'' then
            set sql1=concat(sql1,' and c.cancel_time<=@cancel_time ');
            end if;
            
               
            set sql1=concat(sql1,' ) c1
            left join v_report_cti_hangup_cause a
           on a.hangup_cause=c1.hangup_cause ');
  
    set @exesql =sql1; 
 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_report_misscall` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_report_misscall`(
                cti_call_direction varchar(40),
               
                orig_caller_number varchar(40),
                orig_callee_number varchar(40),
                
                hangup_cause varchar(40),
                hangup_disposition varchar(40),
                cti_call_uuid varchar(40),
                orig_caller_type varchar(40),
                starttime varchar(40),
                stoptime varchar(40),
               
              
                start_bh varchar(40),
                start_bm varchar(40),
                start_bs varchar(40),
                stop_bh varchar(40),
                stop_bm varchar(40),
                stop_bs varchar(40)
             
)
begin
  declare sql1 nvarchar(2500);
    set @cti_call_direction=cti_call_direction;
 
    set @orig_caller_number=orig_caller_number;
    set @orig_callee_number=orig_callee_number;
   
    set @hangup_cause=hangup_cause;
    set @hangup_disposition=hangup_disposition;
    set @cti_call_uuid=cti_call_uuid;
    set @orig_caller_type=orig_caller_type;
               
    set @starttime=starttime;
    set @stoptime=stoptime;
   
    set @start_bh=start_bh;
    set @start_bm =start_bm;
    set @start_bs =start_bs;
    set @stop_bh =stop_bh;
    set @stop_bm =stop_bm; 
    set @stop_bs =stop_bs;

        set sql1=concat('select distinct  a.zh_cn,c1.account_code,c1.answered,'
            ,'c1.answered_time,c1.answered1,'
            ,'c1.billsec,c1.billsec1,c1.cancel_time,'
            ,'c1.cti_call_direction,'
            ,'c1.cti_call_uuid,c1.cti_cc_direction,c1.duration,c1.duration1,'
            ,'c1.hangup_cause,c1.hangup_disposition,'
            ,'c1.hangup_disposition1,'
            ,'c1.orig_callee_number,c1.orig_caller_number,'
            ,'c1.orig_caller_type,'
            ,'c1.orig_caller_type1,c1.cti_call_direction1,'
            ,'c1.cti_cc_direction1,c1.creat_time'
            
,'  from (  '
           ,' select distinct  c.account_code,c.answered,'
            ,'c.answered_time,report_number_to_time(c.answered) as answered1,'
            ,'c.billsec,report_number_to_time(c.billsec) as billsec1,c.cancel_time,'
            ,'c.cti_call_direction,'
            ,'c.cti_call_uuid,c.cti_cc_direction,c.duration,report_number_to_time(c.duration) as duration1,'
            ,'c.hangup_cause,c.hangup_disposition,'
            ,'c.hangup_disposition1,'
            ,'c.orig_callee_number,c.orig_caller_number,'
            ,'c.orig_caller_type,'
            ,'c.orig_caller_type1,c.cti_call_direction1,'
            ,'c.cti_cc_direction1,c.creat_time  from  v_report_cdr  c'
            ,' where   c.cti_call_direction is not null and c.cti_cc_direction is not null '
            ,' and c.cti_cc_direction=''inbound'' '
            );
       
   
    
    
          
      if @start_bh+@start_bm+@start_bs >0 then
        set sql1=concat(sql1,' and c.billsec>=ltrim(@start_bh*3600+@start_bm*60+@start_bs)');
            end if; 
          
            if @stop_bh+@stop_bm+@stop_bs >0 then
        set sql1=concat(sql1,' and c.billsec<=ltrim(@stop_bh*3600+@stop_bm*60+@stop_bs)');
            end if; 
            
            
                  
            if @starttime is not null and @starttime<>'' then
        set sql1=concat(sql1,' and date_format(c.creat_time,''%Y-%m-%d'')>=@starttime');
            end if; 
     
     
            if @stoptime is not null and @stoptime<>'' then
        set sql1=concat(sql1,' and date_format(c.creat_time,''%Y-%m-%d'')<=@stoptime');
            end if; 
            
            
            
      if @cti_call_direction is not null and @cti_call_direction<>'' then
            set sql1=concat(sql1,' and c.cti_call_direction=@cti_call_direction ');
            end if;
            
          
  
  
            if @orig_caller_number is not null and @orig_caller_number<>'' then
            set sql1=concat(sql1,' and c.orig_caller_number=@orig_caller_number ');
            end if;
            
            if @orig_callee_number is not null and @orig_callee_number<>'' then
            set sql1=concat(sql1,' and c.orig_callee_number=@orig_callee_number ');
      end if;
            
       
       
            
            if @hangup_cause is not null and  @hangup_cause<>'' then
            set sql1=concat(sql1,' and c.hangup_cause=@hangup_cause ');
            end if;
            
            if @hangup_disposition is not null and @hangup_disposition<>'' then
            set sql1=concat(sql1,' and c.hangup_disposition1=@hangup_disposition ');
            end if;
            
            if @cti_call_uuid is not null and @cti_call_uuid<>'' then
            set sql1=concat(sql1,' and c.cti_call_uuid=@cti_call_uuid ');
            end if;
            
            if @orig_caller_type is not null and @orig_caller_type<>'' then
            set sql1=concat(sql1,' and c.orig_caller_type=@orig_caller_type ');
            end if;
  
            set sql1=concat(sql1,' ) c1
            left join v_report_cti_hangup_cause a
           on a.hangup_cause=c1.hangup_cause ');
  
    set @exesql =sql1; 
 #select sql1;
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_system_cdr` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_system_cdr`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40),
                cti_cc_direction varchar(40),
                orig_caller_type varchar(40)
              
)
begin
  declare sql1 nvarchar(2500);

    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
    set @cti_cc_direction=cti_cc_direction;
    set @orig_caller_type=orig_caller_type;
 

        set sql1=concat('select tjdate1,answered,waitsec,cdr.sucse,'
        ,' round(ifnull(ifnull(SUCSE,0)/ifnull(num,0)*100,0),2) as w ,'
        ,' round(ifnull(ifnull(answered,0)/ifnull(SUCSE,0)*100,0),2) as p,'
        ,' report_number_to_time(round(answered ,0)) as answered1, '
        ,' report_number_to_time(round(answered / sucse,0)) as p1,'
        ,' report_number_to_time(waitsec) as waitsec1 , '
        ,' y.cti_call_direction_chinese as cti_call_direction1, '
        ,' w.cti_channel_type_chinese as orig_caller_type1, '
        ,' case'
        ,' when num is null then 0'
        ,' else num'
        ,' end num1'
        ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;      
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;
     
      if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
     
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,cti_cc_direction,count(id) as num,cdr1.orig_caller_type,'
      ,' sum(cdr1.ANSWERED) as ANSWERED,sum(cdr1.waitsec) as waitsec,'
      ,' count(answered_time) as sucse '
          ,' from(select');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d '')');
         end if;
  
         
        if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(creat_time_30m) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(creat_time_30m,''%Y''),''-0'',cast(week(creat_time_30m) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(creat_time_30m,''%Y''),''-'',cast(week(creat_time_30m) as SIGNED)+1)  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m '')');
         end if;
         
          if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(creat_time_30m,''%Y''),''-'',quarter(creat_time_30m))');      
         end if;
         
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y'')');
         end if;  
          
     set sql1=concat(sql1,' as d1
   ,c.cti_cc_direction as cti_cc_direction ,id as id ,c.ORIG_CALLER_TYPE as ORIG_CALLER_TYPE,
   c.ANSWERED as ANSWERED ,c.WAITSEC as WAITSEC ,c.FIRST_AGENT_TIME as ANSWERED_TIME  
   FROM report_cdr as c
   where 1=1');  
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')<=@endtime');
      end if; 
        
         if @start_h+@start_m+@start_s >0 then
     set sql1=concat(sql1,' and billsec>=ltrim(@start_h*3600+@start_m*60+@start_s)');
     end if; 
          
     if @stop_h+@stop_m+@stop_s >0 then
     set sql1=concat(sql1,' and billsec<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
     end if; 
            
        
        
     if @orig_caller_type is not null and @orig_caller_type <>'' then
     set sql1=concat(sql1,' and c.orig_caller_type=@orig_caller_type ');
     end if;
        
     if @cti_cc_direction is not null and @cti_cc_direction<>'' then
     set sql1=concat(sql1,' and c.cti_cc_direction=@cti_cc_direction ');
     end if;



  set sql1=concat(sql1,'  and c.cti_cc_direction is not null  and c.answered_time is not null
                          and c.CTI_CC_DIRECTION<>''local''  and CTI_CC_DIRECTION = ''inbound ''');
   set sql1=concat(sql1,' union ') ;
   set sql1=concat(sql1,' select ');
        
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d '')');
         end if;
         
          if @times='周' then
       set sql1=concat(sql1,' case  creat_time_30m when( cast(week(creat_time_30m) as SIGNED) <=9) '
        ,' then '
    ,'  concat(date_format(creat_time_30m,''%Y''),''-0'',week(creat_time_30m))   '
        ,' else '
        ,'  concat(date_format(creat_time_30m,''%Y''),''-'',week(creat_time_30m))  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m '')');
         end if;
         
          if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(creat_time_30m,''%Y''),''-'',quarter(creat_time_30m))');      
         end if;
         
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y'')');
         end if;  
   

     set sql1=concat(sql1,' as d1,c.CTI_CC_DIRECTION,id,c.ORIG_CALLER_TYPE,c.ANSWERED'
                          ,' ,c.WAITSEC,c.ANSWERED_TIME'
                          ,' from report_cdr  as c where 1=1');
   
            if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')<=@endtime');
      end if; 
        
         if @start_h+@start_m+@start_s >0 then
     set sql1=concat(sql1,' and billsec>=ltrim(@start_h*3600+@start_m*60+@start_s)');
     end if; 
          
     if @stop_h+@stop_m+@stop_s >0 then
     set sql1=concat(sql1,' and billsec<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
     end if; 
            
        
        
     if @orig_caller_type is not null and @orig_caller_type <>'' then
     set sql1=concat(sql1,' and c.orig_caller_type=@orig_caller_type ');
     end if;
        
     if @cti_cc_direction is not null and @cti_cc_direction<>'' then
     set sql1=concat(sql1,' and c.cti_cc_direction=@cti_cc_direction ');
     end if;



  set sql1=concat(sql1,'  and c.cti_cc_direction is not null 
                          and c.CTI_CC_DIRECTION<>''local''  and CTI_CC_DIRECTION <> ''inbound ''');
   
   
                                
  set sql1=concat(sql1,' )  cdr1'
            ,' group by cti_cc_direction,orig_caller_type,d1'
            ,' )  cdr'
            ,' on tjdate1=cdr.d1'
            
            ,'  left join report_cti_call_direction y on cdr.cti_cc_direction = y.cti_call_direction'
            ,'   left join  report_channel_type w on cdr.orig_caller_type = w.cti_channel_type'
            ,' order by tjdate1,cti_cc_direction ');


    set @exesql =sql1; 

    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_system_cdr_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_system_cdr_back`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40),
                cti_cc_direction varchar(40),
                orig_caller_type varchar(40)
              
)
begin
  declare sql1 nvarchar(2500);

    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
    set @cti_cc_direction=cti_cc_direction;
    set @orig_caller_type=orig_caller_type;
 

        set sql1=concat('select tjdate1,billsec,waitsec,cdr.sucse,(num / sucse)*100 as w,(billsec / sucse) as p,'
          ,'report_number_to_time(billsec) as billsec1'
          ,',report_number_to_time(billsec / sucse) as p1'
          ,',report_number_to_time(waitsec) as waitsec1 ,'
          ,' y.cti_call_direction_chinese as cti_cc_direction1,'
          ,' w.cti_channel_type_chinese as orig_caller_type1,'
          ,' case'
          ,' when num is null then 0'
          ,' else num'
          ,' end num1'
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
   
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;      
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;
    
     
      if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
     
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,cti_cc_direction,count(id) as num,cdr1.orig_caller_type,sum(cdr1.billsec) as billsec,'
          ,'sum(cdr1.waitsec) as waitsec,count(answered_time) as sucse'
          ,' from(select');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d '')');
         end if;

         
         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(creat_time_30m) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(creat_time_30m,''%Y''),''-0'',cast(week(creat_time_30m) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(creat_time_30m,''%Y''),''-'',cast(week(creat_time_30m) as SIGNED)+1)  end ');
         end if;
         
         
        
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m '')');
         end if;
        
         
          if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(creat_time_30m,''%Y''),''-'',quarter(creat_time_30m))');      
         end if;
         
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y'')');
         end if;  
          
     set sql1=concat(sql1,' as d1,c.cti_cc_direction,id,c.orig_caller_type,c.billsec ,c.waitsec,c.answered_time'
                       ' from report_cdr  c where 1=1');  
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')<=@endtime');
      end if; 
        
         if @start_h+@start_m+@start_s >0 then
     set sql1=concat(sql1,' and billsec>=ltrim(@start_h*3600+@start_m*60+@start_s)');
     end if; 
          
     if @stop_h+@stop_m+@stop_s >0 then
     set sql1=concat(sql1,' and billsec<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
     end if; 
            
        
        
     if @orig_caller_type is not null and @orig_caller_type <>'' then
     set sql1=concat(sql1,' and c.orig_caller_type=@orig_caller_type ');
     end if;
        
     if @cti_cc_direction is not null and @cti_cc_direction<>'' then
     set sql1=concat(sql1,' and c.cti_cc_direction=@cti_cc_direction ');
     end if;



  set sql1=concat(sql1,'  and c.cti_call_direction is not null and c.answered_time is not null' );                    
  set sql1=concat(sql1,' )  cdr1'
            ,' group by cti_cc_direction,orig_caller_type,d1'
            ,' )  cdr'
            ,' on tjdate1=cdr.d1'
            
            ,'  left join report_cti_call_direction y on cdr.cti_cc_direction = y.cti_call_direction'
            ,'   left join  report_channel_type w on cdr.orig_caller_type = w.cti_channel_type'
            ,' order by tjdate1,cdr.cti_cc_direction');


    set @exesql =sql1; 
  
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_system_cdr_photo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_cti_system_cdr_photo`(
                times varchar(40) ,
                starttime varchar(40),
                endtime varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40),
                cti_cc_direction varchar(40),
                orig_caller_type varchar(40)
              
)
begin
	declare sql1 nvarchar(2500);
	declare  my_inbound nvarchar(20);
	declare  my_outbound nvarchar(20);
	declare  my_inner nvarchar(20);
	declare  my_local nvarchar(20);
  #  set times='天';
    if times is not null and times<>'' then
         set @times=times;
    else
		set @times='天';
    end if;
    
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
    set @cti_cc_direction=cti_cc_direction;
    set @orig_caller_type=orig_caller_type;
 


	 select CTI_CALL_DIRECTION_CHINESE into my_inbound 
	 from report_cti_call_direction where CTI_CALL_DIRECTION='inbound';
     
      select CTI_CALL_DIRECTION_CHINESE into my_outbound 
	 from report_cti_call_direction where CTI_CALL_DIRECTION='outbound';
     
      select CTI_CALL_DIRECTION_CHINESE into my_inner 
	 from report_cti_call_direction where CTI_CALL_DIRECTION='inner';
     
      select CTI_CALL_DIRECTION_CHINESE into my_local
	 from report_cti_call_direction where CTI_CALL_DIRECTION='local';
     
	set sql1=concat(' select * from ( ');
	set sql1=concat(sql1,'select tjdate1'
	',case' 
	,' when (cti_cc_direction is null or cti_cc_direction='''') then ' ,'''', my_inbound ,''''
	,' when cti_cc_direction=''inbound'' then ', '''',my_inbound ,''''
	,' when cti_cc_direction=''outbound'' then ', '''',my_outbound ,''''
	,' when cti_cc_direction=''inner'' then ', '''',my_inner,''''
	,' when cti_cc_direction=''local'' then ','''', my_local,''''
	,' else cti_cc_direction'
    ,' end  cti_cc_direction1,'
    ,' case'
    ,' when num is null then 0'
    ,' else num'
    ,' end num1'
    ,' from(select distinct' );
    
		 if @times='半小时' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
		 if @times='小时' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
		 if @times='天' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
       #######################################
       if @times='周' then
	     set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
		,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;      
 ###########################################    
		 if @times='月' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;
	#####################
      if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
     ####################
         
		 if @times='年' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
			  
	     set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
		  set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
		  end if; 
     
    
     
		  if @endtime is not null and @endtime<>'' then
		  set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
		  end if; 
    
          set sql1=concat(sql1,' )  d left join ( '
	        ,' select d1,cti_cc_direction,count(id) as num'
	        ,' from(select ');
          
            
            
		 if @times='半小时' then
		 set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H:%i'')');
         end if;
         
		 if @times='小时' then
		 set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H'')');
         end if;
         
		 if @times='天' then
		 set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d '')');
         end if;
        
		####################################
         if @times='周' then
	     set sql1=concat(sql1,' case   when( cast(week(creat_time_30m) as SIGNED)+1 <=9) '
        ,' then '
		,'  concat(date_format(creat_time_30m,''%Y''),''-0'',cast(week(creat_time_30m) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(creat_time_30m,''%Y''),''-'',cast(week(creat_time_30m) as SIGNED)+1)  end ');
         end if;
         ###############################
		 if @times='月' then
		 set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m '')');
         end if;
        
		##############
		if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(creat_time_30m,''%Y''),''-'',quarter(creat_time_30m))');      
         end if;
         ##############
         
		 if @times='年' then
		 set sql1=concat(sql1,' date_format(creat_time_30m,''%Y'')');
         end if;  
          
		  set sql1=concat(sql1,'   as d1,c.cti_cc_direction,id' 
			                    ,' ,c.answered_time'
			                    ,' from report_cdr as c where 1=1' );
		 
         
         if @starttime is not null and @starttime<>'' then
		  set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')>=@starttime');
		  end if; 
     
		  if @endtime is not null and @endtime<>'' then
		  set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')<=@endtime');
		  end if; 
        
         if @start_h+@start_m+@start_s >0 then
		 set sql1=concat(sql1,' and billsec>=ltrim(@start_h*3600+@start_m*60+@start_s)');
		 end if; 
          
		 if @stop_h+@stop_m+@stop_s >0 then
		 set sql1=concat(sql1,' and billsec<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
		 end if; 
            
        
        
		 if @orig_caller_type is not null and @orig_caller_type <>'' then
		 set sql1=concat(sql1,' and c.orig_caller_type=@orig_caller_type ');
		 end if;
        
		 if @cti_cc_direction is not null and @cti_cc_direction<>'' then
		 set sql1=concat(sql1,' and c.cti_cc_direction=@cti_cc_direction ');
		 end if;
		SET sql1=concat(sql1,'  and c.cti_cc_direction is not null '
		,'  and c.cti_cc_direction<>''local'' and c.ANSWERED_TIME is not null');


 set sql1=concat(sql1,' ) as cdr1'
		  ,' group by cti_cc_direction,d1'
  ,' ) as cdr'
  ,' on tjdate1=cdr.d1'
  ,' union
     select null,','''', my_inbound,'''',',0
     union
     select null,', '''',my_outbound ,'''',',0 ) t1'
 ,' order by tjdate1,cti_cc_direction1' );

    set @exesql =sql1; 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_cti_system_cdr_photo_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `p_cti_system_cdr_photo_back`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40),
                cti_cc_direction varchar(40),
                orig_caller_type varchar(40)
              
)
begin
  declare sql1 nvarchar(2500);
  
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
    set @cti_cc_direction=cti_cc_direction;
    set @orig_caller_type=orig_caller_type;
 

  set sql1=concat(' select * from ( ');
  set sql1=concat(sql1,'select tjdate1'
  ',case' 
  ,' when (cti_cc_direction is null or cti_cc_direction='''') then ''呼入'''
  ,' when cti_cc_direction=''inbound'' then ''呼入'''
  ,' when cti_cc_direction=''outbound'' then ''呼出'''
  ,' when cti_cc_direction=''inner'' then ''内呼'''
  ,' when cti_cc_direction=''local'' then ''本地呼叫'''
  ,' else cti_cc_direction'
    ,' end  cti_cc_direction1,'
    ,' case'
    ,' when num is null then 0'
    ,' else num'
    ,' end num1'
    ,' from(select distinct' );
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
       
         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED) <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',week(dat1.tjdate))   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',week(dat1.tjdate))  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;
  
      if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
     
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ( '
          ,' select d1,cti_cc_direction,count(id) as num'
          ,' from(select ');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d '')');
         end if;
        
    
          if @times='周' then
       set sql1=concat(sql1,' case  when( cast(week(creat_time_30m) as SIGNED) <=9) '
         ,' then '
     ,'  concat(date_format(creat_time_30m,''%Y''),''-0'',week(creat_time_30m))   '
         ,' else '
         ,'  concat(date_format(creat_time_30m,''%Y''),''-'',week(creat_time_30m))  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m '')');
         end if;
        
    
    if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(creat_time_30m,''%Y''),''-'',quarter(creat_time_30m))');      
         end if;
         
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y'')');
         end if;  
          
      set sql1=concat(sql1,'   as d1,c.cti_cc_direction,id' 
                          ,' ,c.answered_time'
                          ,' from report_cdr as c where 1=1' );
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')<=@endtime');
      end if; 
        
         if @start_h+@start_m+@start_s >0 then
     set sql1=concat(sql1,' and billsec>=ltrim(@start_h*3600+@start_m*60+@start_s)');
     end if; 
          
     if @stop_h+@stop_m+@stop_s >0 then
     set sql1=concat(sql1,' and billsec<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
     end if; 
            
        
        
     if @orig_caller_type is not null and @orig_caller_type <>'' then
     set sql1=concat(sql1,' and c.orig_caller_type=@orig_caller_type ');
     end if;
        
     if @cti_cc_direction is not null and @cti_cc_direction<>'' then
     set sql1=concat(sql1,' and c.cti_cc_direction=@cti_cc_direction ');
     end if;



 set sql1=concat(sql1,' ) as cdr1'
      ,' group by cti_cc_direction,d1'
  ,' ) as cdr'
  ,' on tjdate1=cdr.d1'
  ,' union
     select null,''呼入'',0
     union
     select null,''呼出'',0)t1'
 ,' order by tjdate1,cti_cc_direction1' );

    set @exesql =sql1; 

    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_fax_count` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_fax_count`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40)
      
              
)
begin
  declare sql1 nvarchar(2500);

    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
 

  
              set sql1=concat('select tjdate1,callee_number, '
             ,' case fax_direction '
             ,'   when ''rxfax'' then ''接收'' '
             ,'   when ''txfax'' then ''发送'' '
             ,'   end as fax_direction '
             ,'  ,num,pages '
             ,'  from(select distinct' );
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
        
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;    
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;
      if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 

      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
    
    
    
     set sql1=concat(sql1,' ) as d left join ( '
       ,'select d1,callee_number,fax_direction,count(id) as num,sum(fax_document_total_pages) as pages '
       ,' from(select');
    
    
     if @times='半小时' then
     set sql1=concat(sql1,' report_time_30m(event_timestamp) ');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(event_timestamp,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(event_timestamp,''%Y-%m-%d '')');
         end if;
        
        if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(event_timestamp) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(event_timestamp,''%Y''),''-0'',cast(week(event_timestamp) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(event_timestamp,''%Y''),''-'',cast(week(event_timestamp) as SIGNED)+1)  end ');
         end if;    
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(event_timestamp,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(event_timestamp,''%Y''),''年'',quarter(event_timestamp),''季度'')');      
         end if;
     if @times='年' then
     set sql1=concat(sql1,' date_format(event_timestamp,''%Y'')');
         end if;
          
    
        
     set sql1=concat(sql1,' as d1,callee_number,fax_direction,id,fax_document_total_pages '
                        ,'  from v_report_cti_fax_files as c '
                        ,'  where  1=1 ');
      
     if @starttime is not null and @starttime<>'' then
     set sql1=concat(sql1,' and  date_format(event_timestamp,''%Y-%m-%d'')>=@starttime');
     end if; 
     
     if @endtime is not null and @endtime<>'' then
     set sql1=concat(sql1,' and  date_format(event_timestamp,''%Y-%m-%d'')<=@endtime');
     end if; 
        
                              
                              
    set sql1=concat(sql1,' ) as cdr1 '
     ,' group by cdr1.d1,callee_number,fax_direction '
         ,' ) as cdr on tjdate1=cdr.d1 order by tjdate1,fax_direction' );
        
     
        

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_ivr_count` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_ivr_count`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40)
      
              
)
begin
  declare sql1 nvarchar(2500);
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
 
     set sql1=concat('select tjdate1,report_number_to_time(sumbillsec) as sumbillsec1'
         ,' ,report_number_to_time(sumbillsec/num1) as avgbillsec1,num1,sumbillsec,sumbillsec/num1 as avgbillsec ' 
         , ' from (select distinct( ');
          if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
        
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;      
 
         
                                                                        
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;
        
       if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
        
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
      
            
         set sql1=concat(sql1,') as tjdate1 from report_date as dat1 where 1=1 ');   
            
            

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 

      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
    
           set sql1=concat(sql1,' ) as d left join ( '
          ,' select d1,count(id) as num1,sum(billsec) as sumbillsec '
        ,' from(select ' );
    
          if @times='半小时' then
     set sql1=concat(sql1,' report_time_30m(start_time) ');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d '')');
         end if;
         
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(start_time) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(start_time,''%Y''),''-0'',cast(week(start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(start_time,''%Y''),''-'',cast(week(start_time) as SIGNED)+1)  end ');
         end if;      
 
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m '')');
         end if;
        
    if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(start_time,''%Y''),''年'',quarter(start_time),''季度'')');      
         end if;
     if @times='年' then
     set sql1=concat(sql1,' date_format(start_time,''%Y'')');
         end if;
          
    
        
    set sql1=concat(sql1,' as d1,id,timestampdiff(second,start_time,complete_time) as billsec '
        ,' from v_report_cti_channel_execute as c where  APPLICATION=''ivr'' ' );
      
     if @starttime is not null and @starttime<>'' then
     set sql1=concat(sql1,' and  date_format(start_time,''%Y-%m-%d'')>=@starttime');
     end if; 
     
     if @endtime is not null and @endtime<>'' then
     set sql1=concat(sql1,' and  date_format(start_time,''%Y-%m-%d'')<=@endtime');
     end if; 
                                
    set sql1=concat(sql1,' ) as cdr1 group by d1 having 1=1');
        
    if @start_h+@start_m+@start_s >0 then
    set sql1=concat(sql1,' and sum(billsec)>=ltrim(@start_h*3600+@start_m*60+@start_s)');
        end if; 
        if @stop_h+@stop_m+@stop_s >0 then
    set sql1=concat(sql1,' and sum(billsec)<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
        end if; 
        
        set sql1=concat(sql1,'  ) as cdr on tjdate1=cdr.d1 order by tjdate1');
        
    
      
     

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_acddata` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_acddata`()
begin
    declare start_id int default 0;
    declare end_id int;
    declare _err int default 0;
    declare continue handler for sqlexception set _err=1;
    
    set sql_safe_updates = 0;
    
    update cti_agent_session 
    set login_timestamp_30m=report_time_30m(login_timestamp)
    where cti_agent_session.login_timestamp_30m is null;

    set _err=0;
    select ifnull(succedid,0)+1 into start_id from report_plan_acd where type='update_queueinfo';
    select ifnull(max(c.id),0) into end_id from cti_acd_event c;
   
    label_p1:loop
        if (end_id<start_id) then
           leave label_p1;     
        end if;
        
		if (_err=1) then
		  leave label_p1;
		end if;
        
        start transaction; 
    label_p2:loop
      insert into report_queue(member_uuid,queue)
      select c.member_uuid,c.queue
      from 
      (
		  select distinct c.member_uuid,c.queue
		  from v_report_cti_acd_event c 
		  where c.member_uuid is not null 
		  and id>=start_id
		  and id<=end_id
      ) as c 
      left join report_queue r 
      on c.member_uuid=r.member_uuid 
      where r.member_uuid is null;
            
      if (_err=1) then
        leave label_p2;
      end if;
         

      update report_queue q 
      inner join 
      (
			select max(c1.event_timestamp) event_timestamp,c1.cti_call_uuid,c1.member_channel_uuid,c1.member_uuid
			from v_report_cti_acd_event c1
			where c1.action='member-queue-start'
			and c1.id>=start_id
			and c1.id<=end_id                
			group by c1.member_uuid
	  ) c
      on q.member_uuid=c.member_uuid
      set q.start_time=c.event_timestamp ,q.is_bridge_agent=0
      ,q.cti_call_uuid=c.cti_call_uuid,q.channel_uuid=c.member_channel_uuid;

      if (_err=1) then
        leave label_p2;
      end if;            

      update report_queue q
      inner join 
      (
			select max(c1.event_timestamp) event_timestamp,c1.member_uuid
			,c1.cancel_cause
			from cti_acd_event c1
			where c1.action='member-queue-end'
			and c1.id>=start_id
			and c1.id<=end_id                
			group by c1.member_uuid
	  ) c
      on c.member_uuid=q.member_uuid        
      set q.cancel_time=event_timestamp,q.cancel_cause=c.cancel_cause;
          
      if (_err=1) then
        leave label_p2;
      end if;

      update report_queue q 
      inner join 
      (
			select max(c1.event_timestamp) event_timestamp,c1.agent_session_uuid
			,c1.agent_channel_uuid,c1.member_uuid,c1.agent_id
			from v_report_cti_acd_event c1
			where c1.action='bridge-agent-start'
			and c1.id>=start_id
			and c1.id<=end_id                
			group by c1.member_uuid
	  ) c
      on c.member_uuid=q.member_uuid
      set q.agent_id=c.agent_id, q.bridge_agent_time=event_timestamp,
	  q.cancel_time=event_timestamp
      ,q.is_bridge_agent=1
      ,q.agent_session_id=c.agent_session_uuid ,q.agent_channel_uuid=c.agent_channel_uuid;


      if (_err=1) then
        leave label_p2;
      end if;
    
      update report_queue a 
      set a.duration=timestampdiff(second,a.start_time,a.cancel_time), a.duration1=report_number_to_time(timestampdiff(second,a.start_time,a.cancel_time))   
      where a.duration1 is null;

      if (_err=1) then
        leave label_p2;
      end if;

	  update report_queue q
      inner join 
      (
			select max(c1.created_time) created_time,c1.channel_name,c1.cti_channel_type
			,c1.call_direction,c1.cti_call_direction,c1.cti_cc_direction
			,c1.orig_caller_number,c1.orig_callee_number,c1.caller_number
			,c1.callee_number,c1.channel_uuid
			from v_report_cti_channel c1
			group by c1.channel_uuid
	  )c
      on c.channel_uuid=q.channel_uuid
      and q.channel_name is null
      set q.channel_name=c.channel_name      
          ,q.channel_type=c.cti_channel_type
          ,q.direction=c.call_direction
          ,q.cti_call_direction=c.cti_call_direction
          ,q.cti_cc_direction=c.cti_cc_direction
          ,q.orig_caller_number=c.orig_caller_number
          ,q.orig_callee_number=c.orig_callee_number
          ,q.caller_number=c.caller_number
          ,q.callee_number=c.callee_number;
        
      if (_err=1) then
        leave label_p2;
      end if;

      update report_queue q
      inner join 
      (
			select c1.agent_session_id,c1.agent_name,c1.org_id,
			max(c1.login_timestamp)
			from v_report_cti_agent_session c1
			group by c1.agent_session_id
	  ) s 
      on q.agent_session_id=s.agent_session_id 
      and q.org_id is null
      set q.agent_name=s.agent_name,q.org_id=s.org_id;    
      
      
      if (_err=1) then
        leave label_p2;
      end if;    
  
            update report_plan_acd 
            set succedtime=current_timestamp,startid=start_id,succedid=end_id
            ,starttime=current_timestamp
            where type='update_queueinfo';

      if (_err=1) then
        leave label_p2;
      end if;    
            
      select 'commit';
      commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;
        
    end loop label_p1;
  select 'end p_load_acddata';
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_acddata_bak20150423` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_acddata_bak20150423`()
begin
    declare start_id int default 0;
    declare end_id int;
	declare _err int default 0;
	declare continue handler for sqlexception set _err=1;
    
    set sql_safe_updates = 0;
    
	update cti_agent_session 
	set login_timestamp_30m=report_time_30m(login_timestamp)
	where cti_agent_session.login_timestamp_30m is null;


    select '1 update cti_agent_session success';
    set _err=0;
    select ifnull(succedid,0)+1 into start_id from report_plan_acd where type='update_queueinfo';
    select ifnull(max(c.id),0) into end_id from cti_acd_event c;
    select concat('start_id=',start_id);
    select concat('end_id=',end_id);
    update report_plan_acd set starttime=current_timestamp,startid=start_id,succedid=end_id;
    label_p1:loop
    
        if (end_id<start_id) then
			select '1leave label_p1';
			leave label_p1;			
        end if;
        
		if (_err=1) then
			select '2leave label_p1';
			leave label_p1;
		end if;
        
        start transaction; 
        select 'start transaction';
        
		label_p2:loop
#??report_plan_acd??????????update_queueinfo??????
#startid??succedid????????????????????????????
#??????report_queue????member_uuid????????     #################
			insert into report_queue(member_uuid,queue)
			select c.member_uuid,c.queue
			from 
			(
			select distinct c.member_uuid,c.queue
			from v_report_cti_acd_event c 
			where c.member_uuid is not null 
            and id>=start_id
			and id<=end_id
			) as c 
			left join report_queue r 
			on c.member_uuid=r.member_uuid 
			where r.member_uuid is null;
            
			if (_err=1) then
                select '2 leave insert';
				leave label_p2;
			end if;
            select '2??1 insert success';
  /*????????????????????start_time    */     ################## 
			update report_queue q 
			inner join (
				select max(c1.event_timestamp) event_timestamp,c1.cti_call_uuid,c1.member_channel_uuid,c1.member_uuid
                from v_report_cti_acd_event c1
				where c1.action='member-queue-start'
				and c1.id>=start_id
				and c1.id<=end_id                
                group by c1.member_uuid
            ) c
			on q.member_uuid=c.member_uuid
			set q.start_time=c.event_timestamp ,q.is_bridge_agent=0
			,q.cti_call_uuid=c.cti_call_uuid,q.channel_uuid=c.member_channel_uuid;

			if (_err=1) then
				select '3 leave update';
				leave label_p2;
			end if;            
            select '3??1 update success';
            
  /*????????????????cancel_time    */      #####
			update report_queue q
			inner join (
				select max(c1.event_timestamp) event_timestamp,c1.member_uuid
                ,c1.cancel_cause
                from v_report_cti_acd_event c1
				where c1.action='member-queue-end'
				and c1.id>=start_id
				and c1.id<=end_id                
                group by c1.member_uuid
            ) c
			on c.member_uuid=q.member_uuid        
			set q.cancel_time=event_timestamp,q.cancel_cause=c.cancel_cause;
          
			if (_err=1) then
				select '4 leave update';
				leave label_p2;
			end if;
            select '4??1 update success';
  
  /*??????????????????bridge_agent_time */    ##############
			update report_queue q 
			inner join (
				select max(c1.event_timestamp) event_timestamp,c1.agent_session_uuid
                ,c1.agent_channel_uuid,c1.member_uuid,c1.agent_id
                from v_report_cti_acd_event c1
				where c1.action='bridge-agent-start'
				and c1.id>=start_id
				and c1.id<=end_id                
                group by c1.member_uuid
            ) c
			on c.member_uuid=q.member_uuid
			set q.agent_id=c.agent_id, q.bridge_agent_time=event_timestamp,
            q.cancel_time=event_timestamp
			,q.is_bridge_agent=1
			,q.agent_session_id=c.agent_session_uuid ,q.agent_channel_uuid=c.agent_channel_uuid;


			if (_err=1) then
				select '5 leave update';
				leave label_p2;
			end if;
            select '5??1 update success';            
    /*        
			update report_queue a 
			set a.duration=timestampdiff(second,a.start_time,a.bridge_agent_time) 
			where a.bridge_agent_time is not null 
			and a.start_time is not null 
			and a.direction is null;

			if (_err=1) then
				select '6 leave update';
				leave label_p2;
			end if;
            select '6??1 update success';
            
			update report_queue a 
			set a.duration=timestampdiff(second,a.start_time,a.cancel_time) 
			where a.cancel_time is not null
			and a.start_time is not null 
			and a.bridge_agent_time is null
			and a.duration is null;

			if (_err=1) then
				select '7 leave update';
				leave label_p2;
			end if;
            select '7??1 update success';
            */
            /*????????????????*/ ##########
			update report_queue a 
			set a.duration=timestampdiff(second,a.start_time,a.cancel_time), a.duration1=sec_to_time(timestampdiff(second,a.start_time,a.cancel_time))   
			where a.duration1 is null;

			if (_err=1) then
				select '8 leave update';
				leave label_p2;
			end if;
            select '8??1 update success';
 /*????????????   */      ##############
					update report_queue q
			inner join (
				select max(c1.created_time) created_time,c1.channel_name,c1.cti_channel_type
                ,c1.call_direction,c1.cti_call_direction,c1.cti_cc_direction
                ,c1.orig_caller_number,c1.orig_callee_number,c1.caller_number
                ,c1.callee_number,c1.channel_uuid
                from v_report_cti_channel c1
                group by c1.channel_uuid
            )c
			on c.channel_uuid=q.channel_uuid
			and q.channel_name is null
			set q.channel_name=c.channel_name      
				  ,q.channel_type=c.cti_channel_type
				  ,q.direction=c.call_direction
				  ,q.cti_call_direction=c.cti_call_direction
				  ,q.cti_cc_direction=c.cti_cc_direction
				  ,q.orig_caller_number=c.orig_caller_number
				  ,q.orig_callee_number=c.orig_callee_number
				  ,q.caller_number=c.caller_number
				  ,q.callee_number=c.callee_number;
				
			if (_err=1) then
				select '9 leave update';
				leave label_p2;
			end if;
            select '9??1 update success';
     /*????????????     */  ##################
			update report_queue q
			inner join (
				select c1.agent_session_id,c1.agent_name,c1.org_id,
                max(c1.login_timestamp)
                from v_report_cti_agent_session c1
                group by c1.agent_session_id
            ) s 
			on q.agent_session_id=s.agent_session_id 
			and q.org_id is null
			set q.agent_name=s.agent_name,q.org_id=s.org_id;    
			
			
			if (_err=1) then
				select '10 leave update';
				leave label_p2;
			end if;    
            select '10??1 update success';
            
            update report_plan_acd 
            set succedtime=current_timestamp,startid=start_id,succedid=end_id
			where type='update_queueinfo';

			if (_err=1) then
				select '11 leave update';
				leave label_p2;
			end if;    
            select '11??1 update success';
            
			select 'commit';
			commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;
        
    end loop label_p1;
	select 'end p_load_acddata';
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_acddata_test` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_acddata_test`()
begin
    declare start_id int default 0;
    declare end_id int;
    declare start_timestamp datetime;
	declare stop_timestamp datetime;
    
    set sql_safe_updates = 0;   
	select str_to_date(date_format(now(),'%Y-%m-%d'),'%Y-%m-%d') into  stop_timestamp from dual  ;
    select  str_to_date(date_sub(date_format(now(),'%Y-%m-%d'),interval 1 day),'%Y-%m-%d') into start_timestamp from dual  ;
    select ifnull(succedid,0)+1 into start_id from report_plan_acd where type='update_queueinfo';
    select ifnull(max(c.id),0) into end_id from cti_acd_event c;
   
    
    
   if (end_id>start_id) then
   #更新记录表
   update report_plan_acd set starttime=current_timestamp,startid=start_id,succedid=end_id;

            
    insert into report_queue
    (
    member_uuid,
    queue,
    start_time,
    cti_call_uuid,
    channel_uuid,
    is_bridge_agent
    )
	select
    c.member_uuid,
    c.queue,
    d.event_timestamp,
    d.cti_call_uuid,
    d.member_channel_uuid,
    d.is_bridge_agent
    from
    (
        select distinct c.member_uuid,c.queue
        from cti_acd_event c
        where c.member_uuid is not null
              and id>=start_id
              and id<=end_id
    )  c
    left join    
    (
                  
		select max(c1.event_timestamp) event_timestamp,c1.cti_call_uuid,c1.member_channel_uuid,
        0 as is_bridge_agent,c1.member_uuid
		from cti_acd_event c1
		where c1.action='member-queue-start'
		and c1.id>=start_id
		and c1.id<=end_id                
		group by c1.member_uuid
    ) d on (c.member_uuid=d.member_uuid);

  commit;
            
#-----更新退出时间字段cancel_time
			update report_queue q
			inner join (
				select max(c1.event_timestamp) event_timestamp,c1.member_uuid
                ,c1.cancel_cause
                from cti_acd_event c1
				where c1.action='member-queue-end'
                and cancel_cause is null
                and event_timestamp >=start_timestamp
                and event_timestamp <=stop_timestamp
                group by c1.member_uuid
            ) c
			on c.member_uuid=q.member_uuid        
			set q.cancel_time=event_timestamp,q.cancel_cause=c.cancel_cause;
          
  
#-----更新转坐席时间字段bridge_agent_time
			update report_queue q 
			inner join (
				select max(c1.event_timestamp) event_timestamp,c1.agent_session_uuid
                ,c1.agent_channel_uuid,c1.member_uuid,c1.agent_id
                from cti_acd_event c1
				where c1.action='bridge-agent-start'
				and event_timestamp >=start_timestamp
                and event_timestamp <=stop_timestamp          
                group by c1.member_uuid
            ) c
			on c.member_uuid=q.member_uuid
			set q.agent_id=c.agent_id, q.bridge_agent_time=event_timestamp,
            q.cancel_time=event_timestamp
			,q.is_bridge_agent=1
			,q.agent_session_id=c.agent_session_uuid ,q.agent_channel_uuid=c.agent_channel_uuid;

#-------更新中文排队时间
			update report_queue a 
			set a.duration=timestampdiff(second,a.start_time,a.cancel_time), a.duration1=report_number_to_time(timestampdiff(second,a.start_time,a.cancel_time))   
			where a.duration1 is null;

#-------更新通道信息
		    update report_queue q
			inner join (
				select max(c1.created_time) created_time,c1.channel_name,c1.cti_channel_type
                ,c1.call_direction,c1.cti_call_direction,c1.cti_cc_direction
                ,c1.orig_caller_number,c1.orig_callee_number,c1.caller_number
                ,c1.callee_number,c1.channel_uuid
                from cti_channel c1
                where 1=1
                and created_time >=start_timestamp
                and created_time <=stop_timestamp   
                group by c1.channel_uuid
            )c
			on c.channel_uuid=q.channel_uuid
			and q.channel_name is null
			set q.channel_name=c.channel_name      
				  ,q.channel_type=c.cti_channel_type
				  ,q.direction=c.call_direction
				  ,q.cti_call_direction=c.cti_call_direction
				  ,q.cti_cc_direction=c.cti_cc_direction
				  ,q.orig_caller_number=c.orig_caller_number
				  ,q.orig_callee_number=c.orig_callee_number
				  ,q.caller_number=c.caller_number
				  ,q.callee_number=c.callee_number;
		commit;		
#-------更新座席信息------
			update report_queue q
			inner join (
				select c1.agent_session_id,c1.agent_name,c1.org_id,
                max(c1.login_timestamp)
                from cti_agent_session c1
                where 1=1
                and login_timestamp >=start_timestamp
                and login_timestamp <=stop_timestamp   
                group by c1.agent_session_id
            ) s 
			on q.agent_session_id=s.agent_session_id 
			and q.org_id is null
			set q.agent_name=s.agent_name,q.org_id=s.org_id;    
			
			
            update report_plan_acd 
            set succedtime=current_timestamp,startid=start_id,succedid=end_id
			where type='update_queueinfo';


			commit;
	 end if;
  
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_agent_services_data` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_agent_services_data`()
begin
    declare start_id int default 0;
    declare end_id int;
  declare _err int default 0;
  declare continue handler for sqlexception set _err=1;

    set sql_safe_updates = 0;    
    
    select '1 update cti_agent_session success';
    set _err=0;
    select ifnull(succedid,0)+1 into start_id from report_plan_agentservices where type='update_report_agent_services';
    select ifnull(max(c.id),0) into end_id from cti_agent_state c;
    select concat('start_id=',start_id);
    select concat('end_id=',end_id);    
    

    
    label_p1:loop
    
        if (end_id<start_id) then
      select '1leave label_p1';
      leave label_p1;     
        end if;
        
    if (_err=1) then
      select '2leave label_p1';
      leave label_p1;
    end if;   
        
        start transaction; 
        select 'start transaction';   
    label_p2:loop  
        
  update report_plan_agentservices set starttime=current_timestamp(),
    startid=start_id,succedid=end_id
    where type='update_report_agent_services';
    

    
    
          if (_err=1) then
                select '2 leave update';
        leave label_p2;
      end if;
            select '2—111111 insert update success';
            
        
        
    insert into report_agent_services(agent_id,agent_session_id
    ,channel_uuid,cti_call_uuid
    ,orig_caller_number,orig_callee_number,caller_number,callee_number
    ,cancel_cause,cancel
    ,start_time,toagent_time,cancel_time,duration,answer)
    select at.agent_id,at.agent_session_id,at.channel_uuid
    ,at.cti_call_uuid
    ,at.orig_caller_number,at.orig_callee_number,at.caller_number,at.callee_number
    ,at.hangup_cause,at.hangup_disposition
    ,at.created_time,at.answered_time,at.hangup_time
    ,at.duration,at.answersec
    from (
    select distinct s.agent_id,s.agent_session_id,s.channel_uuid
    ,c.cti_call_uuid,c.cti_call_direction,c.cti_cc_direction
    ,c.orig_caller_number,c.orig_callee_number,c.caller_number,c.callee_number
    ,c.hangup_cause,c.hangup_disposition
    ,c.created_time,c.answered_time,c.hangup_time
    ,c.duration,c.answersec
    from v_report_cti_agent_state as s,v_report_cti_channel as c
    where s.channel_uuid is not null
    and s.other_leg_uuid=c.channel_uuid
    and s.id>=start_id
    and s.id<=end_id
    ) as at left join report_agent_services as ras
    on at.channel_uuid=ras.channel_uuid
    where ras.channel_uuid is null;

      if (_err=1) then
                select '2 leave insert';
        leave label_p2;
      end if;
            select '2—1 insert success';
            
   
   
    update report_agent_services as s 
    inner join  v_report_cti_channel as c    
    on s.cti_call_uuid=c.cti_call_uuid   
    and s.cti_call_direction is null  
        and c.is_originator=1
       
    set s.cti_call_direction=c.cti_call_direction,   
    s.cti_cc_direction=c.cti_cc_direction;

      if (_err=1) then
        select '3 leave update';
        leave label_p2;
      end if;            
            select '3—1 update success';            
        
  update report_agent_services as a
    inner join 
        (
      select c1.new_state_name,c1.channel_uuid,max(c1.entry_timestamp) as rn
        from v_report_cti_agent_state c1
            where 
        (c1.new_state_name='st_in_inner_call'
      or c1.new_state_name='st_inserting'
      or c1.new_state_name='st_eavadroping'
      or c1.new_state_name='st_in_queue_call'
      or c1.new_state_name='st_in_inbound_call'
        or c1.new_state_name='st_in_outbound_call'
      or c1.new_state_name='st_consulting'
            or c1.new_state_name='st_intercepting'
            or (c1.NEW_STATE_NAME='st_waiting' and c1.OLD_STATE_NAME='st_offering') 
            )
        
      group by c1.channel_uuid
    ) s on a.channel_uuid=s.channel_uuid
      and a.services_type is null
    set  a.services_type=case
    when s.new_state_name='st_in_inner_call' then '内呼'
    when s.new_state_name='st_inserting' then '强插'
    when s.new_state_name='st_eavadroping' then '监听'
    when s.new_state_name='st_in_queue_call' then '呼入'
    when s.new_state_name='st_in_inbound_call' then '直拨呼入'
    when s.new_state_name='st_in_outbound_call' then '呼出'
        when s.new_state_name='st_consulting' then '咨询'
    when s.new_state_name='st_intercepting' then '强拦'
        when s.new_state_name='st_waiting' then '未接'
        end ;
      if (_err=1) then
        select '4 leave update';
        leave label_p2;
      end if;            
            select '4 update success';    
    
        update report_agent_services as a
    inner join 
        (
      select s1.channel_uuid,max(s1.entry_timestamp) as entry_timestamp,s1.duration,s1.exit_timestamp
      from v_report_cti_agent_state as s1
      where s1.new_state_name='st_post_call'
      group by s1.channel_uuid
    )as s on s.channel_uuid=a.channel_uuid
    and a.post_call_time is null
    set post_call_time=s.entry_timestamp
    ,post_call=s.duration 
    ,end_time=s.exit_timestamp
    ,services=timestampdiff(second,a.toagent_time,s.exit_timestamp)
    ,total=timestampdiff(second,a.start_time,s.exit_timestamp)
    ,wait=timestampdiff(second,a.start_time,a.toagent_time) ;
      if (_err=1) then
        select '5 leave update';
        leave label_p2;
      end if;            
            select '5 update success';
    
    update report_agent_services as a
    set a.end_time=a.cancel_time
    ,services=timestampdiff(second,a.toagent_time,a.cancel_time)
    ,total=timestampdiff(second,a.start_time,a.cancel_time)
    ,wait=timestampdiff(second,a.start_time,a.toagent_time)
    where a.post_call_time is null and a.services is null;
        
      if (_err=1) then
        select '6 leave update';
        leave label_p2;
      end if;            
            select '6 update success';            

    
    update report_agent_services as a
    inner join 
        (
      select c1.agent_ext,c1.agent_name,c1.org_id,c1.agent_id,c1.agent_session_id,
            max(c1.login_timestamp)as login_timestamp
      from v_report_cti_agent_session c1
      group by c1.agent_id,c1.agent_session_id
    )as cas on a.agent_id=cas.agent_id and 
    a.agent_session_id=cas.agent_session_id 
    and a.AGENT_NAME is null
    set a.agent_ext=cas.agent_ext,a.agent_name=cas.agent_name
    ,a.org_id=cas.org_id;
        
         if (_err=1) then
        select '7 leave update';
        leave label_p2;
      end if;            
            select '7 update success';  
 

update report_agent_services a set a.CREAT_TIME_30M=REPORT_TIME_30M(a.START_TIME)

where a.CREAT_TIME_30M is null;
          
      if (_err=1) then
        select '90 leave 更新CREAT_TIME_30M';
        leave label_p2;
      end if;            
            select '90 update success更新CREAT_TIME_30M';  
                  
          
      
    update report_plan_agentservices set succedtime=current_timestamp 
    where type='update_report_agent_services';
            
      if (_err=1) then
        select '9 leave update';
        leave label_p2;
      end if;            
            select '9 update success';  
            
    
      select 'commit';
      commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;        
        
    end loop label_p1;
  select 'end report_agent_services';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_LOAD_CALLEVERDAYCOLLECT` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_LOAD_CALLEVERDAYCOLLECT`()
BEGIN
    DECLARE start_time DATETIME;
    DECLARE succed_time DATETIME;
  DECLARE _err int default 0;
  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION set _err=1;
    SET SQL_SAFE_UPDATES = 0;    
    
    SELECT '1 UPDATE CTI_AGENT_SESSION success';
    set _err=0;
    select SUCCEDTIME into start_time FROM report_plan_calleverdaycollect WHERE TYPE='UPDATE_CALLEVERDAYCOLLECT';
  set succed_time=REPORT_TIME_30M(now());
    set start_time=REPORT_TIME_30M(start_time);
  
  
    label_p1:loop
    
    delete from report_calleverdaycollect 
       where TJDATE>=start_time
      and TJDATE<succed_time;
        
    if (_err=1) then
      SELECT '1 LEAVE label_p1';
      LEAVE label_p1;
    end if;   
        select 'delete report_cti_general_kpi success';
        
        START TRANSACTION; 
        SELECT 'START TRANSACTION';   
    label_p2:loop   

 

    insert into report_calleverdaycollect(tjdate,ACCESSCODE,org_id,CTI_CALL_DIRECTION,
         CTI_CC_DIRECTION,ORIG_CALLER_TYPE,org_name
          )
    select REPORT_TIME_30M(c.creat_time), ra.ACCESSCODE_DISPLAY, c.org_id 
    ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ts.name
    from report_cdr c
    left join report_accesscode ra on 
    c.ORIG_CALLEE_NUMBER=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
        LEFT JOIN t_sys_organization ts on c.org_id=ts.domain
    where c.CTI_CALL_DIRECTION='inbound'
    and CREAT_TIME >= start_time and CREAT_TIME < succed_time
    GROUP BY REPORT_TIME_30M(c.creat_time), ra.ACCESSCODE_DISPLAY, c.org_id 
    ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE;
      if (_err=1) then
                SELECT '1 LEAVE insert';
        LEAVE label_p2;
      end if;
            SELECT '1 insert success';


    insert into report_calleverdaycollect
        (tjdate,ACCESSCODE,org_id,CTI_CALL_DIRECTION,
         CTI_CC_DIRECTION,ORIG_CALLER_TYPE,org_name)
    select REPORT_TIME_30M(c.creat_time), ra.ACCESSCODE_DISPLAY, c.org_id 
    ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ts.name
    from report_cdr c
    left join report_accesscode ra on 
    left(c.ORIG_CALLEE_NUMBER,1)=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
        LEFT JOIN t_sys_organization ts on c.org_id=ts.domain
    where c.CTI_CALL_DIRECTION='outbound'
    and CREAT_TIME >= start_time and CREAT_TIME < succed_time
    GROUP BY REPORT_TIME_30M(c.creat_time), ra.ACCESSCODE_DISPLAY, c.org_id 
    ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE;
        if (_err=1) then
                SELECT '2 LEAVE insert';
        LEAVE label_p2;
      end if;
            SELECT '2 insert success';


    insert into report_calleverdaycollect(tjdate,org_id,CTI_CALL_DIRECTION,
    CTI_CC_DIRECTION,ORIG_CALLER_TYPE,org_name
    )
    select REPORT_TIME_30M(c.creat_time),  c.org_id 
    ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE
        ,ts.name
    from report_cdr c
        LEFT JOIN t_sys_organization ts on c.org_id=ts.domain
    where c.CTI_CALL_DIRECTION='local'
    and CREAT_TIME >= start_time and CREAT_TIME < succed_time
    GROUP BY REPORT_TIME_30M(c.creat_time),c.org_id 
    ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE;
         if (_err=1) then
                SELECT '3 LEAVE insert';
        LEAVE label_p2;
      end if;
            SELECT '3 insert success';

      update report_calleverdaycollect q
    inner join
    (
      select count(*) as hjl,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE
            from report_cdr c
        left join report_accesscode ra on 
        c.ORIG_CALLEE_NUMBER=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
        where c.CTI_CALL_DIRECTION='inbound'
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
    and a.CTI_CALL_DIRECTION='inbound'
    set q.CALLCOUNT=a.hjl; 
          if (_err=1) then
                SELECT '4 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '4 update success';

  update report_calleverdaycollect q
    inner join
    (
      select count(*) as hjl,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE
            from report_cdr c
        left join report_accesscode ra on 
           left(c.ORIG_CALLEE_NUMBER,1)=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
           where c.CTI_CALL_DIRECTION='outbound'
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='outbound'
    set q.CALLCOUNT=a.hjl; 
         if (_err=1) then
                SELECT '5 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '5 update success';

       update report_calleverdaycollect q
    inner join
    (
      select count(*) as hjl,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE
            from report_cdr c
            where c.CTI_CALL_DIRECTION='local'
            
            )cc
      where 1=1
        
      group by REPORT_TIME_30M(creat_time),org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='local'
    set q.CALLCOUNT=a.hjl; 
         if (_err=1) then
                SELECT '6 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '6 update success';

     update report_calleverdaycollect q
    inner join
    (
      select count(*) as jtl,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED
            from report_cdr c
        left join report_accesscode ra on 
        c.ORIG_CALLEE_NUMBER=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
        where c.CTI_CALL_DIRECTION='inbound'
        
            )cc
      where 1=1 
            and  cc.ANSWERED IS not NULL
        
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        AND A.CTI_CALL_DIRECTION='inbound'
    set q.TURNCOUNT=a.JTL; 
         if (_err=1) then
                SELECT '7 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '7 update success';

    update report_calleverdaycollect q
    inner join
    (
      select count(*) as jtl,REPORT_TIME_30M(creat_time) as  CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED
            from report_cdr c
        left join report_accesscode ra on 
           left(c.ORIG_CALLEE_NUMBER,1)=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
           where c.CTI_CALL_DIRECTION='outbound'
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
            and  cc.ANSWERED IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='outbound'
    set q.TURNCOUNT=a.jtl; 
           if (_err=1) then
                SELECT '8 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '8 update success';

   update report_calleverdaycollect q
    inner join
    (
      select count(*) as jtl,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE
                ,c.ANSWERED
            from report_cdr c
            where c.CTI_CALL_DIRECTION='local'
            and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
            and cc.ANSWERED IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='local'
    set q.TURNCOUNT=a.jtl; 
         if (_err=1) then
                SELECT '9 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '9 update success';

        update report_calleverdaycollect q
    inner join
    (
      select sum(answered) as thsc,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED
            from report_cdr c
        left join report_accesscode ra on 
        c.ORIG_CALLEE_NUMBER=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
        where c.CTI_CALL_DIRECTION='inbound'
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1 
            and  cc.ANSWERED IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        AND A.CTI_CALL_DIRECTION='inbound'
    set q.ANSWERED=a.thsc; 
         if (_err=1) then
                SELECT '10 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '10 update success';

       update report_calleverdaycollect q
    inner join
    (
      select sum(ANSWERED) thsc,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED
            from report_cdr c
        left join report_accesscode ra on 
           left(c.ORIG_CALLEE_NUMBER,1)=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
           where c.CTI_CALL_DIRECTION='outbound'
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
            and  cc.ANSWERED IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='outbound'
    set q.ANSWERED=a.thsc; 
         if (_err=1) then
                SELECT '11 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '11 update success';

 update report_calleverdaycollect q
    inner join
    (
      select sum(ANSWERED) as thsc,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select c.CREAT_TIME, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE
                ,c.ANSWERED
            from report_cdr c
            where c.CTI_CALL_DIRECTION='local'
            and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
            and cc.ANSWERED IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='local'
    set q.ANSWERED=a.thsc; 
         if (_err=1) then
                SELECT '12 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '12 update success';

       update report_calleverdaycollect q
    inner join
    (
      select sum(QUEUE_TIME) as pdsc,sum(QUEUE_COUNT) as pdcs,
            REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED,
                QUEUE_COUNT , QUEUE_TIME
            from report_cdr c
        left join report_accesscode ra on 
        c.ORIG_CALLEE_NUMBER=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
        where c.CTI_CALL_DIRECTION='inbound'
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1 
            and  cc.QUEUE_COUNT IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        AND A.CTI_CALL_DIRECTION='inbound'
    set q.QUEUECOUNT=a.pdcs,q.QUEUETIME=a.pdsc; 
         if (_err=1) then
                SELECT '13 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '13 update success';

    update report_calleverdaycollect q
    inner join
    (
      select sum(QUEUE_TIME) pdsc,sum(QUEUE_COUNT) as pdcs,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED
                ,QUEUE_COUNT,QUEUE_TIME
            from report_cdr c
        left join report_accesscode ra on 
           left(c.ORIG_CALLEE_NUMBER,1)=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
           where c.CTI_CALL_DIRECTION='outbound'
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
            and  cc.QUEUE_COUNT IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='outbound'
    set q.QUEUECOUNT=a.pdcs,q.QUEUETIME=a.pdsc; 
           if (_err=1) then
                SELECT '14 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '14 update success';

        update report_calleverdaycollect q
    inner join
    (
      select sum(QUEUE_TIME) as pusc,sum(QUEUE_COUNT) as pdcs,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select c.CREAT_TIME, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE
                ,c.ANSWERED, QUEUE_COUNT , QUEUE_TIME
            from report_cdr c
            where c.CTI_CALL_DIRECTION='local'
            and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
            and cc.QUEUE_COUNT IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='local'
    set q.QUEUECOUNT=a.pdcs,q.QUEUETIME=a.pusc; 
         if (_err=1) then
                SELECT '15 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '15 update success';

    update report_calleverdaycollect q
    inner join
    (
      select sum(AGENT_TIME) as rgslsc,sum(AGENT_COUNT) as rgslcs,
            REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED,
                AGENT_COUNT,AGENT_TIME
            from report_cdr c
        left join report_accesscode ra on 
        c.ORIG_CALLEE_NUMBER=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
        where c.CTI_CALL_DIRECTION='inbound'
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1 
            and  cc.AGENT_COUNT IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        AND A.CTI_CALL_DIRECTION='inbound'
    set q.AGENT_COUNT=a.rgslcs,q.AGENT_TIME=a.rgslsc; 
         if (_err=1) then
                SELECT '16 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '16 update success';

   update report_calleverdaycollect q
    inner join
    (
      select sum(AGENT_TIME) rgslsc,sum(AGENT_COUNT) as rgslcs,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED
                ,AGENT_COUNT,AGENT_TIME
            from report_cdr c
        left join report_accesscode ra on 
           left(c.ORIG_CALLEE_NUMBER,1)=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
           where c.CTI_CALL_DIRECTION='outbound'
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
            and  cc.AGENT_COUNT IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='outbound'
    set q.AGENT_COUNT=a.rgslcs,q.AGENT_TIME=a.rgslsc; 
         if (_err=1) then
                SELECT '17 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '17 update success';

    update report_calleverdaycollect q
    inner join
    (
      select sum(AGENT_TIME) as rgslsc,sum(AGENT_COUNT) as rgslcs,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select c.CREAT_TIME, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE
                ,c.ANSWERED,AGENT_COUNT,AGENT_TIME
            from report_cdr c
            where c.CTI_CALL_DIRECTION='local'
            and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
            and cc.AGENT_COUNT IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='local'
    set q.AGENT_COUNT=a.rgslcs,q.AGENT_TIME=a.rgslsc; 
         if (_err=1) then
                SELECT '18 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '18 update success';

     update report_calleverdaycollect q
    inner join
    (
      select sum(IVR_TIME) as ivrtime,sum(IVR_COUNT) as ivrcount,
            REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED,
                IVR_COUNT,IVR_TIME
            from report_cdr c
        left join report_accesscode ra on 
        c.ORIG_CALLEE_NUMBER=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
        where c.CTI_CALL_DIRECTION='inbound'
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1 
            and  cc.IVR_COUNT IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        AND A.CTI_CALL_DIRECTION='inbound'
    set q.IVR_COUNT=a.ivrcount,q.IVR_TIME=a.ivrtime; 
         if (_err=1) then
                SELECT '19 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '19 update success';

 update report_calleverdaycollect q
    inner join
    (
      select sum(IVR_TIME) ivrtime,sum(IVR_COUNT) as ivrcount,count(1) as pdcs,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,ACCESSCODE_DISPLAY as ACCESSCODE
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED
                ,IVR_COUNT,IVR_TIME
            from report_cdr c
        left join report_accesscode ra on 
           left(c.ORIG_CALLEE_NUMBER,1)=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
           where c.CTI_CALL_DIRECTION='outbound'
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
            and  cc.IVR_COUNT IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),ACCESSCODE_DISPLAY,org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='outbound'
    set q.IVR_COUNT=a.ivrcount,q.IVR_TIME=a.ivrtime; 
         if (_err=1) then
                SELECT '20 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '20 update success';

        update report_calleverdaycollect q
    inner join
    (
      select sum(IVR_TIME) as ivrtime,sum(IVR_COUNT) as ivrcount,REPORT_TIME_30M(creat_time) as CREAT_TIME
            ,org_id,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
      from  
            (
                select c.CREAT_TIME, c.org_id 
            ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE
                ,c.ANSWERED,IVR_COUNT,IVR_TIME
            from report_cdr c
            where c.CTI_CALL_DIRECTION='local'
            and CREAT_TIME >= start_time and CREAT_TIME < succed_time
            )cc
      where 1=1
            and cc.IVR_COUNT IS not NULL
        and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by REPORT_TIME_30M(creat_time),org_id
            ,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE
        ) as  a
    on a.CREAT_TIME = q.tjdate
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        and a.CTI_CALL_DIRECTION='local'
    set q.IVR_COUNT=a.ivrcount,q.IVR_TIME=a.ivrtime; 
         if (_err=1) then
                SELECT '21 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '21 update success';

        update report_calleverdaycollect q
    inner join
    (
      select count(*) as vmcount,sum(TIMESTAMPDIFF(Second,A.START_TIME,A.STOP_TIME)) as vmtime,
       REPORT_TIME_30M(a.START_TIME) as START_TIME,cc.ACCESSCODE_DISPLAY as ACCESSCODE
      ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
      from V_REPORT_CTI_RECORD_FILES a
      left join 
      (
         select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
         ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED,
         IVR_COUNT,IVR_TIME,c.cti_call_uuid
         from report_cdr c
         left join report_accesscode ra on 
         c.ORIG_CALLEE_NUMBER=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
         where c.CTI_CALL_DIRECTION='inbound'
      )cc on cc.cti_call_uuid=a.call_uuid
      where a.CTI_RECORD_TYPE = 'vm' 
             and START_TIME >= start_time and START_TIME < succed_time
      group by  REPORT_TIME_30M(a.START_TIME), cc.ACCESSCODE_DISPLAY
        ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
        ) as  a
    on a.START_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        AND A.CTI_CALL_DIRECTION='inbound'
    set q.VMCOUNT=a.vmcount,q.VMTIME=a.vmtime; 
         if (_err=1) then
                SELECT '22 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '22 update success';

        update report_calleverdaycollect q
    inner join
    (
      select count(*) as vmcount,sum(TIMESTAMPDIFF(Second,A.START_TIME,A.STOP_TIME)) as vmtime,
       REPORT_TIME_30M(a.START_TIME) as START_TIME,cc.ACCESSCODE_DISPLAY as ACCESSCODE
      ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
      from V_REPORT_CTI_RECORD_FILES a
      left join 
      (
         select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
         ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED,
         IVR_COUNT,IVR_TIME,c.cti_call_uuid
         from report_cdr c
        left join report_accesscode ra on 
        left(c.ORIG_CALLEE_NUMBER,1)=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
           where c.CTI_CALL_DIRECTION='outbound'
      )cc on cc.cti_call_uuid=a.call_uuid
      where a.CTI_RECORD_TYPE = 'vm' 
      and START_TIME >= start_time and START_TIME < succed_time
      group by  REPORT_TIME_30M(a.START_TIME), cc.ACCESSCODE_DISPLAY
        ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
        ) as  a
    on a.START_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        AND A.CTI_CALL_DIRECTION='outbound'
    set q.VMCOUNT=a.vmcount,q.VMTIME=a.vmtime; 
         if (_err=1) then
                SELECT '23 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '23 update success';

        update report_calleverdaycollect q
    inner join
    (
      select count(*) as vmcount,sum(TIMESTAMPDIFF(Second,A.START_TIME,A.STOP_TIME)) as vmtime,
       REPORT_TIME_30M(a.START_TIME) as START_TIME
      ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
      from V_REPORT_CTI_RECORD_FILES a
      left join 
      (
         select  CREAT_TIME,c.org_id 
         ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED,
         IVR_COUNT,IVR_TIME,c.cti_call_uuid
         from report_cdr c
           where c.CTI_CALL_DIRECTION='local'
      )cc on cc.cti_call_uuid=a.call_uuid
      where a.CTI_RECORD_TYPE = 'vm' 
      and START_TIME >= start_time and START_TIME < succed_time
      group by  REPORT_TIME_30M(a.START_TIME)
        ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
        ) as  a
    on a.START_TIME = q.tjdate
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        AND A.CTI_CALL_DIRECTION='local'
    set q.VMCOUNT=a.vmcount,q.VMTIME=a.vmtime; 
         if (_err=1) then
                SELECT '24 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '24 update success';

       update report_calleverdaycollect q
    inner join
    (
      select count(*) as faxcount,
       REPORT_TIME_30M(cc.CREAT_TIME) as CREAT_TIME,cc.ACCESSCODE_DISPLAY as ACCESSCODE
      ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
      from V_REPORT_CTI_FAX_FILES a
      left join 
      (
         select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
         ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED,
         IVR_COUNT,IVR_TIME,c.cti_call_uuid
         from report_cdr c
         left join report_accesscode ra on 
         c.ORIG_CALLEE_NUMBER=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
         where c.CTI_CALL_DIRECTION='inbound'
      )cc on cc.cti_call_uuid=a.cti_call_uuid
      where 1=1 
             and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by  REPORT_TIME_30M(cc.CREAT_TIME), cc.ACCESSCODE_DISPLAY
        ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
        ) as a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        AND a.CTI_CALL_DIRECTION='inbound'
    set q.FAXCOUNT=a.faxcount; 
         if (_err=1) then
                SELECT '25 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '25 update success';

       update report_calleverdaycollect q
    inner join
    (
      select count(*) as faxcount,
       REPORT_TIME_30M(cc.CREAT_TIME) as CREAT_TIME,cc.ACCESSCODE_DISPLAY as ACCESSCODE
      ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
      from V_REPORT_CTI_FAX_FILES a
      left join 
      (
         select  CREAT_TIME , ra.ACCESSCODE_DISPLAY, c.org_id 
         ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED,
         IVR_COUNT,IVR_TIME,c.cti_call_uuid
         from report_cdr c
         left join report_accesscode ra on 
         left(c.ORIG_CALLEE_NUMBER,1)=concat(ra.ACCESSCODE,ra.ACCESSCODE_PRE)
           where c.CTI_CALL_DIRECTION='outbound'
      )cc on cc.cti_call_uuid=a.cti_call_uuid
      where 1=1 
             and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by  REPORT_TIME_30M(cc.CREAT_TIME), cc.ACCESSCODE_DISPLAY
        ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
        ) as a
    on a.CREAT_TIME = q.tjdate
        and a.ACCESSCODE=q.ACCESSCODE
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        AND a.CTI_CALL_DIRECTION='outbound'
    set q.FAXCOUNT=a.faxcount; 
         if (_err=1) then
                SELECT '26 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '26 update success';

       update report_calleverdaycollect q
    inner join
    (
      select count(*) as faxcount,
       REPORT_TIME_30M(cc.CREAT_TIME) as CREAT_TIME
      ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
      from V_REPORT_CTI_FAX_FILES a
      left join 
      (
         select  CREAT_TIME , c.org_id 
         ,c.CTI_CALL_DIRECTION,c.CTI_CC_DIRECTION,c.ORIG_CALLER_TYPE,ANSWERED,
         IVR_COUNT,IVR_TIME,c.cti_call_uuid
         from report_cdr c
        
           where c.CTI_CALL_DIRECTION='local'
      )cc on cc.cti_call_uuid=a.cti_call_uuid
      where 1=1 
             and CREAT_TIME >= start_time and CREAT_TIME < succed_time
      group by  REPORT_TIME_30M(cc.CREAT_TIME)
        ,cc.org_id,cc.CTI_CALL_DIRECTION,cc.CTI_CC_DIRECTION,cc.ORIG_CALLER_TYPE
        ) as a
    on a.CREAT_TIME = q.tjdate
       
        and a.org_id=q.org_id
        and a.CTI_CALL_DIRECTION=q.CTI_CALL_DIRECTION
        and a.CTI_CC_DIRECTION=q.CTI_CC_DIRECTION
        and a.ORIG_CALLER_TYPE=q.ORIG_CALLER_TYPE
        AND a.CTI_CALL_DIRECTION='local'
    set q.FAXCOUNT=a.faxcount; 
         if (_err=1) then
                SELECT '27 LEAVE update';
        LEAVE label_p2;
      end if;
            SELECT '27 update success';




   UPDATE report_plan_calleverdaycollect SET SUCCEDTIME=succed_time,STARTTIME=start_time
   where report_plan_calleverdaycollect.TYPE='UPDATE_CALLEVERDAYCOLLECT';
            
      if (_err=1) then
        SELECT '28 LEAVE UPDATE';
        LEAVE label_p2;
      end if;            
            SELECT '28 UPDATE success';            


      SELECT 'COMMIT';
      COMMIT;
            LEAVE label_p1;
            
        end loop label_p2;
        
        SELECT 'ROLLBACK';
        ROLLBACK;
        LEAVE label_p1;        
        
    end loop label_p1;
  SELECT 'end P_LOAD_GENERAL_KPI';    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_cdrdata` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_cdrdata`()
begin
    declare start_id int default 0;
    declare end_id int;
	declare start_timestamp datetime;
	declare stop_timestamp datetime;

    set sql_safe_updates = 0;    
	select  str_to_date(date_sub(date_format(now(),'%Y-%m-%d'),interval -1 day),'%Y-%m-%d') into stop_timestamp from dual  ;
    select  str_to_date(date_sub(date_format(now(),'%Y-%m-%d'),interval 1 day),'%Y-%m-%d') into start_timestamp from dual  ;
    select ifnull(succedid,0)+1 into start_id from report_plan_cdr where type='update_queueinfo';
    select ifnull(max(c.id),0) into end_id from cti_channel c;
  
	if (end_id>start_id) then
		update report_plan_cdr 
		set starttime=current_timestamp
		where type='update_queueinfo';
 #---插入数据   
     insert into report_cdr(channel_uuid
      ,cti_call_uuid
      ,cti_call_direction
      ,cti_cc_direction
      ,orig_caller_number
      ,orig_callee_number
      ,orig_caller_type
      ,caller_number
      ,callee_number
      ,account_code
      ,creat_time
      ,answered_time
      ,cancel_time
      ,duration
      ,duration1
      ,billsec
      ,billsec1
      ,answered
      ,answered1
      ,waitsec
      ,waitsec1
      ,hangup_cause
      ,hangup_disposition
      ,org_id
      ,agent_count
      ,agent_time
      ,queue_count
      ,queue_time
      ,ivr_count
      ,ivr_time
      ,agent_id
      ,work_id
      ,agent_name
      ,agent_session_id
      ,first_agent_time
      ,queue)
      select 
      c.channel_uuid
      ,c.cti_call_uuid
      ,c.cti_call_direction
      ,c.cti_cc_direction
      ,c.orig_caller_number
      ,c.orig_callee_number
      ,c.cti_channel_type
      ,c.caller_number
      ,c.callee_number
      ,c.account_code
      ,c.created_time
      ,c.answered_time
      ,c.hangup_time
      ,c.duration
      ,c.duration1
      ,c.billsec
      ,c.billsec1
      ,c.answersec
      ,c.answersec1
      ,c.waitsec
      ,c.waitsec1
      ,c.hangup_cause
      ,c.hangup_disposition
      #,cti_bridge_agent_accum
      ,context
      ,nullif(d.counts,0) as agentcount
      ,nullif(agent_time ,0) as  agent_time
      ,nullif(e.queue_count,0) as  queue_count
      ,nullif(e.duration1 ,0) as queue_time
      ,nullif(f.ivr_count,0) as ivr_count
      ,nullif(f.ivr_time,0) as ivr_time
      ,g.agent_id
      ,g.work_id
      ,g.agent_name
      ,g.agent_session_id
      ,g.first_agent_time
      ,g.queue
      from
      (
		  select
		  channel_uuid,cti_call_uuid
		  ,cti_call_direction
		  ,cti_cc_direction
		  ,orig_caller_number
		  ,orig_callee_number
		  ,cti_channel_type
		  ,caller_number
		  ,callee_number
		  ,account_code
		  ,max(created_time) as created_time
		  ,answered_time
		  ,hangup_time
		  #---------------------时间---------------------------------
		  ,timestampdiff(second,created_time,hangup_time) as  duration
		  ,sec_to_time(timestampdiff(second,created_time,hangup_time)) as duration1       
		  ,timestampdiff(second,answered_time,hangup_time) as billsec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as billsec1  
				
		  ,timestampdiff(second,answered_time,hangup_time) as answersec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as answersec1        
		  ,timestampdiff(second,created_time,answered_time) as waitsec  
		  ,sec_to_time(timestampdiff(second,created_time,answered_time))   as waitsec1       
		  #------------------------------------------------------
		  ,hangup_cause
		  ,hangup_disposition
		  ,cti_bridge_agent_accum
		  ,context
		  from cti_channel  cc1
		  where
		  cc1.id>=start_id               
		  and cc1.id<=end_id         
		  and cc1.is_originator=1
		  and cc1.created_time is not null and cc1.cti_channel_type is not null and cc1.cti_call_uuid is not null
		  and cti_call_direction is not null
		  and cti_call_direction='inbound'
		  group by cc1.channel_uuid
      ) c 
      left join       #人工服务次数和时长   还有待修改主要是因为数据重复
      (select cti_call_uuid,count(1) as counts,
      sum(timestampdiff(second,td.entry_timestamp,td.exit_timestamp)) as agent_time
      from report_queue tc ,cti_agent_state td
      where
      tc.is_bridge_agent=1
      and tc.cti_call_uuid=td.call_uuid
      and td.new_state_name='st_in_queue_call'
      and tc.start_time>=start_timestamp                 
      and tc.start_time<=stop_timestamp                  
      group by tc.cti_call_uuid) d    on (c.cti_call_uuid = d.cti_call_uuid)
      left join          #排队次数,排队时长
     (select te.cti_call_uuid,count(1) as queue_count,sum(duration) as duration1
     from report_queue te
     where 1=1
     and te.start_time>=start_timestamp                
     and te.start_time<=stop_timestamp              
     group by te.cti_call_uuid) e      on (c.cti_call_uuid = e.cti_call_uuid)
      left join          #iVR应答次数
     (select tf.cti_call_uuid,count(1) as ivr_count,
     sum(timestampdiff(second,tf.start_time,tf.complete_time)) as ivr_time
     from cti_channel_execute tf
     where
	 application = 'ivr'
     and  tf.start_time>=start_timestamp                  
     and tf.start_time<=stop_timestamp                  
     group by tf.cti_call_uuid) f      on (c.cti_call_uuid = f.cti_call_uuid)
     
     left join  #首次人工接听时间
     (
         select cti_call_uuid,agent_id,work_id,agent_name,agent_session_id,org_id,first_agent_time,queue
         from
         (
           select tg.cti_call_uuid,th.agent_id,th.work_id,th.agent_name ,th.agent_session_id,org_id,
           min(tg.event_timestamp)  as first_agent_time,tg.queue
           from cti_acd_event tg,v_report_agent_session th
           where tg.agent_session_uuid=th.agent_session_id
           and tg.action='bridge-agent-start'
           and tg.event_timestamp>=start_timestamp                   
           and tg.event_timestamp<=stop_timestamp                   
           and tg.cti_call_uuid is not null
           group  by cti_call_uuid
         )a  
     ) g on (c.cti_call_uuid = g.cti_call_uuid);
     commit;
#================呼出========================================
    insert into report_cdr
  (
	    channel_uuid,cti_call_uuid,cti_call_direction,cti_cc_direction,orig_caller_number
	   ,orig_callee_number,orig_caller_type,caller_number,callee_number,account_code,creat_time,answered_time
	   ,cancel_time,duration,duration1,billsec,billsec1,answered,answered1,waitsec
	   ,waitsec1,hangup_cause,hangup_disposition,agent_time,org_id
       ,agent_id,work_id,agent_name,agent_session_id,first_agent_time
  )
  select   
         c.channel_uuid,c.cti_call_uuid,c.cti_call_direction,c.cti_cc_direction,c.orig_caller_number
		,c.orig_callee_number,c.cti_channel_type,c.caller_number,c.callee_number,c.account_code
		,c.created_time,c.answered_time,c.hangup_time,c.duration,c.duration1,c.billsec,c.billsec1
		,c.answersec,c.answersec1,c.waitsec,c.waitsec1,c.hangup_cause,c.hangup_disposition
        ,c.answersec cti_bridge_agent_accum,c.context
        ,d.agent_id,d.work_id,d.agent_name,d.agent_session_id,d.first_agent_time
        from
        (
		  select
		   cc1.channel_uuid,cc1.cti_call_uuid
		  ,cc1.cti_call_direction
		  ,cc1.cti_cc_direction
		  ,cc1.orig_caller_number
		  ,cc1.orig_callee_number
		  ,cc1.cti_channel_type
		  ,cc1.caller_number
		  ,cc1.callee_number
		  ,cc1.account_code
		  ,max(cc1.created_time) as created_time
		  ,cc1.answered_time
		  ,cc1.hangup_time
		,timestampdiff(second,cc1.created_time,cc1.hangup_time) as  duration
		,sec_to_time(timestampdiff(second,cc1.created_time,cc1.hangup_time)) as duration1       
		,timestampdiff(second,cc1.answered_time,cc1.hangup_time) as billsec
		,sec_to_time(timestampdiff(second,cc1.answered_time,cc1.hangup_time))   as billsec1 
		,timestampdiff(second,cc1.answered_time,cc1.hangup_time) as answersec
		,sec_to_time(timestampdiff(second,cc1.answered_time,cc1.hangup_time))   as answersec1        
		,timestampdiff(second,cc1.created_time,cc1.answered_time) as waitsec  
		,sec_to_time(timestampdiff(second,cc1.created_time,cc1.answered_time))   as waitsec1            
	    ,cc1.hangup_cause
	    ,cc1.hangup_disposition
		,cc1.context
		from cti_channel  cc1
		where
		cc1.id>=start_id              
		and cc1.id<=end_id
		and cc1.is_originator='0'
		and cc1.cti_call_direction='outbound'
        group by   cc1.channel_uuid
        ) c
	left join  #更新座席信息
	(select ta.call_uuid,tb.agent_id,tb.work_id,tb.agent_name,tb.agent_session_id,
           tb.org_id,min(ta.entry_timestamp) as  first_agent_time
    from cti_agent_state ta,cti_agent_session tb
    where ta.agent_session_id=tb.agent_session_id
    and ta.new_state_name='st_dialing_out'
    and ta.entry_timestamp>=start_timestamp                 
    and ta.entry_timestamp<=stop_timestamp                 
    group by ta.call_uuid,tb.agent_id,tb.work_id,tb.agent_name,tb.agent_session_id,tb.org_id
     ) d on c.cti_call_uuid=d.call_uuid;
        
#==============本地呼叫=======================================      
     insert into report_cdr(channel_uuid
      ,cti_call_uuid
      ,cti_call_direction
      ,cti_cc_direction
      ,orig_caller_number
      ,orig_callee_number
      ,orig_caller_type
      ,caller_number
      ,callee_number
      ,account_code
      ,creat_time
      ,answered_time
      ,cancel_time
      ,duration
      ,duration1
      ,billsec
      ,billsec1
      ,answered
      ,answered1
      ,waitsec
      ,waitsec1
      ,hangup_cause
      ,hangup_disposition
      ,org_id
      ,agent_count
      ,agent_time
      ,queue_count
      ,queue_time
      ,ivr_count
      ,ivr_time
      ,agent_id
      ,work_id
      ,agent_name
      ,agent_session_id
      ,first_agent_time
      ,queue)
      select 
      c.channel_uuid
      ,c.cti_call_uuid
      ,c.cti_call_direction
      ,c.cti_cc_direction
      ,c.orig_caller_number
      ,c.orig_callee_number
      ,c.cti_channel_type
      ,c.caller_number
      ,c.callee_number
      ,c.account_code
      ,c.created_time
      ,c.answered_time
      ,c.hangup_time
      ,c.duration
      ,c.duration1
      ,c.billsec
      ,c.billsec1
      ,c.answersec
      ,c.answersec1
      ,c.waitsec
      ,c.waitsec1
      ,c.hangup_cause
      ,c.hangup_disposition
      #,cti_bridge_agent_accum
      ,context
      ,nullif(d.counts,0) as agentcount
      ,nullif(agent_time ,0) as  agent_time
      ,nullif(e.queue_count,0) as  queue_count
      ,nullif(e.duration1 ,0) as queue_time
      ,nullif(f.ivr_count,0) as ivr_count
      ,nullif(f.ivr_time,0) as ivr_time
      ,g.agent_id
      ,g.work_id
      ,g.agent_name
      ,g.agent_session_id
      ,g.first_agent_time
      ,g.queue
      from
      (
		  select
		  channel_uuid,cti_call_uuid
		  ,cti_call_direction
		  ,cti_cc_direction
		  ,orig_caller_number
		  ,orig_callee_number
		  ,cti_channel_type
		  ,caller_number
		  ,callee_number
		  ,account_code
		  ,max(created_time) as created_time
		  ,answered_time
		  ,hangup_time
		  #---------------------时间---------------------------------
		  ,timestampdiff(second,created_time,hangup_time) as  duration
		  ,sec_to_time(timestampdiff(second,created_time,hangup_time)) as duration1       
		  ,timestampdiff(second,answered_time,hangup_time) as billsec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as billsec1  
				
		  ,timestampdiff(second,answered_time,hangup_time) as answersec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as answersec1        
		  ,timestampdiff(second,created_time,answered_time) as waitsec  
		  ,sec_to_time(timestampdiff(second,created_time,answered_time))   as waitsec1       
		  #------------------------------------------------------
		  ,hangup_cause
		  ,hangup_disposition
		  ,cti_bridge_agent_accum
		  ,context
		  from v_report_channel  cc1
		  where
		  cc1.id>=start_id               
		  and cc1.id<=end_id         
		  and cc1.is_originator=1
		  and cc1.created_time is not null and cc1.cti_channel_type is not null and cc1.cti_call_uuid is not null
		  and cti_call_direction is not null
		  and cti_call_direction='local'
		  and substr(destination_number,0,13)<>'cti_eavesdrop'
		  group by cc1.channel_uuid
      ) c 
      left join       #人工服务次数和时长
      (select cti_call_uuid,count(1) as counts,sum(timestampdiff(second,td.entry_timestamp,td.exit_timestamp)) as agent_time
      from report_queue tc ,cti_agent_state td
      where
      tc.is_bridge_agent=1
      and tc.cti_call_uuid=td.call_uuid
      and td.new_state_name='st_in_queue_call'
      and tc.start_time>=start_timestamp                 
      and tc.start_time<=stop_timestamp                  
     group by tc.cti_call_uuid) d    on (c.cti_call_uuid = d.cti_call_uuid)
      left join          #排队次数,排队时长
     (select te.cti_call_uuid,count(1) as queue_count,sum(duration) as duration1
     from report_queue te
     where 1=1
     and te.start_time>=start_timestamp                
     and te.start_time<=stop_timestamp              
     group by te.cti_call_uuid) e      on (c.cti_call_uuid = e.cti_call_uuid)
      left join        #ivr
     (select tf.cti_call_uuid,count(1) as ivr_count,
     sum(timestampdiff(second,tf.start_time,tf.complete_time)) as ivr_time
     from cti_channel_execute tf
     where
      application = 'ivr'
     and  tf.start_time>=start_timestamp                  
     and  tf.start_time<=stop_timestamp                  
     group by tf.cti_call_uuid) f      on (c.cti_call_uuid = f.cti_call_uuid)
     
     left join  #首次人工接听时间
     (
         select cti_call_uuid,agent_id,work_id,agent_name,agent_session_id,org_id,first_agent_time,queue
         from
         (
           select tg.cti_call_uuid,th.agent_id,th.work_id,th.agent_name ,th.agent_session_id,org_id,
           min(tg.event_timestamp)  as first_agent_time,tg.queue
           from cti_acd_event tg,v_report_agent_session th
           where tg.agent_session_uuid=th.agent_session_id
           and tg.action='bridge-agent-start'
           and tg.event_timestamp>=start_timestamp                   
           and tg.event_timestamp<=stop_timestamp                   
           and tg.cti_call_uuid is not null
           group  by cti_call_uuid
         )a  
     ) g on (c.cti_call_uuid = g.cti_call_uuid);
     commit;
#-----------更新-排队次数------------------------
            update report_cdr cr  
			inner join (
				 select cti_call_uuid, queuenum,duration1 from
				 (
					select cti_call_uuid ,
					count(q.id) as queuenum,sum(q.duration) as duration1
					from   report_queue  q
					group by cti_call_uuid
				 )  cs
			) as cc
			on cc.cti_call_uuid=cr.cti_call_uuid
			set cr.queue_count=cc.queuenum,cr.queue_time=cc.duration1;
#-------------更新转人工时间-----------------------------
            update report_cdr cr  
			inner join (
				 select cti_call_uuid,agent_id,work_id,agent_name,agent_session_id,org_id,first_agent_time,queue
				 from
				 (
				   select tg.cti_call_uuid,th.agent_id,th.work_id,th.agent_name ,th.agent_session_id,org_id,
				   min(tg.event_timestamp)  as first_agent_time,tg.queue
				   from cti_acd_event tg left join v_report_agent_session th on tg.agent_session_uuid=th.agent_session_id
				   where 
				   tg.event_timestamp>=start_timestamp
				   and tg.event_timestamp<=stop_timestamp
				   and tg.action='bridge-agent-start'
				   and tg.cti_call_uuid is not null  
				   group by tg.cti_call_uuid 
                   )a 
				) as b
				on b.cti_call_uuid=cr.cti_call_uuid
				set cr.agent_id=b.agent_id ,cr.work_id=b.work_id ,cr.queue=b.queue,
				cr.agent_name=b.agent_name,cr.agent_session_id=b.agent_session_id,cr.first_agent_time=b.first_agent_time ;
#-----------更新-----首次应答时间和队列-------------------   
		   commit;
           update report_cdr cr  
			inner join (
			   select tg.cti_call_uuid,
			   max(tg.event_timestamp)  as first_agent_time,tg.queue
			   from cti_acd_event tg
			   where 
			   tg.event_timestamp>=start_timestamp
			   and tg.event_timestamp<=stop_timestamp
			   and tg.action='bridge-agent-start'
			   and tg.cti_call_uuid is not null
			   group by cti_call_uuid				
			) as cc
			on cc.cti_call_uuid=cr.cti_call_uuid
			set cr.queue=cc.queue,cr.first_agent_time=cc.first_agent_time;
            commit;
            
#更新半小时
           update report_cdr q set q.creat_time_30m=report_time_30m(creat_time)
           where q.creat_time_30m is null;
           
		    update report_plan_cdr 
			set starttime=current_timestamp,startid=start_id,succedid=end_id
			where type='update_queueinfo';
	end if;
 
	update report_plan_cdr set succedtime=current_timestamp 
	where type='update_queueinfo';
	commit;               
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_cdrdata_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_cdrdata_back`()
begin
    declare start_id int default 0;
    declare end_id int;
    declare _err int default 0;
    declare continue handler for sqlexception set _err=1;

    set sql_safe_updates = 0;    

    set _err=0;
    select ifnull(succedid,0)+1 into start_id from report_plan_cdr where type='update_queueinfo';
    select ifnull(max(c.id),0) into end_id from v_report_cti_channel c;
    select concat('start_id=',start_id);
    select concat('end_id=',end_id);    
    label_p1:loop
    
      update report_plan_cdr 
            set starttime=current_timestamp,startid=start_id,succedid=end_id
      where type='update_queueinfo';

    
	  if (end_id<start_id) then
      select '1leave label_p1';
      leave label_p1;     
        end if;
        
    if (_err=1) then
      select '2leave label_p1';
      leave label_p1;
    end if;   
        
        start transaction; 
        select 'start transaction';   
    label_p2:loop   
 
   
    insert into report_cdr(channel_uuid
              ,cti_call_uuid  
              ,cti_call_direction
              ,cti_cc_direction
              ,orig_caller_number
              ,orig_callee_number      
              ,orig_caller_type
              ,caller_number
              ,callee_number
              ,account_code
              ,creat_time
              ,answered_time        
              ,cancel_time            
              ,duration
              ,duration1
              ,billsec
              ,billsec1
              ,answered
              ,answered1
              ,waitsec
              ,waitsec1
              ,hangup_cause
              ,hangup_disposition
              ,agent_time
              ,org_id)
      select c.channel_uuid,c.cti_call_uuid  
          ,c.cti_call_direction
          ,c.cti_cc_direction 
          ,c.orig_caller_number
          ,c.orig_callee_number      
          ,c.cti_channel_type
          ,c.caller_number
          ,c.callee_number
          ,c.account_code
          ,c.created_time
          ,c.answered_time
          ,c.hangup_time            
          ,c.duration
          ,c.duration1
          ,c.billsec
          ,c.billsec1
          ,c.answersec
          ,c.answersec1
          ,c.waitsec
          ,c.waitsec1
          ,c.hangup_cause
          ,c.hangup_disposition
          ,cti_bridge_agent_accum
          ,context
      from(
      select channel_uuid,cti_call_uuid  
      ,cti_call_direction
      ,cti_cc_direction 
      ,orig_caller_number
      ,orig_callee_number      
      ,cti_channel_type
      ,caller_number
      ,callee_number
      ,account_code
      ,created_time
      ,answered_time
      ,hangup_time            
      ,duration
      ,duration1       
      ,billsec
      ,billsec1      
      ,answersec
      ,answersec1        
      ,waitsec  
      ,waitsec1            
      ,hangup_cause
      ,hangup_disposition
    ,cti_bridge_agent_accum
    ,context
      from (
      select 
          channel_uuid,cti_call_uuid  
          ,cti_call_direction
          ,cti_cc_direction 
          ,orig_caller_number
          ,orig_callee_number      
          ,cti_channel_type
          ,caller_number
          ,callee_number
          ,account_code
          ,max(created_time) created_time
          ,answered_time
          ,hangup_time            
          ,timestampdiff(second,created_time,hangup_time) as  duration
      ,sec_to_time(timestampdiff(second,created_time,hangup_time)) as duration1       
              ,timestampdiff(second,answered_time,hangup_time) as billsec
      ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as billsec1  
            
          ,timestampdiff(second,answered_time,hangup_time) as answersec
      ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as answersec1        
          ,timestampdiff(second,created_time,answered_time) as waitsec  
      ,sec_to_time(timestampdiff(second,created_time,answered_time))   as waitsec1            
          ,hangup_cause
          ,hangup_disposition
                  ,cti_bridge_agent_accum
                  ,context
        from v_report_cti_channel as cc1
      where 
            cc1.id>=start_id
      and cc1.id<=end_id and
             cc1.is_originator=1
             and cti_call_direction<>'outbound'
             and left(cc1.destination_number,13)<>'cti_eavesdrop'
      group by cc1.channel_uuid
        ) as c1
      ) as c 
      left join report_cdr r 
      on c.cti_call_uuid=r.cti_call_uuid 
      where r.cti_call_uuid is null;
      if (_err=1) then
                select '2 leave insert';
        leave label_p2;
      end if;
            select '2—1 insert success';
  

            update report_cdr cr  
      inner join (
        select c.cti_call_uuid,count(q.id) n1
        from report_cdr c,report_queue q
        where c.cti_call_uuid=q.cti_call_uuid
        and q.is_bridge_agent=1
        and c.agent_count is null
        group by c.cti_call_uuid
      ) as cc
      on cc.cti_call_uuid=cr.cti_call_uuid
      set cr.agent_count=cc.n1,cr.agent_time1=sec_to_time(agent_time);
   
      
      if (_err=1) then
        select '2-11 leave update';
        leave label_p2;
      end if;            
            select '更新人工处理次数、处理时间 update success';
   
 
      update  report_cdr  set agent_count=1
    where cti_cc_direction='inner'
    and agent_count is null
    and agent_time is not null;  
        if (_err=1) then
                select '2 leave 更新人工处理次数shibai';
        leave label_p2;
      end if;
            select '2—1 更新人工处理次数 success';
  

  
  insert into report_cdr(channel_uuid
      ,cti_call_uuid  
      ,cti_call_direction
      ,cti_cc_direction
      ,orig_caller_number
      ,orig_callee_number      
      ,orig_caller_type
      ,caller_number
      ,callee_number  
      ,account_code
      ,creat_time
      ,answered_time
      ,cancel_time            
      ,duration
      ,duration1
      ,billsec
      ,billsec1
      ,answered
      ,answered1
      ,waitsec
      ,waitsec1
      ,hangup_cause
      ,hangup_disposition
    ,agent_time
    ,org_id)
      select c.channel_uuid,c.cti_call_uuid  
      ,c.cti_call_direction
      ,c.cti_cc_direction 
      ,c.orig_caller_number
      ,c.orig_callee_number      
      ,c.cti_channel_type
      ,c.caller_number
      ,c.callee_number
      ,c.account_code
      ,c.created_time   
      ,c.answered_time
      ,c.hangup_time            
      ,c.duration
      ,c.duration1
      ,c.billsec
      ,c.billsec1
      ,c.answersec
      ,c.answersec1
      ,c.waitsec
      ,c.waitsec1
      ,c.hangup_cause
      ,c.hangup_disposition
    ,c.answersec as cti_bridge_agent_accum
    ,c.context
 from(
      select channel_uuid,cti_call_uuid  
      ,cti_call_direction
      ,cti_cc_direction 
      ,orig_caller_number
      ,orig_callee_number      
      ,cti_channel_type
      ,caller_number
      ,callee_number
      ,account_code
      ,created_time
      ,answered_time
      ,hangup_time            
      ,duration
      ,duration1       
      ,billsec
    ,billsec1      
      ,answersec        
    ,answersec1        
      ,waitsec  
    ,waitsec1            
      ,hangup_cause
      ,hangup_disposition
    ,context    
  from (
            select 
          cc1.channel_uuid,cc1.cti_call_uuid  
          ,cc1.cti_call_direction
          ,cc1.cti_cc_direction 
          ,cc1.orig_caller_number
          ,cc1.orig_callee_number      
          ,cc1.cti_channel_type
          ,cc1.caller_number
          ,cc1.callee_number
          ,cc1.account_code
          ,max(cc2.created_time) created_time
          ,cc2.answered_time
          ,cc2.hangup_time            
          ,timestampdiff(second,cc2.created_time,cc2.hangup_time) as  duration
      ,sec_to_time(timestampdiff(second,cc2.created_time,cc2.hangup_time)) as duration1       
      
             ,timestampdiff(second,cc2.answered_time,cc2.hangup_time) as billsec
      ,sec_to_time(timestampdiff(second,cc2.answered_time,cc2.hangup_time))   as billsec1 
            
          ,timestampdiff(second,cc2.answered_time,cc2.hangup_time) as answersec
      ,sec_to_time(timestampdiff(second,cc2.answered_time,cc2.hangup_time))   as answersec1        
          ,timestampdiff(second,cc2.created_time,cc2.answered_time) as waitsec  
      ,sec_to_time(timestampdiff(second,cc2.created_time,cc2.answered_time))   as waitsec1            
          ,cc1.hangup_cause
          ,cc1.hangup_disposition
                  ,cc1.context
        from v_report_cti_channel as cc1 ,v_report_cti_channel cc2
      where  
            cc1.id>=start_id
      and cc1.id<=end_id and
             cc1.is_originator=1
             and cc1.cti_call_direction='outbound'
             and left(cc1.destination_number,13)<>'cti_eavesdrop'
             and cc1.other_leg_uuid is not null
             and cc1.other_leg_uuid=cc2.channel_uuid
       group by cc1.channel_uuid
      ) as c1
  ) as c 
    left join report_cdr r 
    on c.cti_call_uuid=r.cti_call_uuid 
    where r.cti_call_uuid is null; 
  
          if (_err=1) then
                select '2 leave 平台呼出的记录shibai';
        leave label_p2;
      end if;
            select '2—1 平台呼出的记录 success';
  
     update  report_cdr c1 set c1.agent_count=1 
    ,c1.agent_time1=sec_to_time(agent_time)
    where c1.cti_call_direction='outbound'
    and answered_time is not null
    and c1.agent_count is null;           
            
         if (_err=1) then
        select '2-111 leave update';
        leave label_p2;
      end if;            
            select '更新人工处理次数、处理时间 update success';
               
            
 
      update report_cdr as cr
      inner join (
      select cdr.cti_call_uuid
      ,count(q.id) as queuenum,sum(q.duration) as duration1
      from report_cdr as cdr,report_queue as q
      where cdr.channel_uuid=q.channel_uuid
      and cdr.queue_count is null
      group by cdr.cti_call_uuid
      ) as cc
      on cc.cti_call_uuid=cr.cti_call_uuid
      and cr.queue_count is null
      set cr.queue_count=cc.queuenum,cr.queue_time=cc.duration1 
      ,cr.queue_time1=sec_to_time(cc.duration1);
            
      if (_err=1) then
        select '3 -----更新排队时间、排队次数 shibai ';
        leave label_p2;
      end if;            
            select '3—1 -----更新排队时间、排队次数 success';            
 
      update report_cdr cr  
      inner join (
        select cdr.CTI_CALL_UUID
        ,count(c.channel_uuid) num1,sum(c.ivrduration) duration1
        from report_cdr as cdr,v_report_ivr as c
        where cdr.CTI_CALL_UUID=c.CTI_CALL_UUID
        and cdr.IVR_COUNT is null
        group by cdr.CTI_CALL_UUID
      ) as cc
      on cc.CTI_CALL_UUID=cr.CTI_CALL_UUID
      and cr.ivr_count is null
      set cr.ivr_count=cc.num1,cr.ivr_time=ifnull(cc.duration1,0)
      ,cr.ivr_time1=sec_to_time(ifnull(cc.duration1,0));
            
      if (_err=1) then
        select '4 leave update';
        leave label_p2;
      end if;            
            select '4 update success';    
     
       update report_cdr qq  
      inner join (
        select c1.cti_call_uuid,c1.agent_id,c1.agent_session_uuid,c1.agent_channel_uuid,c1.member_uuid
        ,min(c1.event_timestamp) as event_timestamp
        from v_report_cti_acd_event c1 ,report_cdr q
        where c1.cti_call_uuid=q.cti_call_uuid
        and c1.action='bridge-agent-start'
        and q.cti_cc_direction='inbound'
        and q.first_agent_time is null
        group by member_uuid
            ) as c
            on qq.cti_call_uuid=c.cti_call_uuid
            left join v_report_cti_agent_session s1
      on c.agent_session_uuid=s1.agent_session_id
            set qq.first_agent_time=c.event_timestamp
      ,qq.agent_id=c.agent_id,qq.agent_session_id=c.agent_session_uuid,qq.agent_channel_uuid=c.agent_channel_uuid
      ,qq.agent_name=s1.agent_name,qq.org_id=s1.org_id,qq.work_id=s1.work_id;
        if (_err=1) then
        select '5-1 更新首次坐席接听时间字段 shibai';
        leave label_p2;
      end if;            
            select '5-1 更新首次坐席接听时间字段 success';      

		update report_cdr set first_agent_time=answered_time
		where cti_cc_direction='outbound' or cti_cc_direction='inner'
		and first_agent_time is null;     
            
         if (_err=1) then
        select '5-11 leave update';
        leave label_p2;
      end if;            
            select '座席呼出 update success'; 
 
            update report_cdr q 
      inner join (
        select distinct q.cti_call_uuid,cas.agent_id,cas.channel_uuid,cas.agent_session_id
      ,ss.org_id,ss.work_id,ss.agent_name
      ,min(entry_timestamp)  
      from v_report_cti_agent_state as cas,v_report_cti_agent_session as ss,report_cdr q
      where cas.agent_id=ss.agent_id
      and cas.agent_session_id=ss.agent_session_id
      and cas.new_state_name='st_in_outbound_call'
      and cas.call_uuid=q.cti_call_uuid
      and q.cti_cc_direction='outbound'
      and q.agent_id is null
      group by call_uuid
      ) as c
            on q.cti_call_uuid=c.cti_call_uuid
      left join v_report_cti_agent_session s1
      on c.agent_session_id=s1.agent_session_id
            set q.agent_id=c.agent_id,q.agent_session_id=c.agent_session_id,q.agent_channel_uuid=c.channel_uuid
      ,q.agent_name=s1.agent_name,q.org_id=s1.org_id,q.work_id=s1.work_id; 
             
               if (_err=1) then
        select '5-111 leave update';
        leave label_p2;
      end if;            
            select '坐席呼出 update success'; 


          update report_cdr q 
      inner join (
        select distinct q.cti_call_uuid,cas.agent_id,cas.channel_uuid,cas.agent_session_id
        ,ss.org_id,ss.work_id,ss.agent_name
        ,min(entry_timestamp) 
        from v_report_cti_agent_state as cas,v_report_cti_agent_session as ss,report_cdr q
        where cas.agent_id=ss.agent_id
        and cas.agent_session_id=ss.agent_session_id
        and (cas.new_state_name='st_in_innercall' and cas.old_state_name='st_outgoing_innercall')
        and cas.call_uuid=q.cti_call_uuid
        and q.cti_cc_direction='inner'
        and q.agent_id is null
        group by call_uuid
            ) as c
            on q.cti_call_uuid=c.cti_call_uuid
    left join v_report_cti_agent_session s1
    on c.agent_session_id=s1.agent_session_id
    set q.agent_id=c.agent_id,q.agent_session_id=c.agent_session_id,q.agent_channel_uuid=c.channel_uuid
       ,q.agent_name=s1.agent_name,q.org_id=s1.org_id,q.work_id=s1.work_id;
   
               if (_err=1) then
        select '5-1111 leave update';
        leave label_p2;
      end if;            
            select ' 座席内呼   update success'; 
 
 
   
      update report_cdr 
      set creat_time_30m=report_time_30m(creat_time)
      where report_cdr.creat_time_30m is null;             
      if (_err=1) then
        select '5-11111 leave update';
        leave label_p2;
      end if;            
            select '更新统计时间字段  update success';




         update report_plan_cdr set succedtime=current_timestamp 
         where type='update_queueinfo';

            
      if (_err=1) then
        select '6 leave update';
        leave label_p2;
      end if;            
            select '6 update success';            

      select 'commit';
      commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;        
        
    end loop label_p1;
  select 'end p_load_cdrdata';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_cdrdata_test` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_cdrdata_test`()
begin
    declare start_id int default 0;
    declare end_id int;
	declare start_timestamp datetime;
	declare stop_timestamp datetime;

    
    set sql_safe_updates = 0;    
    select str_to_date(date_format(now(),'%Y-%m-%d'),'%Y-%m-%d') into  stop_timestamp from dual  ;
    select  str_to_date(date_sub(date_format(now(),'%Y-%m-%d'),interval 1 day),'%Y-%m-%d') into start_timestamp from dual  ;
    select ifnull(succedid,0)+1 into start_id from report_plan_cdr where type='update_queueinfo';
    select ifnull(max(c.id),0) into end_id from cti_channel c;
 
	

	if (end_id>start_id) then
#----更新记录表    
    update report_plan_cdr 
	set starttime=current_timestamp,startid=start_id,succedid=end_id
	where type='update_queueinfo';
 #---插入数据   
     insert into report_cdr(channel_uuid
      ,cti_call_uuid
      ,cti_call_direction
      ,cti_cc_direction
      ,orig_caller_number
      ,orig_callee_number
      ,orig_caller_type
      ,caller_number
      ,callee_number
      ,account_code
      ,creat_time
      ,answered_time
      ,cancel_time
      ,duration
      ,duration1
      ,billsec
      ,billsec1
      ,answered
      ,answered1
      ,waitsec
      ,waitsec1
      ,hangup_cause
      ,hangup_disposition
      ,org_id
      ,agent_count
      ,agent_time
      ,queue_count
      ,queue_time
      ,ivr_count
      ,ivr_time
      ,agent_id
      ,work_id
      ,agent_name
      ,agent_session_id
      ,first_agent_time
      ,queue)
      select 
      c.channel_uuid
      ,c.cti_call_uuid
      ,c.cti_call_direction
      ,c.cti_cc_direction
      ,c.orig_caller_number
      ,c.orig_callee_number
      ,c.cti_channel_type
      ,c.caller_number
      ,c.callee_number
      ,c.account_code
      ,c.created_time
      ,c.answered_time
      ,c.hangup_time
      ,c.duration
      ,c.duration1
      ,c.billsec
      ,c.billsec1
      ,c.answersec
      ,c.answersec1
      ,c.waitsec
      ,c.waitsec1
      ,c.hangup_cause
      ,c.hangup_disposition
      #,cti_bridge_agent_accum
      ,context
      ,nullif(d.counts,0) as agentcount
      ,nullif(agent_time ,0) as  agent_time
      ,nullif(e.queue_count,0) as  queue_count
      ,nullif(e.duration1 ,0) as queue_time
      ,nullif(f.ivr_count,0) as ivr_count
      ,nullif(f.ivr_time,0) as ivr_time
      ,g.agent_id
      ,g.work_id
      ,g.agent_name
      ,g.agent_session_id
      ,g.first_agent_time
      ,g.queue
      from
      (
		  select
		  channel_uuid,cti_call_uuid
		  ,cti_call_direction
		  ,cti_cc_direction
		  ,orig_caller_number
		  ,orig_callee_number
		  ,cti_channel_type
		  ,caller_number
		  ,callee_number
		  ,account_code
		  ,max(created_time) as created_time
		  ,answered_time
		  ,hangup_time
		  #---------------------时间---------------------------------
		  ,timestampdiff(second,created_time,hangup_time) as  duration
		  ,sec_to_time(timestampdiff(second,created_time,hangup_time)) as duration1       
		  ,timestampdiff(second,answered_time,hangup_time) as billsec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as billsec1  
				
		  ,timestampdiff(second,answered_time,hangup_time) as answersec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as answersec1        
		  ,timestampdiff(second,created_time,answered_time) as waitsec  
		  ,sec_to_time(timestampdiff(second,created_time,answered_time))   as waitsec1       
		  #------------------------------------------------------
		  ,hangup_cause
		  ,hangup_disposition
		  ,cti_bridge_agent_accum
		  ,context
		  # ,row_number() over(partition by cc1.channel_uuid order by cc1.created_time desc) rn
		  from v_report_channel  cc1
		  where
		  cc1.id>=start_id               
		  and cc1.id<=end_id         
		  and cc1.is_originator=1
		  and cc1.created_time is not null and cc1.cti_channel_type is not null and cc1.cti_call_uuid is not null
		  and cti_call_direction is not null
		  and cti_call_direction='inbound'
		  and substr(destination_number,0,13)<>'cti_eavesdrop'
		  group by cc1.channel_uuid
      ) c 
      left join       #人工服务次数和时长   还有待修改主要是因为数据重复
      (select cti_call_uuid,count(1) as counts,
      sum(timestampdiff(second,td.entry_timestamp,td.exit_timestamp)) as agent_time
      from report_queue tc ,cti_agent_state td
      where
      tc.is_bridge_agent=1
      and tc.cti_call_uuid=td.call_uuid
      and td.new_state_name='st_in_queue_call'
      and tc.start_time>=start_timestamp                 
      and tc.start_time<=stop_timestamp                  
      group by tc.cti_call_uuid) d    on (c.cti_call_uuid = d.cti_call_uuid)
      left join          #排队次数,排队时长
     (select te.cti_call_uuid,count(1) as queue_count,sum(duration) as duration1
     from report_queue te
     where 1=1
     and te.start_time>=start_timestamp                
     and te.start_time<=stop_timestamp              
     group by te.cti_call_uuid) e      on (c.cti_call_uuid = e.cti_call_uuid)
      left join        
     (select tf.cti_call_uuid,count(1) as ivr_count,
     sum(timestampdiff(second,tf.start_time,tf.complete_time)) as ivr_time
     from cti_channel_execute tf
     where
	 application = 'ivr'
     and  tf.start_time>=start_timestamp                  
     and tf.start_time<=stop_timestamp                  
     group by tf.cti_call_uuid) f      on (c.cti_call_uuid = f.cti_call_uuid)
     
     left join  #首次人工接听时间
     (
         select cti_call_uuid,agent_id,work_id,agent_name,agent_session_id,org_id,first_agent_time,queue
         from
         (
           select tg.cti_call_uuid,th.agent_id,th.work_id,th.agent_name ,th.agent_session_id,org_id,
           min(tg.event_timestamp)  as first_agent_time,tg.queue
           from cti_acd_event tg,v_report_agent_session th
           where tg.agent_session_uuid=th.agent_session_id
           and tg.action='bridge-agent-start'
           and tg.event_timestamp>=start_timestamp                   
           and tg.event_timestamp<=stop_timestamp                   
           and tg.cti_call_uuid is not null
           group  by cti_call_uuid
         )a  
     ) g on (c.cti_call_uuid = g.cti_call_uuid);
     commit;
#================呼出========================================
  insert into report_cdr(channel_uuid
    ,cti_call_uuid
          ,cti_call_direction
          ,cti_cc_direction
          ,orig_caller_number
          ,orig_callee_number
          ,orig_caller_type
          ,caller_number
          ,callee_number
          ,account_code
          ,creat_time
          ,answered_time
          ,cancel_time
          ,duration
          ,duration1
          ,billsec
          ,billsec1
          ,answered
          ,answered1
          ,waitsec
          ,waitsec1
          ,hangup_cause
          ,hangup_disposition
        ,agent_time
        ,org_id
        ,agent_id
        ,work_id
        ,agent_name
        ,agent_session_id
        ,first_agent_time
        )

 select   c.channel_uuid,c.cti_call_uuid
          ,c.cti_call_direction
          ,c.cti_cc_direction
          ,c.orig_caller_number
          ,c.orig_callee_number
          ,c.cti_channel_type
          ,c.caller_number
          ,c.callee_number
          ,c.account_code
          ,c.created_time
          ,c.answered_time
          ,c.hangup_time
          ,c.duration
          ,c.duration1
          ,c.billsec
          ,c.billsec1
          ,c.answersec
          ,c.answersec1
          ,c.waitsec
          ,c.waitsec1
          ,c.hangup_cause
          ,c.hangup_disposition
        ,c.answersec cti_bridge_agent_accum
        ,c.context
       
        ,d.agent_id
        ,d.work_id
        ,d.agent_name
        ,d.agent_session_id
        ,d.first_agent_time
        from
        (
         select
		  cc1.channel_uuid,cc1.cti_call_uuid
		  ,cc1.cti_call_direction
		  ,cc1.cti_cc_direction
		  ,cc1.orig_caller_number
		  ,cc1.orig_callee_number
		  ,cc1.cti_channel_type
		  ,cc1.caller_number
		  ,cc1.callee_number
		  ,cc1.account_code
		  ,max(cc1.created_time) as created_time
		  ,cc2.answered_time
		  ,cc2.hangup_time
		,timestampdiff(second,cc2.created_time,cc2.hangup_time) as  duration
		,sec_to_time(timestampdiff(second,cc2.created_time,cc2.hangup_time)) as duration1       
		,timestampdiff(second,cc2.answered_time,cc2.hangup_time) as billsec
		,sec_to_time(timestampdiff(second,cc2.answered_time,cc2.hangup_time))   as billsec1 
		,timestampdiff(second,cc2.answered_time,cc2.hangup_time) as answersec
		,sec_to_time(timestampdiff(second,cc2.answered_time,cc2.hangup_time))   as answersec1        
		,timestampdiff(second,cc2.created_time,cc2.answered_time) as waitsec  
		,sec_to_time(timestampdiff(second,cc2.created_time,cc2.answered_time))   as waitsec1            
	    ,cc1.hangup_cause
	    ,cc1.hangup_disposition
		,cc1.context
		from v_report_channel  cc1,v_report_channel cc2
		where
		cc1.id>=start_id               
		and cc1.id<=end_id   
		and
		cc1.is_originator=1
		and cc1.created_time is not null and cc1.cti_channel_type is not null and cc1.cti_call_uuid is not null
		and cc1.cti_call_direction is not null
		and cc1.cti_call_direction='outbound'
		and cc1.bridged_time is not null
		and substr(cc1.destination_number,0,13)<>'cti_eavesdrop'
		and cc1.other_leg_uuid=cc2.channel_uuid
        group by   cc1.channel_uuid
        ) c
	left join  #更新座席信息
	(select ta.call_uuid,tb.agent_id,tb.work_id,tb.agent_name,tb.agent_session_id,
           tb.org_id,min(ta.entry_timestamp) as  first_agent_time
    from cti_agent_state ta,cti_agent_session tb
    where ta.agent_session_id=tb.agent_session_id
    and ta.new_state_name='st_in_outbound_call'
    and ta.entry_timestamp>=start_timestamp                   
    and ta.entry_timestamp<=stop_timestamp                  
    group by ta.call_uuid,tb.agent_id,tb.work_id,tb.agent_name,tb.agent_session_id,tb.org_id
     ) d on c.cti_call_uuid=d.call_uuid;
     
        
#==============本地呼叫=======================================      
     insert into report_cdr(channel_uuid
      ,cti_call_uuid
      ,cti_call_direction
      ,cti_cc_direction
      ,orig_caller_number
      ,orig_callee_number
      ,orig_caller_type
      ,caller_number
      ,callee_number
      ,account_code
      ,creat_time
      ,answered_time
      ,cancel_time
      ,duration
      ,duration1
      ,billsec
      ,billsec1
      ,answered
      ,answered1
      ,waitsec
      ,waitsec1
      ,hangup_cause
      ,hangup_disposition
      ,org_id
      ,agent_count
      ,agent_time
      ,queue_count
      ,queue_time
      ,ivr_count
      ,ivr_time
      ,agent_id
      ,work_id
      ,agent_name
      ,agent_session_id
      ,first_agent_time
      ,queue)
      select 
      c.channel_uuid
      ,c.cti_call_uuid
      ,c.cti_call_direction
      ,c.cti_cc_direction
      ,c.orig_caller_number
      ,c.orig_callee_number
      ,c.cti_channel_type
      ,c.caller_number
      ,c.callee_number
      ,c.account_code
      ,c.created_time
      ,c.answered_time
      ,c.hangup_time
      ,c.duration
      ,c.duration1
      ,c.billsec
      ,c.billsec1
      ,c.answersec
      ,c.answersec1
      ,c.waitsec
      ,c.waitsec1
      ,c.hangup_cause
      ,c.hangup_disposition
      #,cti_bridge_agent_accum
      ,context
      ,nullif(d.counts,0) as agentcount
      ,nullif(agent_time ,0) as  agent_time
      ,nullif(e.queue_count,0) as  queue_count
      ,nullif(e.duration1 ,0) as queue_time
      ,nullif(f.ivr_count,0) as ivr_count
      ,nullif(f.ivr_time,0) as ivr_time
      ,g.agent_id
      ,g.work_id
      ,g.agent_name
      ,g.agent_session_id
      ,g.first_agent_time
      ,g.queue
      from
      (
		  select
		  channel_uuid,cti_call_uuid
		  ,cti_call_direction
		  ,cti_cc_direction
		  ,orig_caller_number
		  ,orig_callee_number
		  ,cti_channel_type
		  ,caller_number
		  ,callee_number
		  ,account_code
		  ,max(created_time) as created_time
		  ,answered_time
		  ,hangup_time
		  #---------------------时间---------------------------------
		  ,timestampdiff(second,created_time,hangup_time) as  duration
		  ,sec_to_time(timestampdiff(second,created_time,hangup_time)) as duration1       
		  ,timestampdiff(second,answered_time,hangup_time) as billsec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as billsec1  
				
		  ,timestampdiff(second,answered_time,hangup_time) as answersec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as answersec1        
		  ,timestampdiff(second,created_time,answered_time) as waitsec  
		  ,sec_to_time(timestampdiff(second,created_time,answered_time))   as waitsec1       
		  #------------------------------------------------------
		  ,hangup_cause
		  ,hangup_disposition
		  ,cti_bridge_agent_accum
		  ,context
		  from v_report_channel  cc1
		  where
		  cc1.id>=start_id               
		  and cc1.id<=end_id         
		  and cc1.is_originator=1
		  and cc1.created_time is not null and cc1.cti_channel_type is not null and cc1.cti_call_uuid is not null
		  and cti_call_direction is not null
		  and cti_call_direction='local'
		  and substr(destination_number,0,13)<>'cti_eavesdrop'
		  group by cc1.channel_uuid
      ) c 
      left join       #人工服务次数和时长
      (select cti_call_uuid,count(1) as counts,sum(timestampdiff(second,td.entry_timestamp,td.exit_timestamp)) as agent_time
      from report_queue tc ,cti_agent_state td
      where
      tc.is_bridge_agent=1
      and tc.cti_call_uuid=td.call_uuid
      and td.new_state_name='st_in_queue_call'
      and tc.start_time>=start_timestamp                 
      and tc.start_time<=stop_timestamp                  
     group by tc.cti_call_uuid) d    on (c.cti_call_uuid = d.cti_call_uuid)
      left join          #排队次数,排队时长
     (select te.cti_call_uuid,count(1) as queue_count,sum(duration) as duration1
     from report_queue te
     where 1=1
     and te.start_time>=start_timestamp                
     and te.start_time<=stop_timestamp              
     group by te.cti_call_uuid) e      on (c.cti_call_uuid = e.cti_call_uuid)
      left join        #ivr
     (select tf.cti_call_uuid,count(1) as ivr_count,
     sum(timestampdiff(second,tf.start_time,tf.complete_time)) as ivr_time
     from cti_channel_execute tf
     where
      application = 'ivr'
     and  tf.start_time>=start_timestamp                  
     and  tf.start_time<=stop_timestamp                  
     group by tf.cti_call_uuid) f      on (c.cti_call_uuid = f.cti_call_uuid)
     
     left join  #首次人工接听时间
     (
         select cti_call_uuid,agent_id,work_id,agent_name,agent_session_id,org_id,first_agent_time,queue
         from
         (
           select tg.cti_call_uuid,th.agent_id,th.work_id,th.agent_name ,th.agent_session_id,org_id,
           min(tg.event_timestamp)  as first_agent_time,tg.queue
           from cti_acd_event tg,v_report_agent_session th
           where tg.agent_session_uuid=th.agent_session_id
           and tg.action='bridge-agent-start'
           and tg.event_timestamp>=start_timestamp                   
           and tg.event_timestamp<=stop_timestamp                   
           and tg.cti_call_uuid is not null
           group  by cti_call_uuid
         )a  
     ) g on (c.cti_call_uuid = g.cti_call_uuid);
     commit;
#-----------更新-排队次数------------------------
            update report_cdr cr  
			inner join (
				 select cti_call_uuid, queuenum,duration1 from
				 (
					select cti_call_uuid ,
					count(q.id) as queuenum,sum(q.duration) as duration1
					from   report_queue  q
					group by cti_call_uuid
				 )  cs
			) as cc
			on cc.cti_call_uuid=cr.cti_call_uuid
			set cr.queue_count=cc.queuenum,cr.queue_time=cc.duration1;
#-------------更新转人工时间-----------------------------
            update report_cdr cr  
			inner join (
				 select cti_call_uuid,agent_id,work_id,agent_name,agent_session_id,org_id,first_agent_time,queue
				 from
				 (
				   select tg.cti_call_uuid,th.agent_id,th.work_id,th.agent_name ,th.agent_session_id,org_id,
				   min(tg.event_timestamp)  as first_agent_time,tg.queue
				   from cti_acd_event tg left join v_report_agent_session th on tg.agent_session_uuid=th.agent_session_id
				   where 
				   tg.event_timestamp>=start_timestamp
				   and tg.event_timestamp<=stop_timestamp
				   and tg.action='bridge-agent-start'
				   and tg.cti_call_uuid is not null  
				   group by tg.cti_call_uuid 
                   )a 
				) as b
				on b.cti_call_uuid=cr.cti_call_uuid
				set cr.agent_id=b.agent_id ,cr.work_id=b.work_id ,cr.queue=b.queue,
                 cr.agent_name=b.agent_name,cr.agent_session_id=b.agent_session_id,cr.first_agent_time=b.first_agent_time ;
#-----------更新-----首次应答时间和队列-------------------   
		   commit;
           update report_cdr cr  
			inner join (
			   select tg.cti_call_uuid,
			   max(tg.event_timestamp)  as first_agent_time,tg.queue
			   from cti_acd_event tg
			   where 
			   tg.event_timestamp>=start_timestamp
			   and tg.event_timestamp<=stop_timestamp
			   and tg.action='bridge-agent-start'
			   and tg.cti_call_uuid is not null
			   group by cti_call_uuid				
			) as cc
			on cc.cti_call_uuid=cr.cti_call_uuid
			set cr.queue=cc.queue,cr.first_agent_time=cc.first_agent_time;
            commit;
            
#更新半小时
    update report_cdr q set q.creat_time_30m=report_time_30m(creat_time)
    where q.creat_time_30m is null;
	end if;
 
	update report_plan_cdr set succedtime=current_timestamp 
	where type='update_queueinfo';
	commit;               
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_cdrdata_test1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_cdrdata_test1`()
begin
    declare start_id int default 0;
    declare end_id int;
	declare start_timestamp datetime;
	declare stop_timestamp datetime;

    
    set sql_safe_updates = 0;    
    select str_to_date(date_format(now(),'%Y-%m-%d'),'%Y-%m-%d') into  stop_timestamp from dual  ;
    select  str_to_date(date_sub(date_format(now(),'%Y-%m-%d'),interval 1 day),'%Y-%m-%d') into start_timestamp from dual  ;
    select ifnull(succedid,0)+1 into start_id from report_plan_cdr where type='update_queueinfo';
    select ifnull(max(c.id),0) into end_id from cti_channel c;
 
	

	if (end_id>start_id) then
#----更新记录表    
    update report_plan_cdr 
	set starttime=current_timestamp,startid=start_id,succedid=end_id
	where type='update_queueinfo';
 #---插入数据   
     insert into report_cdr(channel_uuid
      ,cti_call_uuid
      ,cti_call_direction
      ,cti_cc_direction
      ,orig_caller_number
      ,orig_callee_number
      ,orig_caller_type
      ,caller_number
      ,callee_number
      ,account_code
      ,creat_time
      ,answered_time
      ,cancel_time
      ,duration
      ,duration1
      ,billsec
      ,billsec1
      ,answered
      ,answered1
      ,waitsec
      ,waitsec1
      ,hangup_cause
      ,hangup_disposition
      ,org_id
      ,agent_count
      ,agent_time
      ,queue_count
      ,queue_time
      ,ivr_count
      ,ivr_time
      ,agent_id
      ,work_id
      ,agent_name
      ,agent_session_id
      ,first_agent_time
      ,queue)
      select 
      c.channel_uuid
      ,c.cti_call_uuid
      ,c.cti_call_direction
      ,c.cti_cc_direction
      ,c.orig_caller_number
      ,c.orig_callee_number
      ,c.cti_channel_type
      ,c.caller_number
      ,c.callee_number
      ,c.account_code
      ,c.created_time
      ,c.answered_time
      ,c.hangup_time
      ,c.duration
      ,c.duration1
      ,c.billsec
      ,c.billsec1
      ,c.answersec
      ,c.answersec1
      ,c.waitsec
      ,c.waitsec1
      ,c.hangup_cause
      ,c.hangup_disposition
      #,cti_bridge_agent_accum
      ,context
      ,nullif(d.counts,0) as agentcount
      ,nullif(agent_time ,0) as  agent_time
      ,nullif(e.queue_count,0) as  queue_count
      ,nullif(e.duration1 ,0) as queue_time
      ,nullif(f.ivr_count,0) as ivr_count
      ,nullif(f.ivr_time,0) as ivr_time
      ,g.agent_id
      ,g.work_id
      ,g.agent_name
      ,g.agent_session_id
      ,g.first_agent_time
      ,g.queue
      from
      (
		  select
		  channel_uuid,cti_call_uuid
		  ,cti_call_direction
		  ,cti_cc_direction
		  ,orig_caller_number
		  ,orig_callee_number
		  ,cti_channel_type
		  ,caller_number
		  ,callee_number
		  ,account_code
		  ,max(created_time) as created_time
		  ,answered_time
		  ,hangup_time
		  #---------------------时间---------------------------------
		  ,timestampdiff(second,created_time,hangup_time) as  duration
		  ,sec_to_time(timestampdiff(second,created_time,hangup_time)) as duration1       
		  ,timestampdiff(second,answered_time,hangup_time) as billsec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as billsec1  
				
		  ,timestampdiff(second,answered_time,hangup_time) as answersec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as answersec1        
		  ,timestampdiff(second,created_time,answered_time) as waitsec  
		  ,sec_to_time(timestampdiff(second,created_time,answered_time))   as waitsec1       
		  #------------------------------------------------------
		  ,hangup_cause
		  ,hangup_disposition
		  ,cti_bridge_agent_accum
		  ,context
		  from cti_channel  cc1
		  where
		  cc1.id>=start_id               
		  and cc1.id<=end_id         
		  and cc1.is_originator=1
		  and cc1.created_time is not null and cc1.cti_channel_type is not null and cc1.cti_call_uuid is not null
		  and cti_call_direction is not null
		  and cti_call_direction='inbound'
		  group by cc1.channel_uuid
      ) c 
      left join       #人工服务次数和时长   还有待修改主要是因为数据重复
      (select cti_call_uuid,count(1) as counts,
      sum(timestampdiff(second,td.entry_timestamp,td.exit_timestamp)) as agent_time
      from report_queue tc ,cti_agent_state td
      where
      tc.is_bridge_agent=1
      and tc.cti_call_uuid=td.call_uuid
      and td.new_state_name='st_in_queue_call'
      and tc.start_time>=start_timestamp                 
      and tc.start_time<=stop_timestamp                  
      group by tc.cti_call_uuid) d    on (c.cti_call_uuid = d.cti_call_uuid)
      left join          #排队次数,排队时长
     (select te.cti_call_uuid,count(1) as queue_count,sum(duration) as duration1
     from report_queue te
     where 1=1
     and te.start_time>=start_timestamp                
     and te.start_time<=stop_timestamp              
     group by te.cti_call_uuid) e      on (c.cti_call_uuid = e.cti_call_uuid)
      left join          #iVR应答次数
     (select tf.cti_call_uuid,count(1) as ivr_count,
     sum(timestampdiff(second,tf.start_time,tf.complete_time)) as ivr_time
     from cti_channel_execute tf
     where
	 application = 'ivr'
     and  tf.start_time>=start_timestamp                  
     and tf.start_time<=stop_timestamp                  
     group by tf.cti_call_uuid) f      on (c.cti_call_uuid = f.cti_call_uuid)
     
     left join  #首次人工接听时间
     (
         select cti_call_uuid,agent_id,work_id,agent_name,agent_session_id,org_id,first_agent_time,queue
         from
         (
           select tg.cti_call_uuid,th.agent_id,th.work_id,th.agent_name ,th.agent_session_id,org_id,
           min(tg.event_timestamp)  as first_agent_time,tg.queue
           from cti_acd_event tg,v_report_agent_session th
           where tg.agent_session_uuid=th.agent_session_id
           and tg.action='bridge-agent-start'
           and tg.event_timestamp>=start_timestamp                   
           and tg.event_timestamp<=stop_timestamp                   
           and tg.cti_call_uuid is not null
           group  by cti_call_uuid
         )a  
     ) g on (c.cti_call_uuid = g.cti_call_uuid);
     commit;
#================呼出========================================
    insert into report_cdr
  (
	    channel_uuid,cti_call_uuid,cti_call_direction,cti_cc_direction,orig_caller_number
	   ,orig_callee_number,orig_caller_type,caller_number,callee_number,account_code,creat_time,answered_time
	   ,cancel_time,duration,duration1,billsec,billsec1,answered,answered1,waitsec
	   ,waitsec1,hangup_cause,hangup_disposition,agent_time,org_id
       ,agent_id,work_id,agent_name,agent_session_id,first_agent_time
  )
  select   
         c.channel_uuid,c.cti_call_uuid,c.cti_call_direction,c.cti_cc_direction,c.orig_caller_number
		,c.orig_callee_number,c.cti_channel_type,c.caller_number,c.callee_number,c.account_code
		,c.created_time,c.answered_time,c.hangup_time,c.duration,c.duration1,c.billsec,c.billsec1
		,c.answersec,c.answersec1,c.waitsec,c.waitsec1,c.hangup_cause,c.hangup_disposition
        ,c.answersec cti_bridge_agent_accum,c.context
        ,d.agent_id,d.work_id,d.agent_name,d.agent_session_id,d.first_agent_time
        from
        (
		  select
		   cc1.channel_uuid,cc1.cti_call_uuid
		  ,cc1.cti_call_direction
		  ,cc1.cti_cc_direction
		  ,cc1.orig_caller_number
		  ,cc1.orig_callee_number
		  ,cc1.cti_channel_type
		  ,cc1.caller_number
		  ,cc1.callee_number
		  ,cc1.account_code
		  ,max(cc1.created_time) as created_time
		  ,cc1.answered_time
		  ,cc1.hangup_time
		,timestampdiff(second,cc1.created_time,cc1.hangup_time) as  duration
		,sec_to_time(timestampdiff(second,cc1.created_time,cc1.hangup_time)) as duration1       
		,timestampdiff(second,cc1.answered_time,cc1.hangup_time) as billsec
		,sec_to_time(timestampdiff(second,cc1.answered_time,cc1.hangup_time))   as billsec1 
		,timestampdiff(second,cc1.answered_time,cc1.hangup_time) as answersec
		,sec_to_time(timestampdiff(second,cc1.answered_time,cc1.hangup_time))   as answersec1        
		,timestampdiff(second,cc1.created_time,cc1.answered_time) as waitsec  
		,sec_to_time(timestampdiff(second,cc1.created_time,cc1.answered_time))   as waitsec1            
	    ,cc1.hangup_cause
	    ,cc1.hangup_disposition
		,cc1.context
		from cti_channel  cc1
		where
		cc1.id>=start_id              
		and cc1.id<=end_id
		and cc1.is_originator='0'
		and cc1.cti_call_direction='outbound'
        group by   cc1.channel_uuid
        ) c
	left join  #更新座席信息
	(select ta.call_uuid,tb.agent_id,tb.work_id,tb.agent_name,tb.agent_session_id,
           tb.org_id,min(ta.entry_timestamp) as  first_agent_time
    from cti_agent_state ta,cti_agent_session tb
    where ta.agent_session_id=tb.agent_session_id
    and ta.new_state_name='st_dialing_out'
    and ta.entry_timestamp>=start_timestamp                 
    and ta.entry_timestamp<=stop_timestamp                 
    group by ta.call_uuid,tb.agent_id,tb.work_id,tb.agent_name,tb.agent_session_id,tb.org_id
     ) d on c.cti_call_uuid=d.call_uuid;
        
#==============本地呼叫=======================================      
     insert into report_cdr(channel_uuid
      ,cti_call_uuid
      ,cti_call_direction
      ,cti_cc_direction
      ,orig_caller_number
      ,orig_callee_number
      ,orig_caller_type
      ,caller_number
      ,callee_number
      ,account_code
      ,creat_time
      ,answered_time
      ,cancel_time
      ,duration
      ,duration1
      ,billsec
      ,billsec1
      ,answered
      ,answered1
      ,waitsec
      ,waitsec1
      ,hangup_cause
      ,hangup_disposition
      ,org_id
      ,agent_count
      ,agent_time
      ,queue_count
      ,queue_time
      ,ivr_count
      ,ivr_time
      ,agent_id
      ,work_id
      ,agent_name
      ,agent_session_id
      ,first_agent_time
      ,queue)
      select 
      c.channel_uuid
      ,c.cti_call_uuid
      ,c.cti_call_direction
      ,c.cti_cc_direction
      ,c.orig_caller_number
      ,c.orig_callee_number
      ,c.cti_channel_type
      ,c.caller_number
      ,c.callee_number
      ,c.account_code
      ,c.created_time
      ,c.answered_time
      ,c.hangup_time
      ,c.duration
      ,c.duration1
      ,c.billsec
      ,c.billsec1
      ,c.answersec
      ,c.answersec1
      ,c.waitsec
      ,c.waitsec1
      ,c.hangup_cause
      ,c.hangup_disposition
      #,cti_bridge_agent_accum
      ,context
      ,nullif(d.counts,0) as agentcount
      ,nullif(agent_time ,0) as  agent_time
      ,nullif(e.queue_count,0) as  queue_count
      ,nullif(e.duration1 ,0) as queue_time
      ,nullif(f.ivr_count,0) as ivr_count
      ,nullif(f.ivr_time,0) as ivr_time
      ,g.agent_id
      ,g.work_id
      ,g.agent_name
      ,g.agent_session_id
      ,g.first_agent_time
      ,g.queue
      from
      (
		  select
		  channel_uuid,cti_call_uuid
		  ,cti_call_direction
		  ,cti_cc_direction
		  ,orig_caller_number
		  ,orig_callee_number
		  ,cti_channel_type
		  ,caller_number
		  ,callee_number
		  ,account_code
		  ,max(created_time) as created_time
		  ,answered_time
		  ,hangup_time
		  #---------------------时间---------------------------------
		  ,timestampdiff(second,created_time,hangup_time) as  duration
		  ,sec_to_time(timestampdiff(second,created_time,hangup_time)) as duration1       
		  ,timestampdiff(second,answered_time,hangup_time) as billsec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as billsec1  
				
		  ,timestampdiff(second,answered_time,hangup_time) as answersec
		  ,sec_to_time(timestampdiff(second,answered_time,hangup_time))   as answersec1        
		  ,timestampdiff(second,created_time,answered_time) as waitsec  
		  ,sec_to_time(timestampdiff(second,created_time,answered_time))   as waitsec1       
		  #------------------------------------------------------
		  ,hangup_cause
		  ,hangup_disposition
		  ,cti_bridge_agent_accum
		  ,context
		  from v_report_channel  cc1
		  where
		  cc1.id>=start_id               
		  and cc1.id<=end_id         
		  and cc1.is_originator=1
		  and cc1.created_time is not null and cc1.cti_channel_type is not null and cc1.cti_call_uuid is not null
		  and cti_call_direction is not null
		  and cti_call_direction='local'
		  and substr(destination_number,0,13)<>'cti_eavesdrop'
		  group by cc1.channel_uuid
      ) c 
      left join       #人工服务次数和时长
      (select cti_call_uuid,count(1) as counts,sum(timestampdiff(second,td.entry_timestamp,td.exit_timestamp)) as agent_time
      from report_queue tc ,cti_agent_state td
      where
      tc.is_bridge_agent=1
      and tc.cti_call_uuid=td.call_uuid
      and td.new_state_name='st_in_queue_call'
      and tc.start_time>=start_timestamp                 
      and tc.start_time<=stop_timestamp                  
     group by tc.cti_call_uuid) d    on (c.cti_call_uuid = d.cti_call_uuid)
      left join          #排队次数,排队时长
     (select te.cti_call_uuid,count(1) as queue_count,sum(duration) as duration1
     from report_queue te
     where 1=1
     and te.start_time>=start_timestamp                
     and te.start_time<=stop_timestamp              
     group by te.cti_call_uuid) e      on (c.cti_call_uuid = e.cti_call_uuid)
      left join        #ivr
     (select tf.cti_call_uuid,count(1) as ivr_count,
     sum(timestampdiff(second,tf.start_time,tf.complete_time)) as ivr_time
     from cti_channel_execute tf
     where
      application = 'ivr'
     and  tf.start_time>=start_timestamp                  
     and  tf.start_time<=stop_timestamp                  
     group by tf.cti_call_uuid) f      on (c.cti_call_uuid = f.cti_call_uuid)
     
     left join  #首次人工接听时间
     (
         select cti_call_uuid,agent_id,work_id,agent_name,agent_session_id,org_id,first_agent_time,queue
         from
         (
           select tg.cti_call_uuid,th.agent_id,th.work_id,th.agent_name ,th.agent_session_id,org_id,
           min(tg.event_timestamp)  as first_agent_time,tg.queue
           from cti_acd_event tg,v_report_agent_session th
           where tg.agent_session_uuid=th.agent_session_id
           and tg.action='bridge-agent-start'
           and tg.event_timestamp>=start_timestamp                   
           and tg.event_timestamp<=stop_timestamp                   
           and tg.cti_call_uuid is not null
           group  by cti_call_uuid
         )a  
     ) g on (c.cti_call_uuid = g.cti_call_uuid);
     commit;
#-----------更新-排队次数------------------------
            update report_cdr cr  
			inner join (
				 select cti_call_uuid, queuenum,duration1 from
				 (
					select cti_call_uuid ,
					count(q.id) as queuenum,sum(q.duration) as duration1
					from   report_queue  q
					group by cti_call_uuid
				 )  cs
			) as cc
			on cc.cti_call_uuid=cr.cti_call_uuid
			set cr.queue_count=cc.queuenum,cr.queue_time=cc.duration1;
#-------------更新转人工时间-----------------------------
            update report_cdr cr  
			inner join (
				 select cti_call_uuid,agent_id,work_id,agent_name,agent_session_id,org_id,first_agent_time,queue
				 from
				 (
				   select tg.cti_call_uuid,th.agent_id,th.work_id,th.agent_name ,th.agent_session_id,org_id,
				   min(tg.event_timestamp)  as first_agent_time,tg.queue
				   from cti_acd_event tg left join v_report_agent_session th on tg.agent_session_uuid=th.agent_session_id
				   where 
				   tg.event_timestamp>=start_timestamp
				   and tg.event_timestamp<=stop_timestamp
				   and tg.action='bridge-agent-start'
				   and tg.cti_call_uuid is not null  
				   group by tg.cti_call_uuid 
                   )a 
				) as b
				on b.cti_call_uuid=cr.cti_call_uuid
				set cr.agent_id=b.agent_id ,cr.work_id=b.work_id ,cr.queue=b.queue,
                 cr.agent_name=b.agent_name,cr.agent_session_id=b.agent_session_id,cr.first_agent_time=b.first_agent_time ;
#-----------更新-----首次应答时间和队列-------------------   
		   commit;
           update report_cdr cr  
			inner join (
			   select tg.cti_call_uuid,
			   max(tg.event_timestamp)  as first_agent_time,tg.queue
			   from cti_acd_event tg
			   where 
			   tg.event_timestamp>=start_timestamp
			   and tg.event_timestamp<=stop_timestamp
			   and tg.action='bridge-agent-start'
			   and tg.cti_call_uuid is not null
			   group by cti_call_uuid				
			) as cc
			on cc.cti_call_uuid=cr.cti_call_uuid
			set cr.queue=cc.queue,cr.first_agent_time=cc.first_agent_time;
            commit;
            
#更新半小时
           update report_cdr q set q.creat_time_30m=report_time_30m(creat_time)
           where q.creat_time_30m is null;
	end if;
 
	update report_plan_cdr set succedtime=current_timestamp 
	where type='update_queueinfo';
	commit;               
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_cti_agent_jx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_cti_agent_jx`(
                start_time datetime,
                end_time   datetime
)
begin
  declare start_time1 datetime;
    declare end_time1 datetime;
  declare _err int default 0;
  declare continue handler for sqlexception set _err=1;
    
    set @start_time=report_time_30m(start_time);
    set @end_time=report_time_30m(end_time);
    select @start_time;
    select @end_time;
    set sql_safe_updates = 0;
    set _err=0;
    set start_time1=start_time;
  
 

 
    
    label_p1:loop

    delete from report_agent_tmp;
          delete from report_agent
            where calldate>=@start_time
        and calldate<=@end_time;
    if (_err=1) then
      select '1leave label_p1';
      leave label_p1;
    end if;
        select '1 delete success';       
        
   label_p2:loop

      start transaction; 
      select 'start transaction';  
 
        insert into report_agent_tmp(calldate,agent_org_id,agent_name,agent_work_id,agent_org_name)
      select r30m.tjdate,ag1.org_id,ag1.agent_name,ag1.work_id,ag1.name
      from 
      (
        select tjdate 
        from report_date
        where tjdate>=@start_time
        and tjdate<=@end_time
      ) as r30m 
      left join (
        select distinct ss.org_id,ts.name,ss.work_id,ss.agent_name
        ,report_time_30m(cas.entry_timestamp) as r30m
        from v_report_cti_agent_state as cas,v_report_cti_agent_session as ss
                ,t_sys_organization ts
        where cas.agent_session_id=ss.agent_session_id and ss.org_id=ts.domain
        and               
        (cas.new_state_name='st_on_break'
        or cas.new_state_name='st_holding'
        or cas.new_state_name='st_offering'
        or cas.new_state_name='st_in_queue_call'
        or (cas.new_state_name='st_in_innercall' and cas.old_state_name='st_outgoing_innercall')
        or cas.new_state_name='st_in_outbound_call'
        or cas.new_state_name='st_post_call'
        or (cas.new_state_name='st_idle' and cas.old_state_name='st_logged_out')
        )
        and report_time_30m(entry_timestamp)>=@start_time
        and report_time_30m(entry_timestamp)<=@end_time
      )as ag1
      on r30m.tjdate=ag1.r30m;

      if (_err=1) then
                select '2 leave insert';
        leave label_p2;
      end if;
            select '2—1 insert success';        

        update report_agent_tmp as ra 
      inner join(
        select cas11.org_id,cas11.work_id,cas11.agent_name,login_timestamp_30m
        ,count(cas11.agent_id) as r1,sum(timestampdiff(second,cas11.login_timestamp,cas11.logout_timestamp)) as d1
        from v_report_cti_agent_session as cas11
        where
        report_time_30m(login_timestamp_30m)>=@start_time
        and report_time_30m(login_timestamp_30m)<=@end_time
        group by cas11.org_id,work_id,agent_name,login_timestamp_30m
      )as ras1
      on  ra.agent_name=ras1.agent_name
      and ra.agent_org_id=ras1.org_id
      and ra.agent_work_id=ras1.work_id
      and ra.calldate=ras1.login_timestamp_30m
      set ra.login=ras1.r1,ra.logintime=ras1.d1;

      if (_err=1) then
        select '2-2 leave update';
        leave label_p2;
      end if;            
            select '2—2 update success';
 
      update report_agent_tmp as ra 
      inner join(
        select cas11.org_id,cas11.work_id,cas11.agent_name
        ,report_time_30m(entry_timestamp) as entry_timestamp_30m
        ,count(ca.id) as r1,sum(ca.duration) as d1
        from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
        where 
        ca.agent_session_id=cas11.agent_session_id
        and ca.new_state_name='st_on_break'
        and report_time_30m(entry_timestamp)>=@start_time
        and report_time_30m(entry_timestamp)<=@end_time
        group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
        )as ras2
      on ra.agent_name=ras2.agent_name
      and ra.agent_org_id=ras2.org_id
      and ra.agent_work_id=ras2.work_id
      and ra.calldate=ras2.entry_timestamp_30m
      set ra.busy=ras2.r1,ra.busytime=round(ras2.d1/1000);            
      if (_err=1) then
        select '2-3 leave update';
        leave label_p2;
      end if;    
            select '2-3 update success';            
 
        update report_agent_tmp as ra
      inner join(
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
        ,count(ca.entry_timestamp) as r1,sum(ca.duration) as d1
                from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
                where ca.agent_session_id=cas11.agent_session_id
                and ca.new_state_name='st_holding'
        and report_time_30m(entry_timestamp)>=@start_time
        and report_time_30m(entry_timestamp)<=@end_time 
        group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
      )as ras3
      on ra.agent_name=ras3.agent_name
      and ra.agent_org_id=ras3.org_id
      and ra.agent_work_id=ras3.work_id
      and ra.calldate=ras3.entry_timestamp_30m
      set ra.hold=ras3.r1,ra.holdtime=round(ras3.d1/1000);            
      if (_err=1) then
        select '2-4 leave update';
        leave label_p2;
      end if;    
            select '2-4 update success';              
            

    update report_agent_tmp as ra
      inner join(
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
                ,count(ca.entry_timestamp) as r1
                from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
                where ca.agent_session_id=cas11.agent_session_id
        and ca.new_state_name='st_offering'
        and report_time_30m(entry_timestamp)>=@start_time
        and report_time_30m(entry_timestamp)<=@end_time 
        group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
      )as ras4
      on ra.agent_name=ras4.agent_name
      and ra.agent_org_id=ras4.org_id
      and ra.agent_work_id=ras4.work_id
      and ra.calldate=ras4.entry_timestamp_30m
      set ra.toperson=ras4.r1; 
      if (_err=1) then
        select '2-5 leave update';
        leave label_p2;
      end if;    
            select '2-5 update success';              
 

                update report_agent_tmp as ra
      inner join(
        select a.org_id,a.work_id,a.agent_name,a.entry_timestamp_30m,count(channel_uuid) as r1
        from (
          select ca.channel_uuid,ca.agent_session_id,ca.new_state_name,report_time_30m(ca.entry_timestamp) entry_timestamp_30m
          ,cas11.org_id,cas11.work_id,cas11.agent_name
          , max(entry_timestamp) 
          from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
          where new_state_name='st_in_queue_call'
          and report_time_30m(entry_timestamp)>=@start_time
          and report_time_30m(entry_timestamp)<=@end_time 
          and ca.agent_session_id=cas11.agent_session_id
          group by channel_uuid
          )a
              group by a.org_id,a.work_id,a.agent_name,a.entry_timestamp_30m
      )as cas2
    on ra.agent_name=cas2.agent_name
       and ra.agent_org_id=cas2.org_id
       and ra.agent_work_id=cas2.work_id
       and ra.calldate=cas2.entry_timestamp_30m
     set ra.topersonsucceed=r1  ;
            if (_err=1) then
        select '2-6 leave update';
        leave label_p2;
      end if;    
            select '2-6 update success';  
       
 
    update  report_agent_tmp as ra
      inner join(
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
        ,sum(ca.duration) as d1
        from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
        where 
        ca.agent_session_id=cas11.agent_session_id
        and ca.new_state_name='st_in_queue_call' 
        and ca.call_uuid is not null
        and report_time_30m(entry_timestamp)>=@start_time
        and report_time_30m(entry_timestamp)<@end_time 
        group by cas11.org_id,cas11.work_id,cas11.agent_name
        ,report_time_30m(ca.entry_timestamp)
      )as ras3
      on ra.agent_name=ras3.agent_name
      and ra.agent_org_id=ras3.org_id
      and ra.agent_work_id=ras3.work_id
      and ra.calldate=ras3.entry_timestamp_30m
      set  ra.TOSUCCEDTIME=round(ras3.d1/1000); 
      if (_err=1) then
        select '2-7 leave update';
        leave label_p2;
      end if; 
            select '2—7 update success';
   
  update  report_agent_tmp as ra
      inner join(
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
        ,count(ca.id) as r1
        from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
        where 
        ca.agent_session_id=cas11.agent_session_id
        and (ca.new_state_name='st_in_innercall' and ca.old_state_name='st_outgoing_innercall')
        and report_time_30m(entry_timestamp)>=@start_time
        and report_time_30m(entry_timestamp)<=@end_time
        group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
        
      )as ras4
      on ra.agent_name=ras4.agent_name
      and ra.agent_org_id=ras4.org_id
      and ra.agent_work_id=ras4.work_id
      and ra.calldate=ras4.entry_timestamp_30m
      set ra.innercall=ras4.r1; 
            if (_err=1) then
        select '2-8 leave update';
        leave label_p2;
      end if;            
            select '2—8 update success';
   
   
  update  report_agent_tmp as ra
      inner join(
                select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
            ,sum(ca.duration) as d1
            from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
            where 
            ca.agent_session_id=cas11.agent_session_id
            and (ca.new_state_name='st_in_innercall' and ca.old_state_name='st_outgoing_innercall')
            and ca.call_uuid is not null
            and report_time_30m(entry_timestamp)>=@start_time
            and report_time_30m(entry_timestamp)<=@end_time
            group by cas11.org_id,cas11.work_id,cas11.agent_name
            ,report_time_30m(ca.entry_timestamp)
      )as ras3
      on ra.agent_name=ras3.agent_name
      and ra.agent_org_id=ras3.org_id
      and ra.agent_work_id=ras3.work_id
      and ra.calldate=ras3.entry_timestamp_30m
      set ra.innertime=round(ras3.d1/1000);           
      if (_err=1) then
        select '2-9 leave update';
        leave label_p2;
      end if;            
            select '2—9 update success';
            
   
 update report_agent_tmp  ra 
    inner join 
    (
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
    ,count(ca.entry_timestamp) as r1,sum(ca.duration) as d1
    from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
    where 
    ca.agent_session_id=cas11.agent_session_id
    and ca.new_state_name='st_in_inbound_call'
    and report_time_30m(entry_timestamp)>=@start_time
    and report_time_30m(entry_timestamp)<=@end_time
    group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
    ) as ras7
    on ra.agent_name=ras7.agent_name
  and ra.agent_org_id=ras7.org_id
  and ra.agent_work_id=ras7.work_id
  and ra.calldate=ras7.entry_timestamp_30m
    set ra.consult=ras7.r1,ra.consulttime=round(ras7.d1/1000); 
        if (_err=1) then
        select '2-10 leave update';
        leave label_p2;
      end if;            
            select '2—10 update success';
    
 
update report_agent_tmp  ra 
    inner join 
    (
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
    ,count(ca.id) as r1,sum(ca.duration) as d1
    from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
    where 
    ca.agent_session_id=cas11.agent_session_id
    and ca.new_state_name='st_post_call'
    and ca.old_state_name<>'st_pending'
    and report_time_30m(entry_timestamp)>=@start_time
    and report_time_30m(entry_timestamp)<=@end_time
    group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
    ) as ras7
    on ra.agent_name=ras7.agent_name
  and ra.agent_org_id=ras7.org_id
  and ra.agent_work_id=ras7.work_id
  and ra.calldate=ras7.entry_timestamp_30m
    set ra.postcall=ras7.r1;  
        if (_err=1) then
        select '2-11 leave update';
        leave label_p2;
      end if;            
            select '2—11 update success';
 
 update report_agent_tmp  ra 
    inner join 
    (
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
    ,count(ca.id) as r1,sum(ca.duration) as d1
    from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
    where 
    ca.agent_session_id=cas11.agent_session_id
    and ca.new_state_name='st_post_call'
    and report_time_30m(entry_timestamp)>=@start_time
    and report_time_30m(entry_timestamp)<=@end_time
    group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
    ) as ras7
    on ra.agent_name=ras7.agent_name
  and ra.agent_org_id=ras7.org_id
  and ra.agent_work_id=ras7.work_id
  and ra.calldate=ras7.entry_timestamp_30m
  set ra.postcalltime=round(ras7.d1/1000); 
      if (_err=1) then
        select '2-12 leave update';
        leave label_p2;
      end if;            
            select '2—12 update success';

update report_agent_tmp  ra 
    inner join 
    (
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
    ,count(ca.id) as r1,sum(ca.duration) as d1
    from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
    where 
    ca.agent_session_id=cas11.agent_session_id
    and ca.new_state_name='st_offering'
    and report_time_30m(entry_timestamp)>=@start_time
    and report_time_30m(entry_timestamp)<=@end_time
    group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
    ) as ras8
    on ra.agent_name=ras8.agent_name
  and ra.agent_org_id=ras8.org_id
  and ra.agent_work_id=ras8.work_id
  and ra.calldate=ras8.entry_timestamp_30m
  set ra.bell=ras8.r1,ra.belltime=round(ras8.d1/1000); 
        if (_err=1) then
        select '2-13 leave update';
        leave label_p2;
      end if;            
            select '2—13 update success';

update report_agent_tmp  ra 
    inner join 
    (
      select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(ca.entry_timestamp) as entry_timestamp_30m
  ,count(ca.id) as r1
  from v_report_cti_agent_state as ca,v_report_cti_agent_state as ca1,v_report_cti_agent_session as cas11
  where 
  ca.id=ca1.pre_rec_id
  and ca.new_state_name='st_offering' and ca.duration/1000<=20
  and ca1.new_state_name='st_in_queue_call'
  and ca.agent_session_id=cas11.agent_session_id
  and report_time_30m(ca.entry_timestamp)>=@start_time
  and report_time_30m(ca.entry_timestamp)<=@end_time
  group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
    ) as ras9
    on ra.agent_name=ras9.agent_name
  and ra.agent_org_id=ras9.org_id
  and ra.agent_work_id=ras9.work_id
  and ra.calldate=ras9.entry_timestamp_30m
  set ra.to20=ras9.r1; 
      if (_err=1) then
        select '2-14 leave update';
        leave label_p2;
      end if;            
            select '2—14 update success';

update report_agent_tmp  ra 
    inner join 
    (
     select a.org_id,a.work_id,a.agent_name,a.entry_timestamp_30m,count(channel_uuid) as r1
      from (
    select ca.channel_uuid,ca.agent_session_id,ca.new_state_name,report_time_30m(ca.entry_timestamp) entry_timestamp_30m
    ,cas11.org_id,cas11.work_id,cas11.agent_name
    , max(entry_timestamp) as  rn
    from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
    where new_state_name='st_in_outbound_call'
    and report_time_30m(entry_timestamp)>=@start_time
    and report_time_30m(entry_timestamp)<=@end_time 
    and ca.agent_session_id=cas11.agent_session_id
        group by channel_uuid
      )a
    group by a.org_id,a.work_id,a.agent_name,a.entry_timestamp_30m
    ) as cas2
    on ra.agent_name=cas2.agent_name
    and ra.agent_org_id=cas2.org_id
    and ra.agent_work_id=cas2.work_id
    and ra.calldate=cas2.entry_timestamp_30m
  set outcall=r1;  
      if (_err=1) then
        select '2-15 leave update';
        leave label_p2;
      end if;            
            select '2—15 update success';
 
 
    update report_agent_tmp  ra 
      inner join 
      (
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
        ,sum(ca.duration) as d1
        from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
        where 
        ca.agent_session_id=cas11.agent_session_id
        and ca.new_state_name='st_in_outbound_call' 
        and ca.call_uuid is not null
        and report_time_30m(entry_timestamp)>=@start_time
        and report_time_30m(entry_timestamp)<@end_time 
        group by cas11.org_id,cas11.work_id,cas11.agent_name
        ,report_time_30m(ca.entry_timestamp)
      ) as ras3
      on ra.agent_name=ras3.agent_name
      and ra.agent_org_id=ras3.org_id
      and ra.agent_work_id=ras3.work_id
      and ra.calldate=ras3.entry_timestamp_30m
      set ra.outcalltime=round(ras3.d1/1000);   
      if (_err=1) then
        select '2-16 leave update';
        leave label_p2;
      end if;            
            select '2—16 update success';
          
 
   
 
     
            
  
      commit;
    
            
      label_p3:loop
      
        start transaction; 
        select 'start transaction2'; 
                
                delete from report_agent 
        where calldate>=@start_time
        and calldate<=@end_time;
                
        if (_err=1) then
          select '3-1 leave update';
          leave label_p2;
        end if;    
        select '3—1 delete success';                 
                
          insert into report_agent(calldate,agent_id,agent_session_id,agent_org_id,agent_name,agent_work_id,toperson,topersonsucceed,login,
          busy,hold,postcall,innercall,bell,to20,tosuccedtime,logintime,busytime,holdtime,postcalltime,innertime,belltime,
          avgtime,avglogintime,avgbusytime,avgholetime,avgpostcalltime,avginnertime,avgbelltime,avgworktime,persuccess,perfree,perwork,perhold,peraway,perto20,outcall
          ,outcalltime,avgoutcalltime,consult,consulttime,agent_org_name)
          select 
          calldate,agent_id,agent_session_id,agent_org_id,agent_name,agent_work_id,toperson,topersonsucceed,login,
          busy,hold,postcall,innercall,bell,to20,tosuccedtime,logintime,busytime,holdtime,postcalltime,innertime,belltime,
          avgtime,avglogintime,avgbusytime,avgholetime,avgpostcalltime,avginnertime,avgbelltime,avgworktime,persuccess,perfree,perwork,perhold,peraway,perto20,outcall
          ,outcalltime,avgoutcalltime,consult,consulttime,agent_org_name
                from report_agent_tmp;
                    
                
        if (_err=1) then
          select '3-2 leave insert';
          leave label_p2;
        end if;    
        select '3-2 insert success';  
                
        select 'commit';
        commit;
        leave label_p2;                
      end loop label_p3;                
            
            
        end loop label_p2;
      
        select 'rollback';
        rollback;
        leave label_p1;        
    end loop label_p1;
  select 'end p_load_cti_agent_jx';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_LOAD_CTI_AGENT_JX_BACK` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_LOAD_CTI_AGENT_JX_BACK`(
                START_TIME DATETIME,
                END_TIME   DATETIME
)
BEGIN
	declare state int default 0;
    DECLARE end_id int;
	DECLARE _err int default 0;
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION set _err=1;
    
    set @START_TIME=REPORT_TIME_30M(START_TIME);
    set @END_TIME=REPORT_TIME_30M(END_TIME);
    SELECT concat('@START_TIME:',@START_TIME);
    SELECT concat('@END_TIME',@END_TIME);
    SET SQL_SAFE_UPDATES = 0;
    set _err=0;
    
    label_p1:loop
# -------------删除临时表-----------------------------
		DELETE from REPORT_AGENT_TMP;
		if (_err=1) then
			SELECT '1LEAVE label_p1';
			LEAVE label_p1;
		end if;
        SELECT '1 delete success';       
        
   label_p2:loop

			START TRANSACTION; 
			SELECT 'START TRANSACTION';  
 #-----------------录入完整状态数据-------------------- 2-1  #########        
				insert into REPORT_AGENT_TMP(CALLDATE,AGENT_ORG_ID,AGENT_NAME,AGENT_WORK_ID)
			select R30M.TJDATE,ag1.ORG_ID,ag1.AGENT_NAME,ag1.WORK_ID
			from 
			(
				select TJDATE 
				from REPORT_DATE
				where TJDATE>=@START_TIME
				and TJDATE<=@END_TIME
			) as R30M 
			left join (
				select distinct ss.ORG_ID,ss.WORK_ID,ss.AGENT_NAME
				,REPORT_TIME_30M(cas.ENTRY_TIMESTAMP) as R30M
				from V_REPORT_AGENTSTATE as cas,V_REPORT_AGENT_SESSION as ss
				where cas.AGENT_SESSION_ID=ss.AGENT_SESSION_ID
				and               
				(cas.NEW_STATE_NAME='st_on_break'
				or cas.NEW_STATE_NAME='st_holding'
				or cas.NEW_STATE_NAME='st_offering'
				or cas.NEW_STATE_NAME='st_in_queue_call'
				or (cas.NEW_STATE_NAME='st_in_innercall' and cas.OLD_STATE_NAME='st_outgoing_innercall')
				or cas.NEW_STATE_NAME='st_in_outbound_call'
				or cas.NEW_STATE_NAME='st_post_call'
				or (cas.NEW_STATE_NAME='st_idle' and cas.OLD_STATE_NAME='st_logged_out')
				)
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME
			)as ag1
			on R30M.TJDATE=ag1.R30M;

			if (_err=1) then
                SELECT '2 LEAVE insert';
				LEAVE label_p2;
			end if;
            SELECT '2—1 insert success';        
#-------------更新签入次数与签入时长-----------------------2-2
		    update REPORT_AGENT_TMP as ra 
			inner join(
				select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,LOGIN_TIMESTAMP_30M
				,count(cas11.AGENT_ID) as r1,sum(TIMESTAMPDIFF(SECOND,cas11.LOGIN_TIMESTAMP,cas11.LOGOUT_TIMESTAMP)) as d1
				from V_REPORT_AGENT_SESSION as cas11
				where
				LOGIN_TIMESTAMP_30M>=@START_TIME
				and LOGIN_TIMESTAMP_30M<=@END_TIME
				group by cas11.ORG_ID,WORK_ID,AGENT_NAME,LOGIN_TIMESTAMP_30M
			)as ras1
			on  ra.AGENT_NAME=ras1.AGENT_NAME
			and ra.AGENT_ORG_ID=ras1.ORG_ID
			and ra.AGENT_WORK_ID=ras1.WORK_ID
			and ra.CALLDATE=ras1.LOGIN_TIMESTAMP_30M
			set ra.LOGIN=ras1.r1,ra.LOGINTIME=ras1.d1;

			if (_err=1) then
				SELECT '2-2 LEAVE UPDATE';
				LEAVE label_p2;
			end if;            
            SELECT '2—2 UPDATE success';
 #-------------更新示忙次数与示忙时长-----------------------2-3           
			update REPORT_AGENT_TMP as ra 
			inner join(
				select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME
				,REPORT_TIME_30M(ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
				,count(ca.id) as r1,sum(ca.duration) as d1
				from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11
				where 
				ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
				and ca.NEW_STATE_NAME='st_on_break'
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME
				group by cas11.ORG_ID,WORK_ID,AGENT_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
				)as ras2
			on ra.AGENT_NAME=ras2.AGENT_NAME
			and ra.AGENT_ORG_ID=ras2.ORG_ID
			and ra.AGENT_WORK_ID=ras2.WORK_ID
			and ra.CALLDATE=ras2.ENTRY_TIMESTAMP_30M
			set ra.BUSY=ras2.r1,ra.BUSYTIME=round(ras2.d1/1000);            
			if (_err=1) then
				SELECT '2-3 LEAVE UPDATE';
				LEAVE label_p2;
			end if;    
            SELECT '2-3 UPDATE success';            
 #-------------更新保持次数与保持时长-----------------------2-4           
        update REPORT_AGENT_TMP as ra
			inner join(
				select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,REPORT_TIME_30M(ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
				,count(ca.ENTRY_TIMESTAMP) as r1,sum(ca.duration) as d1
                from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11
                where ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
                and ca.NEW_STATE_NAME='st_holding'
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME 
				group by cas11.ORG_ID,WORK_ID,AGENT_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
			)as ras3
			on ra.AGENT_NAME=ras3.AGENT_NAME
			and ra.AGENT_ORG_ID=ras3.ORG_ID
			and ra.AGENT_WORK_ID=ras3.WORK_ID
			and ra.CALLDATE=ras3.ENTRY_TIMESTAMP_30M
			set ra.HOLD=ras3.r1,ra.HOLDTIME=round(ras3.d1/1000);            
			if (_err=1) then
				SELECT '2-4 LEAVE UPDATE';
				LEAVE label_p2;
			end if;    
            SELECT '2-4 UPDATE success';              
            
#-------------更新转人工次数-----------------------2-5		
		update REPORT_AGENT_TMP as ra
			inner join(
				select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,REPORT_TIME_30M(ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
                ,count(ca.ENTRY_TIMESTAMP) as r1
                from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11
                where ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
				and ca.NEW_STATE_NAME='st_offering'
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME 
				group by cas11.ORG_ID,WORK_ID,AGENT_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
			)as ras4
			on ra.AGENT_NAME=ras4.AGENT_NAME
			and ra.AGENT_ORG_ID=ras4.ORG_ID
			and ra.AGENT_WORK_ID=ras4.WORK_ID
			and ra.CALLDATE=ras4.ENTRY_TIMESTAMP_30M
			set ra.TOPERSON=ras4.r1; 
			if (_err=1) then
				SELECT '2-5 LEAVE UPDATE';
				LEAVE label_p2;
			end if;    
            SELECT '2-5 UPDATE success';              
 
#-------------更新通话次数与通话时长-----------------------2-6          
		            update REPORT_AGENT_TMP as ra
			inner join(
				select a.ORG_ID,a.WORK_ID,a.AGENT_NAME,a.ENTRY_TIMESTAMP_30M,count(CHANNEL_UUID) as r1
				from (
					select ca.CHANNEL_UUID,ca.AGENT_SESSION_ID,ca.NEW_STATE_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP) ENTRY_TIMESTAMP_30M
					,cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME
					, max(ENTRY_TIMESTAMP) 
					from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11
					where NEW_STATE_NAME='st_in_queue_call'
					and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
					and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME 
					and ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
					group by CHANNEL_UUID
					)a
	            group by a.ORG_ID,a.WORK_ID,a.AGENT_NAME,a.ENTRY_TIMESTAMP_30M
			)as cas2
		on ra.AGENT_NAME=cas2.AGENT_NAME
       and ra.AGENT_ORG_ID=cas2.ORG_ID
       and ra.AGENT_WORK_ID=cas2.WORK_ID
       and ra.CALLDATE=cas2.ENTRY_TIMESTAMP_30M
	   set ra.TOPERSONSUCCEED=r1  ;
            if (_err=1) then
				SELECT '2-6 LEAVE UPDATE';
				LEAVE label_p2;
			end if;    
            SELECT '2-6 UPDATE success';  
 #-------------------------------------------------------------2-7  
 	update  REPORT_AGENT_TMP as ra
			inner join(
				select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,REPORT_TIME_30M(ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
				,sum(ca.duration) as d1
				from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11,CTI_CHANNEL c
				where 
				ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
				and ca.CALL_UUID=c.CTI_CALL_UUID
				and (
				ca.NEW_STATE_NAME<>'st_holding' or  ca.NEW_STATE_NAME<>'st_waiting'  
				or  ca.NEW_STATE_NAME<>'st_offering' or  ca.NEW_STATE_NAME<>'st_post_call'
				or  ca.NEW_STATE_NAME<>'st_on_break' or  ca.NEW_STATE_NAME<>'st_logged_out'
				)
				and ca.CALL_UUID is not null
				and c.CTI_CC_DIRECTION='inbound'
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME 
				group by cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME
				,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
			)as ras3
			on ra.AGENT_NAME=ras3.AGENT_NAME
			and ra.AGENT_ORG_ID=ras3.ORG_ID
			and ra.AGENT_WORK_ID=ras3.WORK_ID
			and ra.CALLDATE=ras3.ENTRY_TIMESTAMP_30M
			set  ra.INNERTIME=round(ras3.d1/1000); 
            if (_err=1) then
				SELECT '2-7 LEAVE UPDATE';
				LEAVE label_p2;
			end if;            
            SELECT '2—7 UPDATE success';
 ##############################################################################
   #-------------更新内呼次数与内呼时长-----------------------2-8
	update  REPORT_AGENT_TMP as ra
			inner join(
				select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,REPORT_TIME_30M(ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
				,count(ca.id) as r1
				from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11
				where 
				ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
				and (ca.NEW_STATE_NAME='st_in_innercall' and ca.OLD_STATE_NAME='st_outgoing_innercall')
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
				and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME
				group by cas11.ORG_ID,WORK_ID,AGENT_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
				
			)as ras4
			on ra.AGENT_NAME=ras4.AGENT_NAME
			and ra.AGENT_ORG_ID=ras4.ORG_ID
			and ra.AGENT_WORK_ID=ras4.WORK_ID
			and ra.CALLDATE=ras4.ENTRY_TIMESTAMP_30M
			set ra.INNERCALL=ras4.r1; 
            if (_err=1) then
				SELECT '2-8 LEAVE UPDATE';
				LEAVE label_p2;
			end if;            
            SELECT '2—8 UPDATE success';
   #------------------------------------------------2-9
	update  REPORT_AGENT_TMP as ra
			inner join(
				        select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,REPORT_TIME_30M(ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
						,sum(ca.duration) as d1
						from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11,CTI_CHANNEL c
						where 
						ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
						and ca.CALL_UUID=c.CTI_CALL_UUID
						and (
						ca.NEW_STATE_NAME<>'st_holding' or  ca.NEW_STATE_NAME<>'st_waiting'  
						or  ca.NEW_STATE_NAME<>'st_offering' or  ca.NEW_STATE_NAME<>'st_post_call'
						or  ca.NEW_STATE_NAME<>'st_on_break' or  ca.NEW_STATE_NAME<>'st_logged_out'
						)
						and ca.CALL_UUID is not null
						and c.CTI_CC_DIRECTION='inner'
						and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
						and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME
						group by cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME
						,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
			)as ras3
			on ra.AGENT_NAME=ras3.AGENT_NAME
			and ra.AGENT_ORG_ID=ras3.ORG_ID
			and ra.AGENT_WORK_ID=ras3.WORK_ID
			and ra.CALLDATE=ras3.ENTRY_TIMESTAMP_30M
			set ra.INNERTIME=round(ras3.d1/1000);    
            if (_err=1) then
				SELECT '2-9 LEAVE UPDATE';
				LEAVE label_p2;
			end if;            
            SELECT '2—9 UPDATE success';
   #-------------更新咨询次数与咨询时长-----------------------2-10
 update REPORT_AGENT_TMP  ra 
    inner join 
    (
        select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,REPORT_TIME_30M(ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
		,count(ca.ENTRY_TIMESTAMP) as r1,sum(ca.duration) as d1
		from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11
		where 
		ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
		and ca.NEW_STATE_NAME='st_in_inbound_call'
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME
		group by cas11.ORG_ID,WORK_ID,AGENT_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
    ) as ras7
    on ra.AGENT_NAME=ras7.AGENT_NAME
	and ra.AGENT_ORG_ID=ras7.ORG_ID
	and ra.AGENT_WORK_ID=ras7.WORK_ID
	and ra.CALLDATE=ras7.ENTRY_TIMESTAMP_30M
    set ra.CONSULT=ras7.r1,ra.CONSULTTIME=round(ras7.d1/1000); 
    		if (_err=1) then
				SELECT '2-10 LEAVE UPDATE';
				LEAVE label_p2;
			end if;            
            SELECT '2—10 UPDATE success';
    
 #-------------更新咨询次数与咨询时长-----------------------  2-11
update REPORT_AGENT_TMP  ra 
    inner join 
    (
        select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,REPORT_TIME_30M(ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
		,count(ca.id) as r1,sum(ca.duration) as d1
		from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11
		where 
		ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
		and ca.NEW_STATE_NAME='st_post_call'
		and ca.OLD_STATE_NAME<>'st_pending'
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME
		group by cas11.ORG_ID,WORK_ID,AGENT_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
    ) as ras7
    on ra.AGENT_NAME=ras7.AGENT_NAME
	and ra.AGENT_ORG_ID=ras7.ORG_ID
	and ra.AGENT_WORK_ID=ras7.WORK_ID
	and ra.CALLDATE=ras7.ENTRY_TIMESTAMP_30M
    set ra.POSTCALL=ras7.r1;  
		    if (_err=1) then
				SELECT '2-11 LEAVE UPDATE';
				LEAVE label_p2;
			end if;            
            SELECT '2—11 UPDATE success';
 #-----------------------------------------------------------2-12
 update REPORT_AGENT_TMP  ra 
    inner join 
    (
        select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,REPORT_TIME_30M(ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
		,count(ca.id) as r1,sum(ca.duration) as d1
		from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11
		where 
		ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
		and ca.NEW_STATE_NAME='st_post_call'
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME
		group by cas11.ORG_ID,WORK_ID,AGENT_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
    ) as ras7
    on ra.AGENT_NAME=ras7.AGENT_NAME
	and ra.AGENT_ORG_ID=ras7.ORG_ID
	and ra.AGENT_WORK_ID=ras7.WORK_ID
	and ra.CALLDATE=ras7.ENTRY_TIMESTAMP_30M
	set ra.POSTCALLTIME=round(ras7.d1/1000); 
			if (_err=1) then
				SELECT '2-12 LEAVE UPDATE';
				LEAVE label_p2;
			end if;            
            SELECT '2—12 UPDATE success';
#-------------更新振铃次数与振铃时长-----------------------2-13
update REPORT_AGENT_TMP  ra 
    inner join 
    (
        select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,REPORT_TIME_30M(ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
		,count(ca.id) as r1,sum(ca.duration) as d1
		from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11
		where 
		ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
		and ca.NEW_STATE_NAME='st_offering'
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME
		group by cas11.ORG_ID,WORK_ID,AGENT_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
    ) as ras8
    on ra.AGENT_NAME=ras8.AGENT_NAME
	and ra.AGENT_ORG_ID=ras8.ORG_ID
	and ra.AGENT_WORK_ID=ras8.WORK_ID
	and ra.CALLDATE=ras8.ENTRY_TIMESTAMP_30M
	set ra.BELL=ras8.r1,ra.BELLTIME=round(ras8.d1/1000); 
		    if (_err=1) then
				SELECT '2-13 LEAVE UPDATE';
				LEAVE label_p2;
			end if;            
            SELECT '2—13 UPDATE success';
#-------------更新20秒接通次数-----------------------2-14
update REPORT_AGENT_TMP  ra 
    inner join 
    (
      select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
	,count(ca.id) as r1
	from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENTSTATE as ca1,V_REPORT_AGENT_SESSION as cas11
	where 
	ca.ID=ca1.pre_rec_id
	and ca.NEW_STaTE_NaME='st_offering' and ca.DURATION/1000<=20
	and ca1.NEW_STaTE_NAME='st_in_queue_call'
	and ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
	and REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)>=@START_TIME
	and REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)<=@END_TIME
	group by cas11.ORG_ID,WORK_ID,AGENT_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
    ) as ras9
    on ra.AGENT_NAME=ras9.AGENT_NAME
	and ra.AGENT_ORG_ID=ras9.ORG_ID
	and ra.AGENT_WORK_ID=ras9.WORK_ID
	and ra.CALLDATE=ras9.ENTRY_TIMESTAMP_30M
	set ra.TO20=ras9.r1; 
			if (_err=1) then
				SELECT '2-14 LEAVE UPDATE';
				LEAVE label_p2;
			end if;            
            SELECT '2—14 UPDATE success';
#-------------更新外呼次数与外呼时长-----------------------2-15
update REPORT_AGENT_TMP  ra 
    inner join 
    (
     select a.ORG_ID,a.WORK_ID,a.AGENT_NAME,a.ENTRY_TIMESTAMP_30M,count(CHANNEL_UUID) as r1
	    from (
		select ca.CHANNEL_UUID,ca.AGENT_SESSION_ID,ca.NEW_STATE_NAME,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP) ENTRY_TIMESTAMP_30M
		,cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME
		, max(ENTRY_TIMESTAMP) as  rn
		from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11
		where NEW_STATE_NAME='st_in_outbound_call'
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME 
		and ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
        group by CHANNEL_UUID
	    )a
		group by a.ORG_ID,a.WORK_ID,a.AGENT_NAME,a.ENTRY_TIMESTAMP_30M
    ) as cas2
    on ra.AGENT_NAME=cas2.AGENT_NAME
    and ra.AGENT_ORG_ID=cas2.ORG_ID
    and ra.AGENT_WORK_ID=cas2.WORK_ID
    and ra.CALLDATE=cas2.ENTRY_TIMESTAMP_30M
	set OUTCALL=r1;  
			if (_err=1) then
				SELECT '2-15 LEAVE UPDATE';
				LEAVE label_p2;
			end if;            
            SELECT '2—15 UPDATE success';
    
 #--------------------------------------------------------------------2-16
update REPORT_AGENT_TMP  ra 
    inner join 
    (
		select cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME,REPORT_TIME_30M(ENTRY_TIMESTAMP) AS ENTRY_TIMESTAMP_30M
		,sum(ca.duration) as d1
		from V_REPORT_AGENTSTATE as ca,V_REPORT_AGENT_SESSION as cas11,CTI_CHANNEL c
		where 
		ca.AGENT_SESSION_ID=cas11.AGENT_SESSION_ID
		and ca.CALL_UUID=c.CTI_CALL_UUID
		and (
		ca.NEW_STATE_NAME<>'st_holding' or  ca.NEW_STATE_NAME<>'st_waiting'  
		or  ca.NEW_STATE_NAME<>'st_offering' or  ca.NEW_STATE_NAME<>'st_post_call'
		or  ca.NEW_STATE_NAME<>'st_on_break' or  ca.NEW_STATE_NAME<>'st_logged_out'
		)
		and ca.CALL_UUID is not null
		and c.CTI_CC_DIRECTION='outbound'
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)>=@START_TIME
		and REPORT_TIME_30M(ENTRY_TIMESTAMP)<=@END_TIME 
		group by cas11.ORG_ID,cas11.WORK_ID,cas11.AGENT_NAME
		,REPORT_TIME_30M(ca.ENTRY_TIMESTAMP)
    ) as ras3
    on ra.AGENT_NAME=ras3.AGENT_NAME
	and ra.AGENT_ORG_ID=ras3.ORG_ID
	and ra.AGENT_WORK_ID=ras3.WORK_ID
	and ra.CALLDATE=ras3.ENTRY_TIMESTAMP_30M
	set ra.OUTCALLTIME=round(ras3.d1/1000);  
			if (_err=1) then
				SELECT '2-16 LEAVE UPDATE';
				LEAVE label_p2;
			end if;            
            SELECT '2—16 UPDATE success';
 #####################################################################---------------------------------------------------
		 
            
	#		SELECT 'COMMIT';
			COMMIT;
    #       LEAVE label_p1;
            
			label_p3:loop
			
				START TRANSACTION; 
				SELECT 'START TRANSACTION2'; 
                
                DELETE from REPORT_AGENT 
				where REPORT_TIME_30M(CALLDATE)>=@START_TIME
				and REPORT_TIME_30M(CALLDATE)<=@END_TIME;
                
				if (_err=1) then
					SELECT '3-1 LEAVE UPDATE';
					LEAVE label_p2;
				end if;    
				SELECT '3—1 delete success';                 
                
					insert into REPORT_AGENT(CALLDATE,AGENT_ID,AGENT_SESSION_ID,AGENT_ORG_ID,AGENT_NAME,AGENT_WORK_ID,TOPERSON,TOPERSONSUCCEED,LOGIN,
					BUSY,HOLD,POSTCALL,INNERCALL,BELL,TO20,TOSUCCEDTIME,LOGINTIME,BUSYTIME,HOLDTIME,POSTCALLTIME,INNERTIME,BELLTIME,
					AVGTIME,AVGLOGINTIME,AVGBUSYTIME,AVGHOLETIME,AVGPOSTCALLTIME,AVGINNERTIME,AVGBELLTIME,AVGWORKTIME,PERSUCCESS,PERFREE,PERWORK,PERHOLD,PERAWAY,PERTO20,OUTCALL
					,OUTCALLTIME,AVGOUTCALLTIME,CONSULT,CONSULTTIME)
					SELECT 
					CALLDATE,AGENT_ID,AGENT_SESSION_ID,AGENT_ORG_ID,AGENT_NAME,AGENT_WORK_ID,TOPERSON,TOPERSONSUCCEED,LOGIN,
					BUSY,HOLD,POSTCALL,INNERCALL,BELL,TO20,TOSUCCEDTIME,LOGINTIME,BUSYTIME,HOLDTIME,POSTCALLTIME,INNERTIME,BELLTIME,
					AVGTIME,AVGLOGINTIME,AVGBUSYTIME,AVGHOLETIME,AVGPOSTCALLTIME,AVGINNERTIME,AVGBELLTIME,AVGWORKTIME,PERSUCCESS,PERFREE,PERWORK,PERHOLD,PERAWAY,PERTO20,OUTCALL
					,OUTCALLTIME,AVGOUTCALLTIME,CONSULT,CONSULTTIME
	             	from REPORT_AGENT_TMP;
			              
                
				if (_err=1) then
					SELECT '3-2 LEAVE insert';
					LEAVE label_p2;
				end if;    
				SELECT '3-2 insert success';  
                
				SELECT 'COMMIT';
				COMMIT;
				LEAVE label_p2;                
			end loop label_p3;                
            
            
        end loop label_p2;
      
        SELECT 'ROLLBACK';
        ROLLBACK;
        LEAVE label_p1;        
    end loop label_p1;
	SELECT 'end P_LOAD_CTI_AGENT_JX';    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_cti_agent_jx_backph` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_cti_agent_jx_backph`(
                start_time datetime,
                end_time   datetime
)
begin
  declare state int default 0;
    declare end_id int;
  declare _err int default 0;
  declare continue handler for sqlexception set _err=1;
    
    set @start_time=report_time_30m(start_time);
    set @end_time=report_time_30m(end_time);
    select @start_time;
    select @end_time;
    set sql_safe_updates = 0;
    set _err=0;
    
    label_p1:loop

    delete from report_agent_tmp;
    if (_err=1) then
      select '1leave label_p1';
      leave label_p1;
    end if;
        select '1 delete success';       
        
   label_p2:loop

      start transaction; 
      select 'start transaction';  
 
        insert into report_agent_tmp(calldate,agent_org_id,agent_name,agent_work_id,agent_org_name)
      select r30m.tjdate,ag1.org_id,ag1.agent_name,ag1.work_id,ag1.name
      from 
      (
        select tjdate 
        from report_date
        where tjdate>=@start_time
        and tjdate<=@end_time
      ) as r30m 
      left join (
        select distinct ss.org_id,ts.name,ss.work_id,ss.agent_name
        ,report_time_30m(cas.entry_timestamp) as r30m
        from v_report_cti_agent_state as cas,v_report_cti_agent_session as ss
                ,t_sys_organization ts
        where cas.agent_session_id=ss.agent_session_id and ss.org_id=ts.domain
        and               
        (cas.new_state_name='st_on_break'
        or cas.new_state_name='st_holding'
        or cas.new_state_name='st_offering'
        or cas.new_state_name='st_in_queue_call'
        or (cas.new_state_name='st_in_innercall' and cas.old_state_name='st_outgoing_innercall')
        or cas.new_state_name='st_in_outbound_call'
        or cas.new_state_name='st_post_call'
        or (cas.new_state_name='st_idle' and cas.old_state_name='st_logged_out')
        )
        and entry_timestamp>=@start_time
        and entry_timestamp<=@end_time
      )as ag1
      on r30m.tjdate=ag1.r30m;

      if (_err=1) then
                select '2 leave insert';
        leave label_p2;
      end if;
            select '2—1 insert success';        

        update report_agent_tmp as ra 
      inner join(
        select cas11.org_id,cas11.work_id,cas11.agent_name,login_timestamp_30m
        ,count(cas11.agent_id) as r1,sum(timestampdiff(second,cas11.login_timestamp,cas11.logout_timestamp)) as d1
        from v_report_cti_agent_session as cas11
        where
        login_timestamp_30m>=@start_time
        and login_timestamp_30m<=@end_time
        group by cas11.org_id,work_id,agent_name,login_timestamp_30m
      )as ras1
      on  ra.agent_name=ras1.agent_name
      and ra.agent_org_id=ras1.org_id
      and ra.agent_work_id=ras1.work_id
      and ra.calldate=ras1.login_timestamp_30m
      set ra.login=ras1.r1,ra.logintime=ras1.d1;

      if (_err=1) then
        select '2-2 leave update';
        leave label_p2;
      end if;            
            select '2—2 update success';
 
      update report_agent_tmp as ra 
      inner join(
        select cas11.org_id,cas11.work_id,cas11.agent_name
        ,report_time_30m(entry_timestamp) as entry_timestamp_30m
        ,count(ca.id) as r1,sum(ca.duration) as d1
        from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
        where 
        ca.agent_session_id=cas11.agent_session_id
        and ca.new_state_name='st_on_break'
        and entry_timestamp>=@start_time
        and entry_timestamp<=@end_time
        group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
        )as ras2
      on ra.agent_name=ras2.agent_name
      and ra.agent_org_id=ras2.org_id
      and ra.agent_work_id=ras2.work_id
      and ra.calldate=ras2.entry_timestamp_30m
      set ra.busy=ras2.r1,ra.busytime=round(ras2.d1/1000);            
      if (_err=1) then
        select '2-3 leave update';
        leave label_p2;
      end if;    
            select '2-3 update success';            
 
        update report_agent_tmp as ra
      inner join(
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
        ,count(ca.entry_timestamp) as r1,sum(ca.duration) as d1
                from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
                where ca.agent_session_id=cas11.agent_session_id
                and ca.new_state_name='st_holding'
        and entry_timestamp>=@start_time
        and entry_timestamp<=@end_time 
        group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
      )as ras3
      on ra.agent_name=ras3.agent_name
      and ra.agent_org_id=ras3.org_id
      and ra.agent_work_id=ras3.work_id
      and ra.calldate=ras3.entry_timestamp_30m
      set ra.hold=ras3.r1,ra.holdtime=round(ras3.d1/1000);            
      if (_err=1) then
        select '2-4 leave update';
        leave label_p2;
      end if;    
            select '2-4 update success';              
            

    update report_agent_tmp as ra
      inner join(
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
                ,count(ca.entry_timestamp) as r1
                from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
                where ca.agent_session_id=cas11.agent_session_id
        and ca.new_state_name='st_offering'
        and entry_timestamp>=@start_time
        and entry_timestamp<=@end_time 
        group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
      )as ras4
      on ra.agent_name=ras4.agent_name
      and ra.agent_org_id=ras4.org_id
      and ra.agent_work_id=ras4.work_id
      and ra.calldate=ras4.entry_timestamp_30m
      set ra.toperson=ras4.r1; 
      if (_err=1) then
        select '2-5 leave update';
        leave label_p2;
      end if;    
            select '2-5 update success';              
 

                update report_agent_tmp as ra
      inner join(
        select a.org_id,a.work_id,a.agent_name,a.entry_timestamp_30m,count(channel_uuid) as r1
        from (
          select ca.channel_uuid,ca.agent_session_id,ca.new_state_name,report_time_30m(ca.entry_timestamp) entry_timestamp_30m
          ,cas11.org_id,cas11.work_id,cas11.agent_name
          , max(entry_timestamp) 
          from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
          where new_state_name='st_in_queue_call'
          and entry_timestamp>=@start_time
          and entry_timestamp<=@end_time 
          and ca.agent_session_id=cas11.agent_session_id
          group by channel_uuid
          )a
              group by a.org_id,a.work_id,a.agent_name,a.entry_timestamp_30m
      )as cas2
    on ra.agent_name=cas2.agent_name
       and ra.agent_org_id=cas2.org_id
       and ra.agent_work_id=cas2.work_id
       and ra.calldate=cas2.entry_timestamp_30m
     set ra.topersonsucceed=r1  ;
            if (_err=1) then
        select '2-6 leave update';
        leave label_p2;
      end if;    
            select '2-6 update success';  
            
 
   
  update  report_agent_tmp as ra
      inner join(
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
        ,count(ca.id) as r1
        from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
        where 
        ca.agent_session_id=cas11.agent_session_id
        and (ca.new_state_name='st_in_innercall' and ca.old_state_name='st_outgoing_innercall')
        and entry_timestamp>=@start_time
        and entry_timestamp<=@end_time
        group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
        
      )as ras4
      on ra.agent_name=ras4.agent_name
      and ra.agent_org_id=ras4.org_id
      and ra.agent_work_id=ras4.work_id
      and ra.calldate=ras4.entry_timestamp_30m
      set ra.innercall=ras4.r1; 
            if (_err=1) then
        select '2-8 leave update';
        leave label_p2;
      end if;            
            select '2—8 update success';
   
  update  report_agent_tmp as ra
      inner join(
                select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
            ,sum(ca.duration) as d1
            from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11,v_report_cti_channel c
            where 
            ca.agent_session_id=cas11.agent_session_id
            and ca.call_uuid=c.cti_call_uuid
            and (
            ca.new_state_name<>'st_holding' or  ca.new_state_name<>'st_waiting'  
            or  ca.new_state_name<>'st_offering' or  ca.new_state_name<>'st_post_call'
            or  ca.new_state_name<>'st_on_break' or  ca.new_state_name<>'st_logged_out'
            )
            and ca.call_uuid is not null
            and c.cti_cc_direction='inner'
            and entry_timestamp>=@start_time
            and entry_timestamp<=@end_time
            group by cas11.org_id,cas11.work_id,cas11.agent_name
            ,report_time_30m(ca.entry_timestamp)
      )as ras3
      on ra.agent_name=ras3.agent_name
      and ra.agent_org_id=ras3.org_id
      and ra.agent_work_id=ras3.work_id
      and ra.calldate=ras3.entry_timestamp_30m
      set ra.innertime=round(ras3.d1/1000);    
            if (_err=1) then
        select '2-9 leave update';
        leave label_p2;
      end if;            
            select '2—9 update success';
   
 update report_agent_tmp  ra 
    inner join 
    (
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
    ,count(ca.entry_timestamp) as r1,sum(ca.duration) as d1
    from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
    where 
    ca.agent_session_id=cas11.agent_session_id
    and ca.new_state_name='st_in_inbound_call'
    and entry_timestamp>=@start_time
    and entry_timestamp<=@end_time
    group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
    ) as ras7
    on ra.agent_name=ras7.agent_name
  and ra.agent_org_id=ras7.org_id
  and ra.agent_work_id=ras7.work_id
  and ra.calldate=ras7.entry_timestamp_30m
    set ra.consult=ras7.r1,ra.consulttime=round(ras7.d1/1000); 
        if (_err=1) then
        select '2-10 leave update';
        leave label_p2;
      end if;            
            select '2—10 update success';
    
 
update report_agent_tmp  ra 
    inner join 
    (
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
    ,count(ca.id) as r1,sum(ca.duration) as d1
    from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
    where 
    ca.agent_session_id=cas11.agent_session_id
    and ca.new_state_name='st_post_call'
    and ca.old_state_name<>'st_pending'
    and entry_timestamp>=@start_time
    and entry_timestamp<=@end_time
    group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
    ) as ras7
    on ra.agent_name=ras7.agent_name
  and ra.agent_org_id=ras7.org_id
  and ra.agent_work_id=ras7.work_id
  and ra.calldate=ras7.entry_timestamp_30m
    set ra.postcall=ras7.r1;  
        if (_err=1) then
        select '2-11 leave update';
        leave label_p2;
      end if;            
            select '2—11 update success';
 
 update report_agent_tmp  ra 
    inner join 
    (
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
    ,count(ca.id) as r1,sum(ca.duration) as d1
    from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
    where 
    ca.agent_session_id=cas11.agent_session_id
    and ca.new_state_name='st_post_call'
    and entry_timestamp>=@start_time
    and entry_timestamp<=@end_time
    group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
    ) as ras7
    on ra.agent_name=ras7.agent_name
  and ra.agent_org_id=ras7.org_id
  and ra.agent_work_id=ras7.work_id
  and ra.calldate=ras7.entry_timestamp_30m
  set ra.postcalltime=round(ras7.d1/1000); 
      if (_err=1) then
        select '2-12 leave update';
        leave label_p2;
      end if;            
            select '2—12 update success';

update report_agent_tmp  ra 
    inner join 
    (
        select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
    ,count(ca.id) as r1,sum(ca.duration) as d1
    from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11
    where 
    ca.agent_session_id=cas11.agent_session_id
    and ca.new_state_name='st_offering'
    and entry_timestamp>=@start_time
    and entry_timestamp<=@end_time
    group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
    ) as ras8
    on ra.agent_name=ras8.agent_name
  and ra.agent_org_id=ras8.org_id
  and ra.agent_work_id=ras8.work_id
  and ra.calldate=ras8.entry_timestamp_30m
  set ra.bell=ras8.r1,ra.belltime=round(ras8.d1/1000); 
        if (_err=1) then
        select '2-13 leave update';
        leave label_p2;
      end if;            
            select '2—13 update success';

update report_agent_tmp  ra 
    inner join 
    (
      select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(ca.entry_timestamp) as entry_timestamp_30m
  ,count(ca.id) as r1
  from v_report_cti_agent_state as ca,v_report_cti_agent_state as ca1,v_report_cti_agent_session as cas11
  where 
  ca.id=ca1.pre_rec_id
  and ca.new_state_name='st_offering' and ca.duration/1000<=20
  and ca1.new_state_name='st_in_queue_call'
  and ca.agent_session_id=cas11.agent_session_id
  and ca.entry_timestamp>=@start_time
  and ca.entry_timestamp<=@end_time
  group by cas11.org_id,work_id,agent_name,report_time_30m(ca.entry_timestamp)
    ) as ras9
    on ra.agent_name=ras9.agent_name
  and ra.agent_org_id=ras9.org_id
  and ra.agent_work_id=ras9.work_id
  and ra.calldate=ras9.entry_timestamp_30m
  set ra.to20=ras9.r1; 
      if (_err=1) then
        select '2-14 leave update';
        leave label_p2;
      end if;            
            select '2—14 update success';


 
update report_agent_tmp  ra 
    inner join 
    (
    select cas11.org_id,cas11.work_id,cas11.agent_name,report_time_30m(entry_timestamp) as entry_timestamp_30m
    ,sum(ca.duration) as d1
    from v_report_cti_agent_state as ca,v_report_cti_agent_session as cas11,v_report_cti_channel c
    where 
    ca.agent_session_id=cas11.agent_session_id
    and ca.call_uuid=c.cti_call_uuid
    and (
    ca.new_state_name<>'st_holding' or  ca.new_state_name<>'st_waiting'  
    or  ca.new_state_name<>'st_offering' or  ca.new_state_name<>'st_post_call'
    or  ca.new_state_name<>'st_on_break' or  ca.new_state_name<>'st_logged_out'
    )
    and ca.call_uuid is not null
    and c.cti_cc_direction='outbound'
    and entry_timestamp>=@start_time
    and entry_timestamp<=@end_time 
    group by cas11.org_id,cas11.work_id,cas11.agent_name
    ,report_time_30m(ca.entry_timestamp)
    ) as ras3
    on ra.agent_name=ras3.agent_name
  and ra.agent_org_id=ras3.org_id
  and ra.agent_work_id=ras3.work_id
  and ra.calldate=ras3.entry_timestamp_30m
  set ra.outcalltime=round(ras3.d1/1000);  
      if (_err=1) then
        select '2-16 leave update';
        leave label_p2;
      end if;            
            select '2—16 update success';
 
     
            
  
      commit;
    
            
      label_p3:loop
      
        start transaction; 
        select 'start transaction2'; 
                
                delete from report_agent 
        where calldate>=@start_time
        and calldate<=@end_time;
                
        if (_err=1) then
          select '3-1 leave update';
          leave label_p2;
        end if;    
        select '3—1 delete success';                 
                
          insert into report_agent(calldate,agent_id,agent_session_id,agent_org_id,agent_name,agent_work_id,toperson,topersonsucceed,login,
          busy,hold,postcall,innercall,bell,to20,tosuccedtime,logintime,busytime,holdtime,postcalltime,innertime,belltime,
          avgtime,avglogintime,avgbusytime,avgholetime,avgpostcalltime,avginnertime,avgbelltime,avgworktime,persuccess,perfree,perwork,perhold,peraway,perto20,outcall
          ,outcalltime,avgoutcalltime,consult,consulttime,agent_org_name)
          select 
          calldate,agent_id,agent_session_id,agent_org_id,agent_name,agent_work_id,toperson,topersonsucceed,login,
          busy,hold,postcall,innercall,bell,to20,tosuccedtime,logintime,busytime,holdtime,postcalltime,innertime,belltime,
          avgtime,avglogintime,avgbusytime,avgholetime,avgpostcalltime,avginnertime,avgbelltime,avgworktime,persuccess,perfree,perwork,perhold,peraway,perto20,outcall
          ,outcalltime,avgoutcalltime,consult,consulttime,agent_org_name
                from report_agent_tmp;
                    
                
        if (_err=1) then
          select '3-2 leave insert';
          leave label_p2;
        end if;    
        select '3-2 insert success';  
                
        select 'commit';
        commit;
        leave label_p2;                
      end loop label_p3;                
            
            
        end loop label_p2;
      
        select 'rollback';
        rollback;
        leave label_p1;        
    end loop label_p1;
  select 'end p_load_cti_agent_jx';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_cti_agent_orgjx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `p_load_cti_agent_orgjx`()
begin
    declare start_time datetime;
    declare succed_time datetime;
  declare _err int default 0;
  declare continue handler for sqlexception set _err=1;
    set sql_safe_updates = 0;    
    set _err=0;
    
    select succedtime into start_time from report_plan_org_jx where type='update_org_jx';
  set succed_time=report_time_30m(now());
    set start_time=report_time_30m(start_time);
    select succed_time;
    select start_time;    
    label_p1:loop
    
    delete from report_agent_org_jx 
    where CALLDATE>=start_time
      and CALLDATE<succed_time;
        
    if (_err=1) then
      select '1 leave label_p1';
      leave label_p1;
    end if;   
        select 'delete report_agent_org_jx success';
        
        start transaction; 
        select 'start transaction';   
    label_p2:loop   


             insert into report_agent_org_jx
             (`CALLDATE`,`AGENT_ORG_ID`,`AGENT_ORG_NAME`,`AGENT_SESSION_ID`,`TOPERSON`,
              `TOPERSONSUCCEED`,`LOGIN`,`BUSY`,`HOLD`,`POSTCALL`,`INNERCALL`,`BELL`,`TO20`,
         `TOSUCCEDTIME`,`LOGINTIME`,`BUSYTIME`,`HOLDTIME`,`POSTCALLTIME`,`INNERTIME`,
        `BELLTIME`,`AVGTIME`,`AVGLOGINTIME`,`AVGBUSYTIME`,`AVGHOLETIME`,`AVGPOSTCALLTIME`,
              `AVGINNERTIME`,`AVGBELLTIME`,`AVGWORKTIME`,`PERSUCCESS`,`PERFREE`,`PERWORK`,
              `PERHOLD`,`PERAWAY`,`PERTO20`,`DEGREE`,`OUTCALL`,`OUTCALLTIME`,`AVGOUTCALLTIME`,
              `CONSULT`,`CONSULTTIME`)
              select  `CALLDATE`,`AGENT_ORG_ID`,`AGENT_ORG_NAME`,sum(`AGENT_SESSION_ID`),sum(`TOPERSON`),
              sum(`TOPERSONSUCCEED`),sum(`LOGIN`),sum(`BUSY`),sum(`HOLD`),sum(`POSTCALL`),sum(`INNERCALL`),
              sum(`BELL`),sum(`TO20`),
        sum( `TOSUCCEDTIME`),sum(`LOGINTIME`),sum(`BUSYTIME`),sum(`HOLDTIME`),
              sum(`POSTCALLTIME`),sum(`INNERTIME`),
        sum(`BELLTIME`),sum(`AVGTIME`),sum(`AVGLOGINTIME`),sum(`AVGBUSYTIME`),sum(`AVGHOLETIME`),
              sum(`AVGPOSTCALLTIME`),
              sum(`AVGINNERTIME`),sum(`AVGBELLTIME`),sum(`AVGWORKTIME`),sum(`PERSUCCESS`),
              sum(`PERFREE`),sum(`PERWORK`),
              sum(`PERHOLD`),sum(`PERAWAY`),sum(`PERTO20`),sum(`DEGREE`),sum(`OUTCALL`),
              sum(`OUTCALLTIME`),sum(`AVGOUTCALLTIME`),
              sum(`CONSULT`),sum(`CONSULTTIME`)  from report_agent
              where CALLDATE>=start_time and CALLDATE<succed_time
              group by AGENT_ORG_ID,CALLDATE;

            if (_err=1) then
                select '1 leave insert';
        leave label_p2;
      end if;
            select '1 insert success';




   update report_plan_org_jx set succedtime=succed_time,starttime=start_time
   where  report_plan_org_jx.type='update_org_jx';
            
      if (_err=1) then
        select '2 leave update';
        leave label_p2;
      end if;            
            select '2 update success';            


      select 'commit';
      commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;        
        
    end loop label_p1;
  select 'end p_load_general_kpi';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_data_1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_data_1`()
BEGIN
   
    
    
  call c8config.p_load_acddata();
  call c8config.p_load_cdrdata();
  

  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_data_1_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_data_1_back`()
BEGIN
   
    
    
	call c8config.p_load_acddata();
	call c8config.p_load_cdrdata();
	call c8config.p_load_agent_services_data();
	call c8config.p_load_general_kpi();
    call c8config.p_load_skill();
	call c8config.p_load_weixi_agent();
	call c8config.p_load_weixi_company();

	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_data_2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_data_2`()
BEGIN

  declare start_time datetime;
  declare end_time datetime;

  set @dt = str_to_date(date_format(now(),'%Y-%m-%d'),'%Y-%m-%d');
    
  set start_time=date_sub(@dt, interval 1 day);
  set end_time=@dt;
  call c8config.p_load_cti_agent_jx(start_time,end_time);
 # call c8config.p_load_skill(start_time,end_time);
  call c8config.p_load_general_kpi(start_time,end_time);
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_data_3_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_data_3_back`()
BEGIN
	declare start_time datetime;
	declare end_time datetime;
    
    set @dt = now();
	select start_time=date_sub(@dt, interval 6 hour);
	select end_time=@dt;
	call c8config.p_load_cti_agent_jx(start_time,end_time);
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_data_4` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_data_4`()
BEGIN
  declare start_time varchar(40);
  declare end_time varchar(40);
    declare starttime varchar(40);
    declare endtime varchar(40);
    
    select date_format(max(tjdate),'%Y-%m-%d') into start_time from report_date;
    select date_format(date_add(max(tjdate),interval 1 day),'%Y-%m-%d') into starttime 
    from report_date;

    set end_time=date_format(date_add(now(),interval 1 day),'%Y-%m-%d');
    set endtime=date_format(date_add(now(),interval 30 day),'%Y-%m-%d');

    if start_time<end_time then
    call p_load_date(starttime,endtime);
  end if ;
         
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_data_5` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_data_5`()
BEGIN
   
    
    

  call c8config.p_load_general_kpi();
    call c8config.p_load_skill();
  call c8config.p_load_weixi_agent();
  call c8config.p_load_weixi_company();

  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_date` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_date`(
                starttime varchar(40),
                endtime varchar(40)
)
begin
set @i = (datediff(endtime,starttime)+1)*24*2;

set @j=0;
set @tmp='';

while @j<@i do
begin
 set @tmp=date_add(starttime,interval @j*30 minute);
 insert into report_date(tjdate) values(@tmp);
 set @j=@j+1;
 end;
end while;


end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_general_kpi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_general_kpi`(
          start_time datetime,
          end_time   datetime
)
begin
    declare start_time1 datetime;
    declare succed_time1 datetime;
  declare _err int default 0;
  declare continue handler for sqlexception set _err=1;
    set sql_safe_updates = 0;    
    
    select '1 update cti_agent_session success';
    set _err=0;
    set @start_time=report_time_30m(start_time);
    set @end_time=report_time_30m(end_time);
    
    label_p1:loop
    
     delete from report_cti_general_kpi 
       where tjdate>=@start_time
       and tjdate<@end_time;
        
    if (_err=1) then
      select '1 leave label_p1';
      leave label_p1;
    end if;   
        select 'delete report_cti_general_kpi success';
        
        start transaction; 
        select 'start transaction';   
    label_p2:loop   


    insert into report_cti_general_kpi(tjdate)
    select tjdate from report_date
    where tjdate>=@start_time
    and tjdate<@end_time;
      if (_err=1) then
                select '2 leave insert';
        leave label_p2;
      end if;
            select '2—1 insert success';


    update report_cti_general_kpi q
    inner join
    (
      select count(*) as hjl,org_id,ts.name as org_name,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
            left join t_sys_organization ts on ts.domain=org_id
      where 1=1
        and creat_time >= @start_time and creat_time < @end_time
      group by report_time_30m(creat_time),org_id
        ) as  a
    on a.creat_time = q.tjdate
    set q.callcount=a.hjl,q.org_id=a.org_id,q.org_name=a.org_name; 
      if (_err=1) then
                select '2 leave update';
        leave label_p2;
      end if;
            select '2 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as jtl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where r.answered is not null
      and creat_time >= @start_time and creat_time < @end_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
     set q.turncount=a.jtl; 
        if (_err=1) then
                select '3 leave update';
        leave label_p2;
      end if;
            select '3 update success';

     update report_cti_general_kpi q
     inner join
     (
      select sum(answered) thsc,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where 1=1
      and creat_time >= @start_time and creat_time < @end_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
     set q.talktimecount = a.thsc;
            if (_err=1) then
                select '4 leave update';
        leave label_p2;
      end if;
            select '4 update success';


     update report_cti_general_kpi q
     inner join
     (
      select count(*) as hrl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='inbound' or cti_cc_direction='inbound')
      and creat_time >= @start_time and creat_time < @end_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
     set q.inboundcalls = a.hrl;
            if (_err=1) then
                select '5 leave update';
        leave label_p2;
      end if;
            select '5 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as hrjtl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='inbound' or cti_cc_direction='inbound')
      and r.answered is  not  null
      and creat_time >= @start_time and creat_time < @end_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
     set q.inboundsucccalls = a.hrjtl;
            if (_err=1) then
                select '6 leave update';
        leave label_p2;
      end if;
            select '6 update success';
 
      update report_cti_general_kpi q
     inner join
     (
      select sum(answered) hrzhsc ,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='inbound' or cti_cc_direction='inbound')
      and creat_time >= @start_time and creat_time < @end_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
    set q.inboundtalktimecount = a.hrzhsc;
           if (_err=1) then
                select '7 leave update';
        leave label_p2;
      end if;
            select '7 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as  hrl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr 
      where  queue_count is not null
      and creat_time >= @start_time and creat_time < @end_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
    set q.transfertoagentcalls =a.hrl;
           if (_err=1) then
                select '8 leave update';
        leave label_p2;
      end if;
            select '8 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as  hrl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr 
      where  queue_count is not null and agent_time is not null
      and creat_time >= @start_time and creat_time < @end_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
    set q.transfertoagentsucccalls =a.hrl;
           if (_err=1) then
                select '9 leave update';
        leave label_p2;
      end if;
            select '9 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as ly,org_id,report_time_30m(start_time) start_time1 
      from v_report_cti_record_files
      where cti_record_type = 'vm' 
      and start_time >= @start_time and start_time < @end_time 
      group by report_time_30m(start_time),org_id
     ) as a
     on a.start_time1 = q.tjdate
     set q.vmcount = a.ly;
            if (_err=1) then
                select '10 leave update';
        leave label_p2;
      end if;
            select '10 update success';
 
      update report_cti_general_kpi q
     inner join
     (
       select sum(queue_time) as pdzsc,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  queue_count is not null
      and creat_time >= @start_time and creat_time < @end_time 
      group by report_time_30m(creat_time),org_id
     ) as a
     on a.creat_time = q.tjdate
     set q.secinqueue = a.pdzsc;
            if (_err=1) then
                select '11 leave update';
        leave label_p2;
      end if;
            select '11 update success';

     update report_cti_general_kpi q
     inner join
     (
      select sum(agent_time) zrgzsc ,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  queue_count is not null 
      and creat_time >= @start_time and creat_time < @end_time 
      group by report_time_30m(creat_time),org_id
     ) as a
     on a.creat_time = q.tjdate
     set q.transfertoagenttalktimecount = a.zrgzsc;
            if (_err=1) then
                select '12 leave update';
        leave label_p2;
      end if;
            select '12 update success';

     update report_cti_general_kpi q
     inner join
     (
      select sum(cas.duration)/1000 as hhzsc,ss.org_id,
      report_time_30m(cas.entry_timestamp) entry_timestamp1 
      from v_report_cti_agent_state as cas,
            v_report_cti_agent_session as ss
      where  cas.agent_session_id=ss.agent_session_id
            and cas.new_state_name = 'st_post_call'
      and cas.entry_timestamp >= @start_time and cas.entry_timestamp < @end_time  
      group by report_time_30m(cas.entry_timestamp),ss.org_id
     ) as a
     on entry_timestamp1=q.tjdate
     set q.secinpostcall = a.hhzsc;
            if (_err=1) then
                select '13 leave update';
        leave label_p2;
      end if;
            select '13 update success';


     update report_cti_general_kpi q
     inner join
     (
      select count(*) as hcl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='outbound' or cti_cc_direction='outbound')
      and creat_time >= @start_time and creat_time < @end_time 
      group by report_time_30m(creat_time),org_id
     ) as a
     on creat_time=q.tjdate
     set q.calloutcount = a.hcl;
            if (_err=1) then
                select '14 leave update';
        leave label_p2;
      end if;
            select '14 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as  hccgl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='outbound' or cti_cc_direction='outbound')
      and creat_time >= @start_time and creat_time < @end_time 
      and answered is not null
      group by report_time_30m(creat_time),org_id
     ) as a
     on creat_time=q.tjdate
     set q.turnoutcount = a.hccgl;
            if (_err=1) then
                select '15 leave update';
        leave label_p2;
      end if;
            select '15 update success';

     update report_cti_general_kpi q
     inner join
     (
      select sum(answered) as hcthsc,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='outbound' or cti_cc_direction='outbound')
      and creat_time >= @start_time and creat_time < @end_time 
      and answered is not null
      group by report_time_30m(creat_time),org_id

     ) as a
     on creat_time=q.tjdate
     set q.callouttalktimecount = a.hcthsc;
            if (_err=1) then
                select '16 leave update';
        leave label_p2;
      end if;
            select '16 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as zxhcl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  cti_call_direction='outbound' and cti_cc_direction='outbound'
      and creat_time >= @start_time and creat_time < @end_time 
      group by report_time_30m(creat_time),org_id

     ) as a
     on creat_time=q.tjdate
     set q.seatcalloutcount = a.zxhcl;
            if (_err=1) then
                select '17 leave update';
        leave label_p2;
      end if;
            select '17 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as zxcghcl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  cti_call_direction='outbound' and cti_cc_direction='outbound'
      and creat_time >= @start_time and creat_time < @end_time 
      and answered is not null
      group by report_time_30m(creat_time),org_id

     ) as a
     on creat_time=q.tjdate
     set q.seatturnoutcount = a.zxcghcl;
            if (_err=1) then
                select '18 leave update';
        leave label_p2;
      end if;
            select '18 update success';

     update report_cti_general_kpi q
     inner join
     (
      select sum(answered) as zxhcthsc,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  cti_call_direction='outbound' and cti_cc_direction='outbound'
      and creat_time >= @start_time and creat_time < @end_time 
      and answered is not null
      group by report_time_30m(creat_time),org_id
     ) as a
     on creat_time=q.tjdate
     set q.seattalktimecount = a.zxhcthsc;
            if (_err=1) then
                select '19 leave update';
        leave label_p2;
      end if;
            select '19 update success';

      select 'commit';
      commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;        
        
    end loop label_p1;
  select 'end p_load_general_kpi';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_general_kpi_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_general_kpi_back`()
begin
    declare start_time datetime;
    declare succed_time datetime;
  declare _err int default 0;
  declare continue handler for sqlexception set _err=1;
    set sql_safe_updates = 0;    
    
    select '1 update cti_agent_session success';
    set _err=0;
   
   
    
    select succedtime into start_time from report_plan_general_kpi where type='update_kpi';
  set succed_time=report_time_30m(now());
    set start_time=report_time_30m(start_time);
  
  
    label_p1:loop
    
    delete from report_cti_general_kpi 
       where tjdate>=start_time
      and tjdate<succed_time;
        
    if (_err=1) then
      select '1 leave label_p1';
      leave label_p1;
    end if;   
        select 'delete report_cti_general_kpi success';
        
        start transaction; 
        select 'start transaction';   
    label_p2:loop   


    insert into report_cti_general_kpi(tjdate)
    select tjdate from report_date
    where tjdate>=start_time
    and tjdate<succed_time;
      if (_err=1) then
                select '2 leave insert';
        leave label_p2;
      end if;
            select '2—1 insert success';


    update report_cti_general_kpi q
    inner join
    (
      select count(*) as hjl,org_id,ts.name as org_name,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
            left join t_sys_organization ts on ts.domain=org_id
      where 1=1
        and creat_time >= start_time and creat_time < succed_time
      group by report_time_30m(creat_time),org_id
        ) as  a
    on a.creat_time = q.tjdate
    set q.callcount=a.hjl,q.org_id=a.org_id,q.org_name=a.org_name; 
      if (_err=1) then
                select '2 leave update';
        leave label_p2;
      end if;
            select '2 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as jtl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where r.answered is not null
      and creat_time >= start_time and creat_time < succed_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
     set q.turncount=a.jtl; 
        if (_err=1) then
                select '3 leave update';
        leave label_p2;
      end if;
            select '3 update success';

     update report_cti_general_kpi q
     inner join
     (
      select sum(answered) thsc,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where 1=1
      and creat_time >= start_time and creat_time < succed_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
     set q.talktimecount = a.thsc;
            if (_err=1) then
                select '4 leave update';
        leave label_p2;
      end if;
            select '4 update success';


     update report_cti_general_kpi q
     inner join
     (
      select count(*) as hrl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='inbound' or cti_cc_direction='inbound')
      and creat_time >= start_time and creat_time < succed_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
     set q.inboundcalls = a.hrl;
            if (_err=1) then
                select '5 leave update';
        leave label_p2;
      end if;
            select '5 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as hrjtl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='inbound' or cti_cc_direction='inbound')
      and r.answered is  not  null
      and creat_time >= start_time and creat_time < succed_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
     set q.inboundsucccalls = a.hrjtl;
            if (_err=1) then
                select '6 leave update';
        leave label_p2;
      end if;
            select '6 update success';
 
      update report_cti_general_kpi q
     inner join
     (
      select sum(answered) hrzhsc ,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='inbound' or cti_cc_direction='inbound')
      and creat_time >= start_time and creat_time < succed_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
    set q.inboundtalktimecount = a.hrzhsc;
           if (_err=1) then
                select '7 leave update';
        leave label_p2;
      end if;
            select '7 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as  hrl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr 
      where  queue_count is not null
      and creat_time >= start_time and creat_time < succed_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
    set q.transfertoagentcalls =a.hrl;
           if (_err=1) then
                select '8 leave update';
        leave label_p2;
      end if;
            select '8 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as  hrl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr 
      where  queue_count is not null and agent_time is not null
      and creat_time >= start_time and creat_time < succed_time
      group by report_time_30m(creat_time),org_id
     ) as  a
     on a.creat_time = q.tjdate
    set q.transfertoagentsucccalls =a.hrl;
           if (_err=1) then
                select '9 leave update';
        leave label_p2;
      end if;
            select '9 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as ly,org_id,report_time_30m(start_time) start_time1 
      from v_report_cti_record_files
      where cti_record_type = 'vm' 
      and start_time >= start_time and start_time < succed_time 
      group by report_time_30m(start_time),org_id
     ) as a
     on a.start_time1 = q.tjdate
     set q.vmcount = a.ly;
            if (_err=1) then
                select '10 leave update';
        leave label_p2;
      end if;
            select '10 update success';
 
      update report_cti_general_kpi q
     inner join
     (
       select sum(queue_time) as pdzsc,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  queue_count is not null
      and creat_time >= start_time and creat_time < succed_time 
      group by report_time_30m(creat_time),org_id
     ) as a
     on a.creat_time = q.tjdate
     set q.secinqueue = a.pdzsc;
            if (_err=1) then
                select '11 leave update';
        leave label_p2;
      end if;
            select '11 update success';

     update report_cti_general_kpi q
     inner join
     (
      select sum(agent_time) zrgzsc ,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  queue_count is not null 
      and creat_time >= start_time and creat_time < succed_time 
      group by report_time_30m(creat_time),org_id
     ) as a
     on a.creat_time = q.tjdate
     set q.transfertoagenttalktimecount = a.zrgzsc;
            if (_err=1) then
                select '12 leave update';
        leave label_p2;
      end if;
            select '12 update success';

     update report_cti_general_kpi q
     inner join
     (
      select sum(cas.duration)/1000 as hhzsc,ss.org_id,
      report_time_30m(cas.entry_timestamp) entry_timestamp1 
      from v_report_cti_agent_state as cas,
            v_report_cti_agent_session as ss
      where  cas.agent_session_id=ss.agent_session_id
            and cas.new_state_name = 'st_post_call'
      and cas.entry_timestamp >= start_time and cas.entry_timestamp < succed_time  
      group by report_time_30m(cas.entry_timestamp),ss.org_id
     ) as a
     on entry_timestamp1=q.tjdate
     set q.secinpostcall = a.hhzsc;
            if (_err=1) then
                select '13 leave update';
        leave label_p2;
      end if;
            select '13 update success';


     update report_cti_general_kpi q
     inner join
     (
      select count(*) as hcl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='outbound' or cti_cc_direction='outbound')
      and creat_time >= start_time and creat_time < succed_time 
      group by report_time_30m(creat_time),org_id
     ) as a
     on creat_time=q.tjdate
     set q.calloutcount = a.hcl;
            if (_err=1) then
                select '14 leave update';
        leave label_p2;
      end if;
            select '14 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as  hccgl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='outbound' or cti_cc_direction='outbound')
      and creat_time >= start_time and creat_time < succed_time 
      and answered is not null
      group by report_time_30m(creat_time),org_id
     ) as a
     on creat_time=q.tjdate
     set q.turnoutcount = a.hccgl;
            if (_err=1) then
                select '15 leave update';
        leave label_p2;
      end if;
            select '15 update success';

     update report_cti_general_kpi q
     inner join
     (
      select sum(answered) as hcthsc,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  (cti_call_direction='outbound' or cti_cc_direction='outbound')
      and creat_time >= start_time and creat_time < succed_time 
      and answered is not null
      group by report_time_30m(creat_time),org_id

     ) as a
     on creat_time=q.tjdate
     set q.callouttalktimecount = a.hcthsc;
            if (_err=1) then
                select '16 leave update';
        leave label_p2;
      end if;
            select '16 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as zxhcl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  cti_call_direction='outbound' and cti_cc_direction='outbound'
      and creat_time >= start_time and creat_time < succed_time 
      group by report_time_30m(creat_time),org_id

     ) as a
     on creat_time=q.tjdate
     set q.seatcalloutcount = a.zxhcl;
            if (_err=1) then
                select '17 leave update';
        leave label_p2;
      end if;
            select '17 update success';

     update report_cti_general_kpi q
     inner join
     (
      select count(*) as zxcghcl,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  cti_call_direction='outbound' and cti_cc_direction='outbound'
      
      and answered is not null
      group by report_time_30m(creat_time),org_id

     ) as a
     on creat_time=q.tjdate
     set q.seatturnoutcount = a.zxcghcl;
            if (_err=1) then
                select '18 leave update';
        leave label_p2;
      end if;
            select '18 update success';

     update report_cti_general_kpi q
     inner join
     (
      select sum(answered) as zxhcthsc,org_id,report_time_30m(creat_time) creat_time 
      from  report_cdr r 
      where  cti_call_direction='outbound' and cti_cc_direction='outbound'
      and creat_time >= start_time and creat_time < succed_time 
      and answered is not null
      group by report_time_30m(creat_time),org_id
     ) as a
     on creat_time=q.tjdate
     set q.seattalktimecount = a.zxhcthsc;
            if (_err=1) then
                select '19 leave update';
        leave label_p2;
      end if;
            select '19 update success';




   update report_plan_general_kpi set succedtime=succed_time,starttime=start_time
   where report_plan_general_kpi.type='update_kpi';
            
      if (_err=1) then
        select '20 leave update';
        leave label_p2;
      end if;            
            select '20 update success';            


      select 'commit';
      commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;        
        
    end loop label_p1;
  select 'end p_load_general_kpi';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_miscall` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_miscall`()
BEGIN
  declare start_id int default 0;
  declare end_id int;
  set sql_safe_updates = 0;
  select ifnull(SUCCEDID,0)+1 into  start_id FROM report_plan_miscall WHERE TYPE='UPDATE_MISCALL';
  select ifnull(MAX(c.ID),0) into end_id  FROM cti_channel c;
 
  if (end_id>start_id) then
  
	INSERT INTO report_miscall(cti_call_uuid,
    orig_caller_number,orig_callee_number,caller_number,callee_number,
    creat_time,answered_time,cancel_time,
    hangup_cause,hangup_disposition,QUEUE)
   
    select  distinct c.cti_call_uuid,c.orig_caller_number,c.orig_callee_number
    ,c.caller_number,c.callee_number,created_time,answered_time,hangup_time,
    hangup_cause,hangup_disposition,QUEUE
    from cti_channel c 
    left join 
    (
        SELECT cti_call_uuid ,queue,  min(event_timestamp) as event_timestamp
        FROM cti_acd_event TB WHERE  TB.ACTION='member-queue-start'
        group by cti_call_uuid
    ) d on c.cti_call_uuid=d.cti_call_uuid
    where  c.is_originator=1
 ## and c.cti_queue_accum is not null and c.bridged_time is null 
    and c.cti_cc_direction='inbound'
    and c.CTI_BRIDGE_AGENT_ACCUM is null
    AND c.ID>=start_id
    AND c.ID<=end_id; 
    
    commit;
    
    UPDATE report_plan_miscall SET STARTTIME=current_timestamp,
    STARTID=start_id,SUCCEDID=end_id,SUCCEDTIME= current_timestamp
    WHERE TYPE='UPDATE_MISCALL';
    
    commit;
   end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_org_agent_statetime` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `p_load_org_agent_statetime`()
begin
    declare start_time datetime;
    declare succed_time datetime;
  declare _err int default 0;
  declare continue handler for sqlexception set _err=1;
    set sql_safe_updates = 0;    
    set _err=0;
    
    select succedtime into start_time from report_plan_org_agent_statetime 
    where type='UPDATE_ORG_AGENT_STATETIME';
    
  set succed_time=report_time_30m(now());
    set start_time=report_time_30m(start_time);  
    label_p1:loop
    
   delete from report_org_agent_statetime 
   where tjdate>=start_time
   and tjdate<succed_time;
        
    if (_err=1) then
      select '1 leave label_p1';
      leave label_p1;
    end if;   
        select 'delete report_cti_general_kpi success';
        
        start transaction; 
        select 'start transaction';   
    label_p2:loop   


        insert into report_org_agent_statetime(tjdate,ORG_ID,org_name)
    select distinct  report_time_30m(login_timestamp),ORG_ID ,name  from v_report_cti_agent_state c
        inner join v_report_cti_agent_session s on c.agent_session_id= s.agent_session_id
        left join t_sys_organization t on t.domain=s.org_id
    where login_timestamp>=start_time
    and login_timestamp<succed_time;
      if (_err=1) then
                select '2 leave insert';
        leave label_p2;
      end if;
            select '2—1 insert success';


        update report_org_agent_statetime q
        inner join 
        (
      select sum(b.zhenling) as zhenling,sum(b.tonghua) as tonghua,
      sum(b.huahou) as huahou,sum(b.weijiuxu) as kongxian ,
      sum(b.kongxian) as jiuxu ,sum(b.xiaoxiu) as xiaoxiu ,
      org_id,entry_timestamp1
      from   
      (
      select org_id, report_time_30m(entry_timestamp) as entry_timestamp1 , case   
      when (
      new_state_name='st_offering'  
      or new_state_name='st_incoming_call'  
      or new_state_name='st_dialing_out'  
      or new_state_name='st_incoming_innercall'
       )  
      then sum(round(duration/1000,0))   end zhenling,  
      case  
      when 
      (new_state_name='st_in_queue_call'   or new_state_name='st_in_inbound_call'  
      or new_state_name='st_in_outbound_call'    or new_state_name='st_in_innercall')  
       then sum(round(duration/1000,0))  end tonghua,  
       case    
       when (new_state_name='st_post_call')   then sum(round(duration/1000,0))  end huahou,  
       case      when (new_state_name='st_idle')     then sum(round(duration/1000,0))    end weijiuxu, 
       case     when (new_state_name='st_waiting')     then sum(round(duration/1000,0))     end kongxian, 
       case     when (new_state_name='st_on_break')   then sum(round(duration/1000,0))    end xiaoxiu   
       from v_report_cti_agent_state as c   left join v_report_cti_agent_session s 
       on c.agent_session_id= s.agent_session_id    
       where 1=1  and  
       entry_timestamp>=start_time and   
       entry_timestamp<= succed_time
             group by new_state_name,ORG_ID,
       report_time_30m(entry_timestamp)
       ) as b
      group by entry_timestamp1,org_id
        )a
        on a.entry_timestamp1 = q.tjdate
        and a.org_id=q.org_id
        set q.ANSWERD=a.tonghua
        ,q.ringing=a.zhenling
        ,q.SECINPOSTCALL=a.huahou
        ,q.NOTREADY=a.kongxian
        ,q.FREETIME=a.jiuxu
        ,q.SHORTBREAK=a.xiaoxiu;
    
    
            if (_err=1) then
                select '2-2 leave update';
        leave label_p2;
      end if;
            select '2-2 update success';




   update report_plan_org_agent_statetime set succedtime=succed_time,starttime=start_time
   where report_plan_org_agent_statetime.type='UPDATE_ORG_AGENT_STATETIME';
            
      if (_err=1) then
        select '2-3 leave update';
        leave label_p2;
      end if;            
            select '2-3 update success';            


      select 'commit';
      commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;        
        
    end loop label_p1;
  select 'end p_load_general_kpi';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_skill` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_skill`(
          start_time datetime,
                end_time   datetime
)
begin
    declare start_time1 datetime;
    declare succed_time1 datetime;
  declare _err int default 0;
  declare continue handler for sqlexception set _err=1;
    set sql_safe_updates = 0;    
    set _err=0;
    
    set @start_time=report_time_30m(start_time);
    set @end_time=report_time_30m(end_time);
  
    label_p1:loop
    
    delete from report_skill 
    where tjdate>=@start_time
      and tjdate<@end_time;
        
    if (_err=1) then
      select '1 leave label_p1';
      leave label_p1;
    end if;   
        select 'delete report_skill success';
        
        start transaction; 
        select 'start transaction';   
    label_p2:loop   


    insert into report_skill(tjdate,skill,org_id)
    select tjdate,queue,'default' as org_id1 from report_date
        left join 
        (
      select distinct QUEUE,report_time_30m(aa.start_time) as start_time1
            from report_queue aa
            where 
      aa.start_time>=@start_time and aa.start_time<@end_time
        )a on a.start_time1=tjdate
        where  TJDATE>=start_time and TJDATE<succed_time;
    
      if (_err=1) then
                select '2 leave insert';
        leave label_p2;
      end if;
            select '2—1 insert success';


    update report_skill q
    inner join
    (
      select QUEUE,count(MEMBER_UUID) as queue_count
            ,report_time_30m(aa.start_time) as start_time1
            from report_queue aa
            where 
            aa.start_time>=@start_time and aa.start_time<@end_time
      group by QUEUE,report_time_30m(aa.start_time)
        ) as  a
         on q.skill=a.queue
    and  q.tjdate =a.start_time1
    set  q.queue_count=a.queue_count;
      if (_err=1) then
                select '2 leave update';
        leave label_p2;
      end if;
            select '2 update success';
       

     update report_skill q
     inner join
     (
      select QUEUE,count(MEMBER_UUID) as queue_succ_count
            ,report_time_30m(aa.start_time) as start_time1
      from report_queue aa
      where IS_BRIDGE_AGENT=1
            and aa.start_time>=@start_time and aa.start_time<@end_time
      group by QUEUE,report_time_30m(aa.start_time)

     ) as  a
    on q.skill=a.queue
    and  q.tjdate =a.start_time1

     set q.queue_succ_count=a.queue_succ_count; 
        if (_err=1) then
                select '3 leave update';
        leave label_p2;
      end if;
            select '3 update success';
              

     update report_skill q
     inner join
     (
      select count(CTI_CALL_UUID) as callcount,queue
            ,report_time_30m(aa.start_time) as start_time1
      from 
            (
            
        SELECT  aa.CTI_CALL_UUID,aa.queue
        ,aa.start_time
        FROM report_queue aa         
                right join 
                (
            SELECT  CTI_CALL_UUID
            ,min(aa.start_time) as start_time1
            FROM report_queue aa
                        where 
                aa.start_time>=@start_time and aa.start_time<@end_time
                group by CTI_CALL_UUID
                
                )bb on aa.start_time=bb.start_time1 and aa.CTI_CALL_UUID=bb.CTI_CALL_UUID
        where 
        aa.start_time>=@start_time and aa.start_time<@end_time
        group by aa.CTI_CALL_UUID,aa.queue
      
            )aa
      group by queue,report_time_30m(aa.start_time)
     ) as  a
      on q.skill=a.queue
    and  q.tjdate =a.start_time1
    set q.callcount = a.callcount;
            if (_err=1) then
                select '4 leave update';
        leave label_p2;
      end if;
            select '4 update success';



     update report_skill q
     inner join
     (
      select count(CTI_CALL_UUID) as turncount,queue
            ,report_time_30m(aa.start_time) as start_time1
      from 
            (
            
        SELECT  aa.CTI_CALL_UUID,aa.queue
        ,aa.start_time
        FROM report_queue aa         
                right join 
                (
            SELECT  CTI_CALL_UUID
            ,min(aa.start_time) as start_time1
            FROM report_queue aa
                        where 
                aa.start_time>=@start_time and aa.start_time<@end_time
                group by CTI_CALL_UUID
                
                )bb on aa.start_time=bb.start_time1 and aa.CTI_CALL_UUID=bb.CTI_CALL_UUID
        where aa.IS_BRIDGE_AGENT=1 and 
        aa.start_time>=@start_time and aa.start_time<@end_time
        group by aa.CTI_CALL_UUID,aa.queue
      
            )aa
      group by queue,report_time_30m(aa.start_time)
     ) as  a
         on q.skill=a.queue
    and  q.tjdate =a.start_time1
    
    set q.turncount = a.turncount;
            if (_err=1) then
                select '5 leave update';
        leave label_p2;
      end if;
            select '5 update success';
 
    update report_skill q
    inner join
    (
      select QUEUE,sum(duration) as queue_time
            ,report_time_30m(aa.start_time) as start_time1
            from report_queue aa
            where duration is not null
            and aa.start_time>=@start_time and aa.start_time<@end_time
      group by QUEUE,report_time_30m(aa.start_time)
        ) as  a
        on q.skill=a.queue
    and  q.tjdate =a.start_time1
    set  q.queue_time=a.queue_time;
         if (_err=1) then
                select '6 leave update';
        leave label_p2;
      end if;
            select '6 update success';


      select 'commit';
      commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;        
        
    end loop label_p1;
  select 'end p_load_skill';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_skill_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_skill_back`(
          start_time datetime,
                end_time   datetime
)
begin
    declare start_time datetime;
    declare succed_time datetime;
  declare _err int default 0;
  declare continue handler for sqlexception set _err=1;
    set sql_safe_updates = 0;    
    set _err=0;
    select succedtime into start_time from report_plan_skill where type='update_skill';
  set succed_time=report_time_30m(now());
    set start_time=report_time_30m(start_time);
    select start_time;
    select succed_time;
    label_p1:loop
    
    delete from report_skill 
    where tjdate>=start_time
      and tjdate<succed_time;
        
    if (_err=1) then
      select '1 leave label_p1';
      leave label_p1;
    end if;   
        select 'delete report_skill success';
        
        start transaction; 
        select 'start transaction';   
    label_p2:loop   


    insert into report_skill(tjdate,skill,org_id)
    select tjdate,queue,'default' as org_id1 from report_date
        left join 
        (
      select distinct QUEUE,report_time_30m(aa.start_time) as start_time1
            from report_queue aa
            where 
      aa.start_time>=start_time and aa.start_time<succed_time
        )a on a.start_time1=tjdate
        where  TJDATE>=start_time and TJDATE<succed_time;
    
      if (_err=1) then
                select '2 leave insert';
        leave label_p2;
      end if;
            select '2—1 insert success';


    update report_skill q
    inner join
    (
      select QUEUE,count(MEMBER_UUID) as queue_count
            ,report_time_30m(aa.start_time) as start_time1
            from report_queue aa
            where 
            aa.start_time>=start_time and aa.start_time<succed_time
      group by QUEUE,report_time_30m(aa.start_time)
        ) as  a
         on q.skill=a.queue
    and  q.tjdate =a.start_time1
    set  q.queue_count=a.queue_count;
      if (_err=1) then
                select '2 leave update';
        leave label_p2;
      end if;
            select '2 update success';
       

     update report_skill q
     inner join
     (
      select QUEUE,count(MEMBER_UUID) as queue_succ_count
            ,report_time_30m(aa.start_time) as start_time1
      from report_queue aa
      where IS_BRIDGE_AGENT=1
            and aa.start_time>=start_time and aa.start_time<succed_time
      group by QUEUE,report_time_30m(aa.start_time)

     ) as  a
    on q.skill=a.queue
    and  q.tjdate =a.start_time1

     set q.queue_succ_count=a.queue_succ_count; 
        if (_err=1) then
                select '3 leave update';
        leave label_p2;
      end if;
            select '3 update success';
              

     update report_skill q
     inner join
     (
      select count(CTI_CALL_UUID) as callcount,queue
            ,report_time_30m(aa.start_time) as start_time1
      from 
            (
            
        SELECT  aa.CTI_CALL_UUID,aa.queue
        ,aa.start_time
        FROM report_queue aa         
                right join 
                (
            SELECT  CTI_CALL_UUID
            ,min(aa.start_time) as start_time1
            FROM report_queue aa
                        where 
                aa.start_time>=start_time and aa.start_time<succed_time
                group by CTI_CALL_UUID
                
                )bb on aa.start_time=bb.start_time1 and aa.CTI_CALL_UUID=bb.CTI_CALL_UUID
        where 
        aa.start_time>=start_time and aa.start_time<succed_time
        group by aa.CTI_CALL_UUID,aa.queue
      
            )aa
      group by queue,report_time_30m(aa.start_time)
     ) as  a
      on q.skill=a.queue
    and  q.tjdate =a.start_time1
    set q.callcount = a.callcount;
            if (_err=1) then
                select '4 leave update';
        leave label_p2;
      end if;
            select '4 update success';



     update report_skill q
     inner join
     (
      select count(CTI_CALL_UUID) as turncount,queue
            ,report_time_30m(aa.start_time) as start_time1
      from 
            (
            
        SELECT  aa.CTI_CALL_UUID,aa.queue
        ,aa.start_time
        FROM report_queue aa         
                right join 
                (
            SELECT  CTI_CALL_UUID
            ,min(aa.start_time) as start_time1
            FROM report_queue aa
                        where 
                aa.start_time>=start_time and aa.start_time<succed_time
                group by CTI_CALL_UUID
                
                )bb on aa.start_time=bb.start_time1 and aa.CTI_CALL_UUID=bb.CTI_CALL_UUID
        where aa.IS_BRIDGE_AGENT=1 and 
        aa.start_time>=start_time and aa.start_time<succed_time
        group by aa.CTI_CALL_UUID,aa.queue
      
            )aa
      group by queue,report_time_30m(aa.start_time)
     ) as  a
         on q.skill=a.queue
    and  q.tjdate =a.start_time1
    
    set q.turncount = a.turncount;
            if (_err=1) then
                select '5 leave update';
        leave label_p2;
      end if;
            select '5 update success';
 
    update report_skill q
    inner join
    (
      select QUEUE,sum(duration) as queue_time
            ,report_time_30m(aa.start_time) as start_time1
            from report_queue aa
            where duration is not null
            and aa.start_time>=start_time and aa.start_time<succed_time
      group by QUEUE,report_time_30m(aa.start_time)
        ) as  a
        on q.skill=a.queue
    and  q.tjdate =a.start_time1
    set  q.queue_time=a.queue_time;
         if (_err=1) then
                select '6 leave update';
        leave label_p2;
      end if;
            select '6 update success';
 




   update report_plan_skill set succedtime=succed_time,starttime=start_time
   where report_plan_skill.type='update_skill';
            
      if (_err=1) then
        select '6 leave update';
        leave label_p2;
      end if;            
            select '6 update success';            


      select 'commit';
      commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;        
        
    end loop label_p1;
  select 'end p_load_skill';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_transfer_data1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_transfer_data1`()
BEGIN
   
    
    

    call  c8config.p_report_trans_acd_event;
	call c8config.p_report_trans_agent_action;
	call c8config.p_report_trans_agent_session;
	call c8config.p_report_trans_agent_state;


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_transfer_data2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_transfer_data2`()
BEGIN
   
    
    
	call c8config.p_report_trans_channel;
	call c8config.p_report_trans_channel_event;
	call c8config.p_report_trans_channel_execute;


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_weixi_agent` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_weixi_agent`()
begin
    declare start_time datetime;
    declare succed_time datetime;
  declare _err int default 0;
  declare continue handler for sqlexception set _err=1;
    set sql_safe_updates = 0;    
    set _err=0;
    select succedtime into start_time from report_plan_weixi_agent where type='update_weixin_agent';
  set succed_time=report_time_30m(now());
    set start_time=report_time_30m(start_time);
    
    select start_time;
    select succed_time;  
    label_p1:loop
    
    delete from report_weixin_agent 
    where tjdate>=start_time
      and tjdate<succed_time;
        
    if (_err=1) then
      select '1 leave label_p1';
      leave label_p1;
    end if;   
        select 'delete report_cti_general_kpi success';
        
        start transaction; 
        select 'start transaction';   
    label_p2:loop   


    insert into report_weixin_agent(tjdate,org_id,org_name,agent_id)
    select tjdate,orgid,orgname,agent_id
    from report_date  as date
    left join 
    (
    select distinct tw.orgid as orgid ,tw.orgname as orgname,vr.agent_id as agent_id 
          
          ,report_time_30m(vr.timestamp) as timestamp
          from v_report_im_history vr
          left join t_weixin tw on vr.to_id=tw.WEIXIN_ID
          
          where report_time_30m(timestamp)>=start_time
          and   report_time_30m(timestamp)<succed_time 
                    and vr.agent_id is not null
          order by vr.timestamp desc
    ) as a on date.tjdate=a.timestamp
     where tjdate>=start_time
    and   tjdate<succed_time;
    
      if (_err=1) then
                select '2 leave insert';
        leave label_p2;
      end if;
            select '2—1 insert success';


     update report_weixin_agent q
     inner join
     (
      select tw.orgid,vr.agent_id
            ,report_time_30m(timestamp) as timestamp,count(agent_id) as fsl
            from v_report_im_history vr
      left join t_weixin tw on vr.to_id=tw.WEIXIN_ID
      where wx_direction='发送' and creator='agent'
      and report_time_30m(timestamp) >= start_time 
            and report_time_30m(timestamp) < succed_time
      group by tw.orgid,vr.agent_id
            ,report_time_30m(timestamp)
     ) as  a
     on a.timestamp = q.tjdate
         and ifnull(a.orgid,0)=ifnull(q.org_id,0)
         and ifnull(a.agent_id,0)=ifnull(q.agent_id,0)
     set q.send_count=a.fsl; 
        if (_err=1) then
                select '3 leave update';
        leave label_p2;
      end if;
            select '3 update success';
           

     update report_weixin_agent q
     inner join
     (
      select tw.orgid,vr.agent_id
            ,report_time_30m(timestamp) as timestamp,count(agent_id) as jsl
            from v_report_im_history vr
      left join t_weixin tw on vr.to_id=tw.WEIXIN_ID
      where wx_direction='接收' and vr.agent_id is not null 
      and report_time_30m(timestamp) >= start_time 
            and report_time_30m(timestamp) < succed_time
      group by tw.orgid,vr.agent_id
            ,report_time_30m(timestamp)
     ) as  a
       on a.timestamp = q.tjdate
           and ifnull(a.orgid,0)=ifnull(q.org_id,0)
           and ifnull(a.agent_id,0)=ifnull(q.agent_id,0)
       set q.recv_count = a.jsl;
            if (_err=1) then
                select '4 leave update';
        leave label_p2;
      end if;
            select '4 update success';
            


     update report_weixin_agent q
     inner join
     (
      select tw.orgid,vr.agent_id
            ,report_time_30m(timestamp) as timestamp,count(agent_id) as sll
            from v_report_im_history vr
      left join t_weixin tw on vr.to_id=tw.WEIXIN_ID
      where wx_direction='发送' and creator='agent'
      and report_time_30m(timestamp) >= start_time 
            and report_time_30m(timestamp) < succed_time
      group by tw.orgid,vr.agent_id
            ,report_time_30m(timestamp)
     ) as  a
       on a.timestamp = q.tjdate
          and ifnull(a.orgid,0)=ifnull(q.org_id,0)
          and ifnull(a.agent_id,0)=ifnull(q.agent_id,0)
      set q.do_count = a.sll;
            if (_err=1) then
                select '5 leave update';
        leave label_p2;
      end if;
            select '5 update success';
   
   
   




update report_plan_weixi_agent set succedtime=succed_time,starttime=start_time
   where report_plan_weixi_agent.type='update_weixin_agent';
            
      if (_err=1) then
        select '6 leave update';
        leave label_p2;
      end if;            
            select '6 update success';            


      select 'commit';
      commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;        
        
    end loop label_p1;
  select 'end p_load_weixi_agent';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_load_weixi_company` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_load_weixi_company`()
begin
    declare start_time datetime;
    declare succed_time datetime;
  declare _err int default 0;
  declare continue handler for sqlexception set _err=1;
    set sql_safe_updates = 0;    
    set _err=0;
    select succedtime into start_time from report_plan_weixi_company where type='update_weixin_company';
  set succed_time=report_time_30m(now());
    set start_time=report_time_30m(start_time);
  
  
    label_p1:loop
    
    delete from report_weixin_company 
    where tjdate>=start_time
      and tjdate<succed_time;
        
    if (_err=1) then
      select '1 leave label_p1';
      leave label_p1;
    end if;   
        select 'delete report_cti_general_kpi success';
        
        start transaction; 
        select 'start transaction';   
    label_p2:loop   


    insert into report_weixin_company(tjdate,org_id,org_name,service_id,weixin_type)
        select tjdate,orgid,orgname,to_id,typre
            from report_date as date 
            left join
            (
        select distinct tw.orgid as orgid,tw.orgname as orgname,vr.to_id as to_id
        ,tw.type as typre
        ,report_time_30m(timestamp) as timestamp
        from v_report_im_history vr
        left join t_weixin tw on vr.to_id=tw.WEIXIN_ID
        where report_time_30m(timestamp)>=start_time
        and   report_time_30m(timestamp)<succed_time
      ) as a on date.tjdate=a.timestamp
            where date.tjdate>=start_time
            and date.tjdate<succed_time;
      if (_err=1) then
                select '2 leave insert';
        leave label_p2;
      end if;
            select '2—1 insert success';

     update report_weixin_company q
     inner join
     (
      select tw.orgid,vr.to_id,tw.type
            ,report_time_30m(timestamp) as timestamp,count(to_id) as fsl
            from v_report_im_history vr
      left join t_weixin tw on vr.to_id=tw.WEIXIN_ID
      where wx_direction='发送'
      and report_time_30m(timestamp) >= start_time 
            and report_time_30m(timestamp) < succed_time
      group by tw.orgid,vr.to_id,tw.type
            ,report_time_30m(timestamp)
     ) as  a
     on a.timestamp = q.tjdate
         and ifnull(a.orgid,0)=ifnull(q.org_id,0)
         and a.to_id=q.service_id
         and ifnull(a.type,0)=ifnull(q.weixin_type,0)
     set q.send_count=a.fsl; 
        if (_err=1) then
                select '3 leave update';
        leave label_p2;
      end if;
            select '3 update success';
           

     update report_weixin_company q
     inner join
     (
      select tw.orgid,vr.to_id,tw.type
            ,report_time_30m(timestamp) as timestamp,count(to_id) as jsl
            from v_report_im_history vr
      left join t_weixin tw on vr.to_id=tw.WEIXIN_ID
      where wx_direction='接收'
      and report_time_30m(timestamp) >= start_time 
            and report_time_30m(timestamp) < succed_time
      group by tw.orgid,vr.to_id,tw.type
            ,report_time_30m(timestamp)
     ) as  a
       on a.timestamp = q.tjdate
           and ifnull(a.orgid,0)=ifnull(q.org_id,0)
           and a.to_id=q.service_id
           and ifnull(a.type,0)=ifnull(q.weixin_type,0)
      set q.recv_count = a.jsl;
            if (_err=1) then
                select '4 leave update';
        leave label_p2;
      end if;
            select '4 update success';
            


     update report_weixin_company q
     inner join
     (
      select tw.orgid,vr.to_id,tw.type
            ,report_time_30m(timestamp) as timestamp,count(to_id) as sll
            from v_report_im_history vr
      left join t_weixin tw on vr.to_id=tw.WEIXIN_ID
      where wx_direction='接收'and agent_id is not null
      and report_time_30m(timestamp) >= start_time 
            and report_time_30m(timestamp) < succed_time
      group by tw.orgid,vr.to_id,tw.type
            ,report_time_30m(timestamp)
     ) as  a
       on a.timestamp = q.tjdate
          and ifnull(a.orgid,0)=ifnull(q.org_id,0)
          and a.to_id=q.service_id
          and ifnull(a.type,0)=ifnull(q.weixin_type,0)
      set q.do_count = a.sll;
            if (_err=1) then
                select '5 leave update';
        leave label_p2;
      end if;
            select '5 update success';
       




   update report_plan_weixi_company set succedtime=succed_time,starttime=start_time
   where report_plan_weixi_company.type='update_weixin_company';
            
      if (_err=1) then
        select '6 leave update';
        leave label_p2;
      end if;            
            select '6 update success';            


      select 'commit';
      commit;
            leave label_p1;
            
        end loop label_p2;
        
        select 'rollback';
        rollback;
        leave label_p1;        
        
    end loop label_p1;
  select 'end p_load_weixi_company';    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_accesscode_statistics` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_accesscode_statistics`(
                 times varchar(100),
               starttime  varchar(100),
               endtime    varchar(100),
               accesscode_display varchar(100),
               accesscode_name varchar(100)
              
               
)
begin
  declare sql1 nvarchar(4000);
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @accesscode_display=accesscode_display;
    set @accesscode_name=accesscode_name;
    
    
    
set sql1=concat(' select a1.tjdate'
      ,' ,a1.accesscode_display,a1.accesscode_name'
      ,' ,a1.num1,a1.num2,a1.num3,a1.billsum,ifnull(a1.billsum,0)/60 billsum_1 ,report_number_to_time(round(ifnull(a1.billsum,0),0)) billsum_ch1,a1.jtl,a1.agentjtl'
      ,' ,a2.num1 num2_1,a2.num2 num2_2,a2.billsum billsum2,ifnull(a2.billsum,0)/60 billsum_2,report_number_to_time(a2.billsum) billsum_ch2,a2.jtl jtl2'
      ,' ,ifnull(a1.num1,0)+ifnull(a2.num1,0) sum_num1,ifnull(a1.num2,0)+ifnull(a2.num2,0) sum_num2'
      ,' ,ifnull(a1.num3,0)+ifnull(a2.num2,0) sum_num3 '
      ,' ,ifnull(a1.billsum,0)+ifnull(a2.billsum,0) sum_billsum,(ifnull(a1.billsum,0)+ifnull(a2.billsum,0))/60 sum_billsum2'
      ,' ,report_number_to_time(ifnull(a1.billsum,0)+ifnull(a2.billsum,0)) sum_billsum_ch'
      ,' , ifnull(round((ifnull(a1.num2,0)+ifnull(a2.num2,0))/(ifnull(a1.num1,0)+ifnull(a2.num1,0))*100,2),0) as sum_jtl'
            ,' , ifnull(round((ifnull(a1.num3,0)+ifnull(a2.num2,0))/(ifnull(a1.num1,0)+ifnull(a2.num1,0))*100,2),0) as sum_agentjtl'

      ,'  from (');

   set sql1=concat(sql1,'select ');
    

    


   
    
    
  
  
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d '')');
         end if;
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(rd.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(rd.tjdate,''%Y''),''-0'',cast(week(rd.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(rd.tjdate,''%Y''),''-'',cast(week(rd.tjdate) as SIGNED)+1)  end ');
         end if;      
 
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
     set sql1=concat(sql1,' quarter(rd.tjdate)');
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y'')');
         end if;
  
     set sql1=concat(sql1,' as tjdate , ra.accesscode_display,ra.accesscode_name'
          ,' ,count(creat_time) num1,count(answered_time) num2,sum(c.billsec) billsum,COUNT(FIRST_AGENT_TIME) NUM3  '
          ,' , ifnull(round((ifnull(answered_time,0))/(ifnull(creat_time,0))*100,2),0)  as jtl '
          ,' , ifnull(round((ifnull(FIRST_AGENT_TIME,0))/(ifnull(creat_time,0))*100,2),0)  as AGENTJTL '
            ,' from report_date rd left join report_cdr c '
          ,' on rd.tjdate=c.creat_time_30m'
            ,' inner join report_accesscode ra'
            ,' on c.orig_callee_number=(ifnull(ra.accesscode,'''')+ifnull(ra.accesscode_pre,''''))'
            ,' where c.cti_call_direction=''inbound'''
            ,' and ra.cti_call_direction=''inbound''' );
                    
            if @starttime is not null and @starttime<>'' then
        set sql1=concat(sql1,' and  date_format(rd.tjdate,''%Y-%m-%d'')>=@starttime');
        end if; 
     
        if @endtime is not null and @endtime<>'' then
        set sql1=concat(sql1,' and  date_format(rd.tjdate,''%Y-%m-%d'')<=@endtime');
        end if; 
             
             if @accesscode_display is not null and @accesscode_display<>'' then
             set sql1=concat(sql1,' and ra.accesscode_display = @ra.accesscode_display');
             end if;
             
             if @accesscode_name is not null and @accesscode_name<>'' then
             set sql1=concat(sql1,'and ra.accesscode_name = @accesscode_name ');
             end if;
             
    set sql1=concat(sql1,' group by ');
   
  
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d '')');
         end if;
        
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(rd.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(rd.tjdate,''%Y''),''-0'',cast(week(rd.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(rd.tjdate,''%Y''),''-'',cast(week(rd.tjdate) as SIGNED)+1)  end ');
         end if;      
 
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
     set sql1=concat(sql1,' quarter(rd.tjdate)');
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y'')');
         end if;
  
  set sql1=concat(sql1,' ,ra.accesscode_display,ra.accesscode_name'
              ,'  )a1 '
      ,' left join ( ' );
     set sql1=concat(sql1,' select ');
       
  
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d '')');
         end if;
        
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(rd.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(rd.tjdate,''%Y''),''-0'',cast(week(rd.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(rd.tjdate,''%Y''),''-'',cast(week(rd.tjdate) as SIGNED)+1)  end ');
         end if;      
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
     set sql1=concat(sql1,' quarter(rd.tjdate)');
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y'')');
         end if;
  
     
     
     set sql1=concat(sql1,' as tjdate ,ra.accesscode_display,ra.accesscode_name,c.cti_call_direction '
          ,' ,count(creat_time) num1,count(answered_time) num2,sum(c.billsec) billsum '
          ,' ,ifnull(round((ifnull(answered_time,0))/(ifnull(creat_time,0))*100,2),0) as jtl'
            ,' from report_date rd left join report_cdr c on rd.tjdate=c.creat_time_30m'
            ,' inner join report_accesscode ra on '
            ,' left(c.orig_callee_number,char_length(ifnull(ra.accesscode_pre,'''')))=ifnull(ra.accesscode_pre,'''')'
            ,' where c.cti_call_direction=''outbound'''
          ,' and ra.cti_call_direction=''outbound''' );
                    
      if @starttime is not null and @starttime<>'' then
        set sql1=concat(sql1,' and  date_format(rd.tjdate,''%Y-%m-%d'')>=@starttime');
        end if; 
     
        if @endtime is not null and @endtime<>'' then
        set sql1=concat(sql1,' and  date_format(rd.tjdate,''%Y-%m-%d'')<=@endtime');
        end if; 
             
             if @accesscode_display is not null and @accesscode_display<>'' then
             set sql1=concat(sql1,' and ra.accesscode_display = @ra.accesscode_display');
             end if;
             
             if @accesscode_name is not null and @accesscode_name<>'' then
             set sql1=concat(sql1,'and ra.accesscode_name = @accesscode_name ');
             end if;     
                    
                    
     set sql1=concat(sql1,' group by ');
     
            
  
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d '')');
         end if;
        
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(rd.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(rd.tjdate,''%Y''),''-0'',cast(week(rd.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(rd.tjdate,''%Y''),''-'',cast(week(rd.tjdate) as SIGNED)+1)  end ');
         end if;      
 
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
     set sql1=concat(sql1,' quarter(rd.tjdate)');
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y'')');
         end if;
  
    set sql1=concat(sql1,' ,ra.accesscode_display,ra.accesscode_name,c.cti_call_direction '
      ,' )a2'
      ,' on a1.tjdate=a2.tjdate '
      ,' and a1.accesscode_display=a2.accesscode_display ');
       
       

 
    set @exesql =sql1; 
    prepare stm from @exesql; 
  
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_accesscode_statistics_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `p_report_accesscode_statistics_back`(
                 times varchar(100),
               starttime  varchar(100),
               endtime    varchar(100),
               accesscode_display varchar(100),
               accesscode_name varchar(100)
              
               
)
begin
  declare sql1 nvarchar(4000);
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @accesscode_display=accesscode_display;
    set @accesscode_name=accesscode_name;
    
    
    set sql1=concat('select a1.tjdate,a1.accesscode_display,a1.accesscode_name'
      ,' ,a1.num1,a1.num2,a1.billsum,a1.jtl'
      ,' ,a2.num1 num2_1,a2.num2 num2_2,a2.billsum billsum2,a2.jtl jtl2'
      ,' ,ifnull(a1.num1,0)+ifnull(a2.num1,0) sum_num1,ifnull(a1.num2,0)+ifnull(a2.num2,0) sum_num2'
      ,' ,ifnull(a1.billsum,0)+ifnull(a2.billsum,0) sum_billsum'
      ,' , ifnull(round((ifnull(a1.num2,0)+ifnull(a2.num2,0))/(ifnull(a1.num1,0)+ifnull(a2.num1,0))*100,2),0) as sum_jtl'
      ,' from ( ');

   set sql1=concat(sql1,'select ');
     
  
  
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d '')');
         end if;
        
     if @times='周' then
     set sql1=concat(sql1,' week(rd.tjdate)');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
     set sql1=concat(sql1,' quarter(rd.tjdate)');
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y'')');
         end if;
  
     set sql1=concat(sql1,' as tjdate , ra.accesscode_display,ra.accesscode_name'
          ,' ,count(creat_time) num1,count(answered_time) num2,sum(c.billsec) billsum  '
          ,' , ifnull(round((ifnull(answered_time,0))/(ifnull(creat_time,0))*100,2),0)  as jtl '
            ,' from report_date rd left join report_cdr c '
          ,' on rd.tjdate=c.creat_time_30m'
            ,' inner join report_accesscode ra'
            ,' on c.orig_callee_number=(ifnull(ra.accesscode,'''')+ifnull(ra.accesscode_pre,''''))'
            ,' where c.cti_call_direction=''inbound'''
            ,' and ra.cti_call_direction=''inbound''' );
                    
            if @starttime is not null and @starttime<>'' then
        set sql1=concat(sql1,' and  date_format(rd.tjdate,''%Y-%m-%d'')>=@starttime');
        end if; 
     
        if @endtime is not null and @endtime<>'' then
        set sql1=concat(sql1,' and  date_format(rd.tjdate,''%Y-%m-%d'')<=@endtime');
        end if; 
             
             if @accesscode_display is not null and @accesscode_display<>'' then
             set sql1=concat(sql1,' and ra.accesscode_display = @ra.accesscode_display');
             end if;
             
             if @accesscode_name is not null and @accesscode_name<>'' then
             set sql1=concat(sql1,'and ra.accesscode_name = @accesscode_name ');
             end if;
             
    set sql1=concat(sql1,' group by ');
   
  
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d '')');
         end if;
        
     if @times='周' then
     set sql1=concat(sql1,' week(rd.tjdate)');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
     set sql1=concat(sql1,' quarter(rd.tjdate)');
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y'')');
         end if;
  
  set sql1=concat(sql1,' ,ra.accesscode_display,ra.accesscode_name'
              ,'  )a1 '
      ,' left join ( ' );
     set sql1=concat(sql1,' select ');
       
  
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d '')');
         end if;
        
     if @times='周' then
     set sql1=concat(sql1,' week(rd.tjdate)');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
     set sql1=concat(sql1,' quarter(rd.tjdate)');
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y'')');
         end if;
  
     
     
     set sql1=concat(sql1,' as tjdate ,ra.accesscode_display,ra.accesscode_name,c.cti_call_direction '
          ,' ,count(creat_time) num1,count(answered_time) num2,sum(c.billsec) billsum '
          ,' ,ifnull(round((ifnull(answered_time,0))/(ifnull(creat_time,0))*100,2),0) as jtl'
            ,' from report_date rd left join report_cdr c on rd.tjdate=c.creat_time_30m'
            ,' inner join report_accesscode ra on '
            ,' left(c.orig_callee_number,char_length(ifnull(ra.accesscode_pre,'''')))=ifnull(ra.accesscode_pre,'''')'
            ,' where c.cti_call_direction=''outbound'''
          ,' and ra.cti_call_direction=''outbound''' );
                    
      if @starttime is not null and @starttime<>'' then
        set sql1=concat(sql1,' and  date_format(rd.tjdate,''%Y-%m-%d'')>=@starttime');
        end if; 
     
        if @endtime is not null and @endtime<>'' then
        set sql1=concat(sql1,' and  date_format(rd.tjdate,''%Y-%m-%d'')<=@endtime');
        end if; 
             
             if @accesscode_display is not null and @accesscode_display<>'' then
             set sql1=concat(sql1,' and ra.accesscode_display = @ra.accesscode_display');
             end if;
             
             if @accesscode_name is not null and @accesscode_name<>'' then
             set sql1=concat(sql1,'and ra.accesscode_name = @accesscode_name ');
             end if;     
                    
                    
     set sql1=concat(sql1,' group by ');
     
            
  
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m-%d '')');
         end if;
        
     if @times='周' then
     set sql1=concat(sql1,' week(rd.tjdate)');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y-%m '')');
         end if;
        
     if @times='季度' then
     set sql1=concat(sql1,' quarter(rd.tjdate)');
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(rd.tjdate,''%Y'')');
         end if;
  
    set sql1=concat(sql1,' ,ra.accesscode_display,ra.accesscode_name,c.cti_call_direction '
      ,' )a2'
      ,' on a1.tjdate=a2.tjdate '
      ,' and a1.accesscode_display=a2.accesscode_display ');
       
       


 
    set @exesql =sql1; 
    prepare stm from @exesql; 
  
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_action` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_action`(
                
                starttime varchar(40),
                stoptime varchar(40),
                seat_name varchar(40)
             
      
)
begin
  declare sql1 nvarchar(5000);
    set @starttime=starttime;
    set @stoptime=stoptime;
    set @seat_name=seat_name;
   
          set sql1=concat('select c.work_id,c.agent_name,c.event_timestamp,c.method,c.zh_cn,c.call_uuid '
               ,'  from v_report_agent_action as c where 1=1');
               
                if @seat_name is not null and @seat_name<>'' then
                set sql1=concat(sql1,' and c.agent_name=@seat_name ');
                end if;
  

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(c.event_timestamp,''%Y-%m-%d'')>=@starttime');
      end if; 
          
          if @stoptime is not null and @stoptime<>'' then
      set sql1=concat(sql1,' and  date_format(c.event_timestamp,''%Y-%m-%d'')<=@stoptime');
      end if; 
         
  
        

    set @exesql =sql1; 

    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_agentstate_session` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_agentstate_session`(
                starttime varchar(40),
                stoptime varchar(40),
                zname varchar(40)
              
              
)
begin
  declare sql1 nvarchar(2500);

    set @starttime=starttime;
    set @stoptime=stoptime;
    set @zname=zname;
 

  
    set sql1=concat('select c.work_id,c.agent_name,c.entry_timestamp,c.exit_timestamp,c.new_state_name,old_state_name,old_zh_cn,c.zh_cn,c.duration,report_number_to_time (c.duration/1000) as duration1,c.call_uuid'
     ,'   from v_report_agentstate_session as c '
       ,' where 1=1 ');
       
       
   if @zname is not null and @zname<>'' then
     set sql1=concat(sql1,' and c.agent_name=@zname ');
     end if;
       
     if @starttime is not null and @starttime<>'' then
  set sql1=concat(sql1,' and  date_format(c.entry_timestamp,''%Y-%m-%d'')>=@starttime');
  end if; 

  if @stoptime is not null and @stoptime<>'' then
  set sql1=concat(sql1,' and  date_format(c.entry_timestamp,''%Y-%m-%d'')<=@stoptime');
  end if; 
        

        

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_agentstate_session_h` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_agentstate_session_h`(
                starttime varchar(40),
                stoptime varchar(40),
                zname varchar(40)
              
              
)
begin
	declare sql1 nvarchar(2500);

    set @starttime=starttime;
    set @stoptime=stoptime;
    set @zname=zname;
 

	
	set sql1=concat('select c.work_id,c.agent_name,c.entry_timestamp,c.exit_timestamp,c.new_state_name,old_state_name,old_zh_cn,c.zh_cn,c.duration,report_number_to_time (c.duration/1000) as duration1,c.call_uuid'
	,'   from v_report_agentstate_session_h as c '
	,' where 1=1 ');
       
       
	 if @zname is not null and @zname<>'' then
     set sql1=concat(sql1,' and c.agent_name=@zname ');
     end if;
       
     if @starttime is not null and @starttime<>'' then
	set sql1=concat(sql1,' and  date_format(c.entry_timestamp,''%Y-%m-%d'')>=@starttime');
	end if; 

	if @stoptime is not null and @stoptime<>'' then
	set sql1=concat(sql1,' and  date_format(c.entry_timestamp,''%Y-%m-%d'')<=@stoptime');
	end if; 
        

        

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_agent_skill` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_agent_skill`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                work_id varchar(40),
                agent_name varchar(40),
                queue      varchar(40)
              
              
)
begin
  declare sql1 nvarchar(2500);
    
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @work_id=work_id;
    set @agent_name=agent_name;
    set @queue=queue;
   
        set sql1=concat('select tjdate1 ,agent_name,work_id,queue,turncount,org_id1  '
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;

 
  if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;


         if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,org_id1,QUEUE,WORK_ID,AGENT_NAME,'
        ,' sum(turncount) as turncount '
          ,' from(select ');
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(report_time_30m(q.start_time),''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m-%d '')');
         end if;
  
       if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(q.start_time) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(q.start_time,''%Y''),''-0'',cast(week(q.start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(q.start_time,''%Y''),''-'',cast(week(q.start_time) as SIGNED)+1)  end ');
         end if;
  
     if @times='月' then
     set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m '')');
         end if;
  
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(q.start_time,''%Y''),''-'',quarter(q.start_time))');      
         end if;
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(q.start_time,''%Y'')');
         end if;  
        
 
         set sql1= concat(sql1,' as d1,''default'' as org_id1, WORK_ID,s.AGENT_NAME,QUEUE
                    ,count(MEMBER_UUID) as turncount
          FROM report_queue q,v_report_cti_agent_session s
          where q.AGENT_SESSION_ID=s.AGENT_SESSION_ID
          and IS_BRIDGE_AGENT=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(q.start_time,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(q.start_time,''%Y-%m-%d'')<=@endtime');
      end if; 
          
      if @agent_name is not null and @agent_name<>'' then
      set sql1=concat(sql1,' and  s.agent_name=@agent_name');
      end if; 
          
      if @work_id is not null and @work_id<>'' then
      set sql1=concat(sql1,' and  work_id=@work_id');
      end if; 
          
      if @queue is not null and @queue<>'' then
      set sql1=concat(sql1,' and  queue=@queue');
      end if; 
          
        
         set sql1=concat( sql1,'   group by s.WORK_ID,s.AGENT_NAME,q.QUEUE,');
          
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(report_time_30m(q.start_time),''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m-%d '')');
         end if;
  
       if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(q.start_time) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(q.start_time,''%Y''),''-0'',cast(week(q.start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(q.start_time,''%Y''),''-'',cast(week(q.start_time) as SIGNED)+1)  end ');
         end if;
  
     if @times='月' then
     set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m '')');
         end if;
  
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(q.start_time,''%Y''),''-'',quarter(q.start_time))');      
         end if;
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(q.start_time,''%Y'')');
         end if;  
    
    
    
  set sql1=concat(sql1,' )  cdr1'
            ,' group by work_id,agent_name,queue ,d1 '
            ,' )  cdr'
            ,' on tjdate1=cdr.d1');
       set sql1=concat(sql1,' order by tjdate1');


    set @exesql =sql1; 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_agent_skill_h` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_agent_skill_h`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                work_id varchar(40),
                agent_name varchar(40),
                queue      varchar(40)
              
              
)
begin
	declare sql1 nvarchar(2500);
    
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @work_id=work_id;
    set @agent_name=agent_name;
    set @queue=queue;
   
        set sql1=concat('select tjdate1 ,agent_name,work_id,queue,turncount,org_id1  '
          ,' from(select distinct ');
    
		 if @times='半小时' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
		 if @times='小时' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
		 if @times='天' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;

 ####################################################################
	if @times='周' then
	     set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
		,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;
 ##################################################################
		 if @times='月' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;

########################################################################
         if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
########################################################################         
		 if @times='年' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
			  
	     set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
		  set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
		  end if; 
     
    
     
		  if @endtime is not null and @endtime<>'' then
		  set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
		  end if; 
    
          set sql1=concat(sql1,' )  d left join ('
	        ,' select d1,org_id1,QUEUE,WORK_ID,AGENT_NAME,'
		    ,' sum(turncount) as turncount '
	        ,' from(select ');
		 if @times='半小时' then
		 set sql1=concat(sql1,' date_format(report_time_30m(q.start_time),''%Y-%m-%d %H:%i'')');
         end if;
         
		 if @times='小时' then
		 set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m-%d %H'')');
         end if;
         
		 if @times='天' then
		 set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m-%d '')');
         end if;
  #################################################
       if @times='周' then
	     set sql1=concat(sql1,' case   when( cast(week(q.start_time) as SIGNED)+1 <=9) '
        ,' then '
		,'  concat(date_format(q.start_time,''%Y''),''-0'',cast(week(q.start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(q.start_time,''%Y''),''-'',cast(week(q.start_time) as SIGNED)+1)  end ');
         end if;
  #################################################
		 if @times='月' then
		 set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m '')');
         end if;
  #####################################################
      
		 if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(q.start_time,''%Y''),''-'',quarter(q.start_time))');      
         end if;
  ####################################################
		 if @times='年' then
		 set sql1=concat(sql1,' date_format(q.start_time,''%Y'')');
         end if;  
        /*  
		 set sql1=concat(sql1,' as d1, skill,callcount,turncount,queue_count,queue_succ_count
						,queue_time,org_id '
			                 ' from report_skill  c where skill is not null  ');  
		 */
 #--------------------------------------------------------------------------        
         set sql1= concat(sql1,' as d1,''default'' as org_id1, WORK_ID,s.AGENT_NAME,QUEUE
                    ,count(MEMBER_UUID) as turncount
					FROM report_queue q,cti_hist_agent_session s
					where q.AGENT_SESSION_ID=s.AGENT_SESSION_ID
					and IS_BRIDGE_AGENT=1');
#---------------------------------------------------------------------------         
          if @starttime is not null and @starttime<>'' then
		  set sql1=concat(sql1,' and  date_format(q.start_time,''%Y-%m-%d'')>=@starttime');
		  end if; 
     
		  if @endtime is not null and @endtime<>'' then
		  set sql1=concat(sql1,' and  date_format(q.start_time,''%Y-%m-%d'')<=@endtime');
		  end if; 
          
		  if @agent_name is not null and @agent_name<>'' then
		  set sql1=concat(sql1,' and  s.agent_name=@agent_name');
		  end if; 
          
		  if @work_id is not null and @work_id<>'' then
		  set sql1=concat(sql1,' and  work_id=@work_id');
		  end if; 
          
		  if @queue is not null and @queue<>'' then
		  set sql1=concat(sql1,' and  queue=@queue');
		  end if; 
          
	      
         set sql1=concat( sql1,'   group by s.WORK_ID,s.AGENT_NAME,q.QUEUE,');
          
         if @times='半小时' then
		 set sql1=concat(sql1,' date_format(report_time_30m(q.start_time),''%Y-%m-%d %H:%i'')');
         end if;
         
		 if @times='小时' then
		 set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m-%d %H'')');
         end if;
         
		 if @times='天' then
		 set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m-%d '')');
         end if;
  #################################################
       if @times='周' then
	     set sql1=concat(sql1,' case   when( cast(week(q.start_time) as SIGNED)+1 <=9) '
        ,' then '
		,'  concat(date_format(q.start_time,''%Y''),''-0'',cast(week(q.start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(q.start_time,''%Y''),''-'',cast(week(q.start_time) as SIGNED)+1)  end ');
         end if;
  #################################################
		 if @times='月' then
		 set sql1=concat(sql1,' date_format(q.start_time,''%Y-%m '')');
         end if;
  #####################################################
      
		 if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(q.start_time,''%Y''),''-'',quarter(q.start_time))');      
         end if;
  ####################################################
		 if @times='年' then
		 set sql1=concat(sql1,' date_format(q.start_time,''%Y'')');
         end if;  
    
    
    
  set sql1=concat(sql1,' )  cdr1'
		        ,' group by work_id,agent_name,queue ,d1 '
            ,' )  cdr'
            ,' on tjdate1=cdr.d1');
       set sql1=concat(sql1,' order by tjdate1');

#select sql1;
    set @exesql =sql1; 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_agent_state` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_agent_state`( 
                org_id varchar(40),
                agent_id varchar(40),
                work_id varchar(40),
                agent_name varchar(40),
                agent_ext varchar(40),
                start_time varchar(40),
                end_time varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40),
                state varchar(40)
)
begin
  declare sql1 nvarchar(2500);
    set @agent_id=agent_id;
    set @work_id=work_id;
  set @org_id=org_id;
    set @agent_name=agent_name;
    set @agent_ext=agent_ext;
    set @start_time=start_time;
    set @end_time=end_time;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
    set @state=state;
    
        set sql1=concat('select d.org_id,d.agent_id,c.work_id,c.agent_name,d.agent_ext,c.entry_timestamp,c.exit_timestamp,c.new_state_name,c.zh_cn,'
       ,' timestampdiff(second,c.entry_timestamp,c.exit_timestamp) as duration , '
       ,' report_number_to_time(timestampdiff(second,c.entry_timestamp,c.exit_timestamp))  as duration1 , '
       ,'c.new_state_name '
       ,'  from v_report_agentstate_session as c,v_report_cti_agent_session as d '
     ,' where c.agent_session_id=d.agent_session_id ');
       
       
       
       
      if @org_id is not null and @org_id<>'' then
            set sql1=concat(sql1,' and d.org_id=@org_id ');
            end if;
          
            if @agent_id is not null and @agent_id<>'' then
            set sql1=concat(sql1,' and d.agent_id=@agent_id ');
            end if;
            
            if @work_id is not null and @work_id<>'' then
            set sql1=concat(sql1,' and c.work_id=@work_id ');
            end if;
            
            if @agent_name is not null and  @agent_name<>'' then
            set sql1=concat(sql1,' and c.agent_name=@agent_name ');   
            end if;
            
            if @agent_ext is not null and @agent_ext<>'' then
            set sql1=concat(sql1,' and d.agent_ext=@agent_ext ');  
            end if;
            
      if @start_time is not null and @start_time<>'' then
        set sql1=concat(sql1,' and date_format(c.entry_timestamp,''%Y-%m-%d'')>=@start_time');
            end if; 
     
            if @end_time is not null and @end_time<>'' then
        set sql1=concat(sql1,' and date_format(c.entry_timestamp,''%Y-%m-%d'')<=@end_time');
            end if;
            
            if @start_h+@start_m+@start_s >0 then
        set sql1=concat(sql1,' and timestampdiff(second,c.entry_timestamp,c.exit_timestamp) >=ltrim(@start_h*3600+@start_m*60+@start_s)');
            end if; 
            if @stop_h+@stop_m+@stop_s >0 then
      set sql1=concat(sql1,' and timestampdiff(second,c.entry_timestamp,c.exit_timestamp) <=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
            end if;   
            
            if @state is not null and @state<>'' then
            set sql1=concat(sql1,' and c.zh_cn=@state ');   
            end if;
            
            set sql1=concat(sql1,' order by c.entry_timestamp desc');   
       
       

   

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;
    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_agent_state_type` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_agent_state_type`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                work_id varchar(40),
                agent_name varchar(40),
                services_type      varchar(40),
                is_leader          varchar(40)
              
              
)
begin
  declare sql1 nvarchar(2500);
    
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @work_id=work_id;
    set @agent_name=agent_name;
    set @services_type=services_type;
  set @is_leader=is_leader;
   
        set sql1=concat('select tjdate1 ,
        case is_leader when 1 then ''是'' 
        when 0 then ''否''   end  as is_leader
        
        ,services_type,work_id,agent_name,count,org_id1  '
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;

 
  if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;


         if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,''default'' as org_id1,work_id,services_type,AGENT_NAME,is_leader ,'
        ,' sum(count) as count '
          ,' from(select  ');
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(report_time_30m(a.start_time),''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m-%d '')');
         end if;
  
       if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(a.start_time) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(a.start_time,''%Y''),''-0'',cast(week(a.start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(a.start_time,''%Y''),''-'',cast(week(a.start_time) as SIGNED)+1)  end ');
         end if;
  
     if @times='月' then
     set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m '')');
         end if;
  
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(a.start_time,''%Y''),''-'',quarter(a.start_time))');      
         end if;
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(a.start_time,''%Y'')');
         end if;  
 

     set sql1=concat(sql1,' as d1,count(id) as count ,b.work_id ,b.agent_name ,is_leader,a.services_type'
          ,' from '
          ,' report_agent_services  a,v_report_cti_agent_session  b '
          ,' where a.agent_session_id=b.agent_session_id  ');


          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(a.start_time,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(a.start_time,''%Y-%m-%d'')<=@endtime');
      end if; 
          
      if @agent_name is not null and @agent_name<>'' then
      set sql1=concat(sql1,' and  b.agent_name=@agent_name');
      end if; 
          
      if @work_id is not null and @work_id<>'' then
      set sql1=concat(sql1,' and  work_id=@work_id');
      end if; 
          
      if @is_leader is not null and @is_leader<>'' then
      set sql1=concat(sql1,' and  is_leader=@is_leader');
      end if; 
          
      if @services_type is not null and @services_type<>'' then
      set sql1=concat(sql1,' and  services_type=@services_type');
      end if; 
          
        
         set sql1=concat( sql1,'   group by b.work_id ,b.agent_name ,is_leader,a.services_type,');
          
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(report_time_30m(a.start_time),''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m-%d '')');
         end if;
  
       if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(a.start_time) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(a.start_time,''%Y''),''-0'',cast(week(a.start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(a.start_time,''%Y''),''-'',cast(week(a.start_time) as SIGNED)+1)  end ');
         end if;
  
     if @times='月' then
     set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m '')');
         end if;
  
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(a.start_time,''%Y''),''-'',quarter(a.start_time))');      
         end if;
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(a.start_time,''%Y'')');
         end if;  
    
    
    
  set sql1=concat(sql1,' )  cdr1'
            ,' group by work_id,agent_name,is_leader,services_type ,d1 '
            ,' )  cdr'
            ,' on tjdate1=cdr.d1');
       set sql1=concat(sql1,' order by tjdate1');


    set @exesql =sql1; 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_agent_state_type_h` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_agent_state_type_h`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                work_id varchar(40),
                agent_name varchar(40),
                services_type      varchar(40),
                is_leader          varchar(40)
              
              
)
begin
	declare sql1 nvarchar(2500);
    
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @work_id=work_id;
    set @agent_name=agent_name;
    set @services_type=services_type;
	set @is_leader=is_leader;
   
        set sql1=concat('select tjdate1 ,
        case is_leader when 1 then ''是'' 
        when 0 then ''否''   end  as is_leader
        
        ,services_type,work_id,agent_name,count,org_id1  '
          ,' from(select distinct ');
    
		 if @times='半小时' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
		 if @times='小时' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
		 if @times='天' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;

 ####################################################################
	if @times='周' then
	     set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
		,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;
 ##################################################################
		 if @times='月' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;

########################################################################
         if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
########################################################################         
		 if @times='年' then
		 set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
			  
	     set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
		  set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
		  end if; 
     
    
     
		  if @endtime is not null and @endtime<>'' then
		  set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
		  end if; 
    
          set sql1=concat(sql1,' )  d left join ('
	        ,' select d1,''default'' as org_id1,work_id,services_type,AGENT_NAME,is_leader ,'
		    ,' sum(count) as count '
	        ,' from(select  ');
		 if @times='半小时' then
		 set sql1=concat(sql1,' date_format(report_time_30m(a.start_time),''%Y-%m-%d %H:%i'')');
         end if;
         
		 if @times='小时' then
		 set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m-%d %H'')');
         end if;
         
		 if @times='天' then
		 set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m-%d '')');
         end if;
  #################################################
       if @times='周' then
	     set sql1=concat(sql1,' case   when( cast(week(a.start_time) as SIGNED)+1 <=9) '
        ,' then '
		,'  concat(date_format(a.start_time,''%Y''),''-0'',cast(week(a.start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(a.start_time,''%Y''),''-'',cast(week(a.start_time) as SIGNED)+1)  end ');
         end if;
  #################################################
		 if @times='月' then
		 set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m '')');
         end if;
  #####################################################
      
		 if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(a.start_time,''%Y''),''-'',quarter(a.start_time))');      
         end if;
  ####################################################
		 if @times='年' then
		 set sql1=concat(sql1,' date_format(a.start_time,''%Y'')');
         end if;  
 #--------------------------------------------------------------------------        

		 set sql1=concat(sql1,' as d1,count(a.id) as count ,b.work_id ,b.agent_name ,is_leader,a.services_type'
					,' from '
					,' report_agent_services  a,cti_hist_agent_session  b '
					,' where a.agent_session_id=b.agent_session_id  ');
#---------------------------------------------------------------------------      

          if @starttime is not null and @starttime<>'' then
		  set sql1=concat(sql1,' and  date_format(a.start_time,''%Y-%m-%d'')>=@starttime');
		  end if; 
     
		  if @endtime is not null and @endtime<>'' then
		  set sql1=concat(sql1,' and  date_format(a.start_time,''%Y-%m-%d'')<=@endtime');
		  end if; 
          
		  if @agent_name is not null and @agent_name<>'' then
		  set sql1=concat(sql1,' and  b.agent_name=@agent_name');
		  end if; 
          
		  if @work_id is not null and @work_id<>'' then
		  set sql1=concat(sql1,' and  work_id=@work_id');
		  end if; 
          
		  if @is_leader is not null and @is_leader<>'' then
		  set sql1=concat(sql1,' and  is_leader=@is_leader');
		  end if; 
          
		  if @services_type is not null and @services_type<>'' then
		  set sql1=concat(sql1,' and  services_type=@services_type');
		  end if; 
          
	      
         set sql1=concat( sql1,'   group by b.work_id ,b.agent_name ,is_leader,a.services_type,');
          
         if @times='半小时' then
		 set sql1=concat(sql1,' date_format(report_time_30m(a.start_time),''%Y-%m-%d %H:%i'')');
         end if;
         
		 if @times='小时' then
		 set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m-%d %H'')');
         end if;
         
		 if @times='天' then
		 set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m-%d '')');
         end if;
  #################################################
       if @times='周' then
	     set sql1=concat(sql1,' case   when( cast(week(a.start_time) as SIGNED)+1 <=9) '
        ,' then '
		,'  concat(date_format(a.start_time,''%Y''),''-0'',cast(week(a.start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(a.start_time,''%Y''),''-'',cast(week(a.start_time) as SIGNED)+1)  end ');
         end if;
  #################################################
		 if @times='月' then
		 set sql1=concat(sql1,' date_format(a.start_time,''%Y-%m '')');
         end if;
  #####################################################
      
		 if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(a.start_time,''%Y''),''-'',quarter(a.start_time))');      
         end if;
  ####################################################
		 if @times='年' then
		 set sql1=concat(sql1,' date_format(a.start_time,''%Y'')');
         end if;  
    
    
    
  set sql1=concat(sql1,' )  cdr1'
		        ,' group by work_id,agent_name,is_leader,services_type ,d1 '
            ,' )  cdr'
            ,' on tjdate1=cdr.d1');
       set sql1=concat(sql1,' order by tjdate1');

#select sql1;
    set @exesql =sql1; 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_REPORT_CALLEVERDAYCOLLECT` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_REPORT_CALLEVERDAYCOLLECT`(
                 TIMES VARCHAR(100),
                 STARTTIME VARCHAR(40),
                 ENDTIME   VARCHAR(40),
                 ACCESSCODE varchar(40),
                 ORG_ID varchar(40),
                 CTI_CALL_DIRECTION varchar(40),
                 CTI_CC_DIRECTION varchar(40),
                 ORIG_CALLER_TYPE varchar(40),
         ORG_NAME varchar(40)
               
             
)
BEGIN
  DECLARE sql1 nvarchar(4000);
    set @TIMES=TIMES;
    set @STARTTIME=STARTTIME;
    set @ENDTIME=ENDTIME;
    set @ACCESSCODE=ACCESSCODE;
    set @ORG_ID=ORG_ID;
    set @CTI_CALL_DIRECTION=CTI_CALL_DIRECTION;
    set @CTI_CC_DIRECTION=CTI_CC_DIRECTION;
    set @ORIG_CALLER_TYPE=ORIG_CALLER_TYPE;
    set @ORG_NAME=ORG_NAME;
    
    SET sql1=concat('select  d1,'
        ,'ACCESSCODE,ORG_ID,org_name,'
        ,'t1.CTI_CALL_DIRECTION,t2.CTI_CALL_DIRECTION_CHINESE AS CTI_CALL_DIRECTION1,'
        ,'T1.CTI_CC_DIRECTION,T3.CTI_CALL_DIRECTION_CHINESE AS CTI_CC_DIRECTION1,'
        ,'T1.ORIG_CALLER_TYPE,T4.CTI_CHANNEL_TYPE_CHINESE AS ORIG_CALLER_TYPE1,'
        ,'ifnull(sum(CALLCOUNT),0) as CALLCOUNT,'  
        ,'ifnull(sum(TURNCOUNT),0) as TURNCOUNT ,'  
       
        ,'concat(ifnull(round(ifnull(sum(TURNCOUNT),0)*100/ifnull(sum(CALLCOUNT),0),2),0),''%'') as turnrate,'
        ,'sec_to_time(ifnull(sum(ANSWERED),0)) as ANSWERED,'
       
        ,'ifnull(sum(QUEUECOUNT),0) as QUEUECOUNT,' 
        ,'sec_to_time(ifnull(sum(QUEUETIME),0)) as QUEUETIME,' 
        ,'ifnull(sum(AGENT_COUNT),0) as AGENT_COUNT,' 
        ,'sec_to_time(ifnull(sum(AGENT_TIME),0)) as AGENT_TIME,' 
    ,'ifnull(sum(IVR_COUNT),0) as IVR_COUNT,' 
        ,'sec_to_time(ifnull(sum(IVR_TIME),0)) as IVR_TIME,' 
    ,'ifnull(sum(FAXCOUNT),0) as FAXCOUNT,' 
    ,'ifnull(sum(VMCOUNT),0) as VMCOUNT,' 
        ,'sec_to_time(ifnull(sum(VMTIME),0)) as VMTIME' 
        ,' from ');
       
        set sql1=concat(sql1,'( select  ');
        
         IF @TIMES='半小时' then
     SET sql1=concat(sql1,' date_format(TJDATE,''%Y-%m-%d %H:%i'')');
         end if;
         
     IF @TIMES='小时' then
     SET sql1=concat(sql1,' date_format(TJDATE,''%Y-%m-%d %H'')');
         end if;
         
     IF @TIMES='天' then
     SET sql1=concat(sql1,' date_format(TJDATE,''%Y-%m-%d '')');
         end if;
        
     IF @TIMES='周' then
       SET sql1=concat(sql1,' case  TJDATE when( WEEK(TJDATE)<10) '
         ,' then '
     ,'  concat(date_format(TJDATE,''%Y''),''年第0'',WEEK(TJDATE),''周'')   '
         ,' else '
         ,'  concat(date_format(TJDATE,''%Y''),''年第'',WEEK(TJDATE),''周'')  end ');
         end if;
         
     IF @TIMES='月' then
     SET sql1=concat(sql1,' date_format(TJDATE,''%Y-%m '')');
         end if;
         
         IF @TIMES='季度' then
         SET sql1=concat(sql1,'  concat(date_format(TJDATE,''%Y''),''年'',QUARTER(TJDATE),''季度'')');      
         end if;
         
     IF @TIMES='年' then
     SET sql1=concat(sql1,' date_format(TJDATE,''%Y'')');
         end if;
         
         set sql1=concat(sql1,' as d1,'
                         ,'ACCESSCODE,'                   
                         ,'ORG_ID,'                       
                         ,'ORG_NAME,'
                         ,'CTI_CALL_DIRECTION,'           
                         ,'CTI_CC_DIRECTION,'             
                         ,'ORIG_CALLER_TYPE,'             
                         ,'CALLCOUNT,'                    
                         ,'TURNCOUNT,'                    
                         ,'ANSWERED,'                     
                         ,'QUEUECOUNT,'                   
                         ,'QUEUETIME,'                    
                         ,'AGENT_COUNT,'                  
                         ,'AGENT_TIME,'                   
                         ,'IVR_COUNT,'                    
                         ,'IVR_TIME,'                     
                         ,'FAXCOUNT,'                     
                         ,'VMCOUNT,'                      
                         ,'VMTIME'                       
                         ,' from report_calleverdaycollect where 1=1 '
                          );

            if @STARTTIME is not null and @STARTTIME<>'' then
        set sql1=CONCAT(sql1,' and TJDATE>=@STARTTIME');
            end if; 
     
            if @ENDTIME is not null and @ENDTIME<>'' then
        set sql1=CONCAT(sql1,' and TJDATE<=@ENDTIME');
            end if; 
            
      if @ACCESSCODE is not null and @ACCESSCODE<>'' then
        set sql1=CONCAT(sql1,' and ACCESSCODE=@ACCESSCODE');
            end if; 
     
            if @ORG_ID is not null and @ORG_ID<>'' then
        set sql1=CONCAT(sql1,' and ORG_ID=@ORG_ID');
            end if; 
            
      if @ORG_NAME is not null and @ORG_NAME<>'' then
        set sql1=CONCAT(sql1,' and ORG_NAME=@ORG_NAME');
            end if; 
            
      if @CTI_CALL_DIRECTION is not null and @CTI_CALL_DIRECTION<>'' then
        set sql1=CONCAT(sql1,' and CTI_CALL_DIRECTION=@CTI_CALL_DIRECTION');
            end if; 
     
            if @CTI_CC_DIRECTION is not null and @CTI_CC_DIRECTION<>'' then
        set sql1=CONCAT(sql1,' and CTI_CC_DIRECTION=@CTI_CC_DIRECTION');
            end if; 
            
      if @ORIG_CALLER_TYPE is not null and @ORIG_CALLER_TYPE<>'' then
        set sql1=CONCAT(sql1,' and ORIG_CALLER_TYPE=@ORIG_CALLER_TYPE');
            end if; 
 
          SET sql1=CONCAT(sql1,' ) as t1'
            ,' left join report_cti_call_direction t2 on t2.CTI_CALL_DIRECTION=t1.CTI_CALL_DIRECTION '
            ,' left join report_cti_call_direction t3 on t3.CTI_CALL_DIRECTION=t1.CTI_CC_DIRECTION '
            ,' left join report_channel_type t4 on t4.CTI_CHANNEL_TYPE=t1.ORIG_CALLER_TYPE '
          ,' group by t1.d1,ACCESSCODE,ORG_ID,CTI_CALL_DIRECTION,CTI_CC_DIRECTION,ORIG_CALLER_TYPE');

    set @exesql =sql1; 
   
    prepare stm from @exesql; 
    
    execute stm;

    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_cdr` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_cdr`(
                cti_call_direction varchar(40),
                cti_cc_direction varchar(40),
                orig_caller_number varchar(40),
                orig_callee_number varchar(40),
                caller_number varchar(40),
                callee_number varchar(40),
                account_code varchar(40),
                hangup_cause varchar(40),
                hangup_disposition varchar(40),
                cti_call_uuid varchar(40),
                orig_caller_type varchar(40),
                starttime varchar(40),
                stoptime varchar(40),
                cancel_time varchar(40),
                start_dh varchar(40),
                start_dm varchar(1),
                start_ds varchar(40),
                stop_dh varchar(40),
                stop_dm varchar(40),
                stop_ds varchar(40),
                start_bh varchar(40),
                start_bm varchar(40),
                start_bs varchar(40),
                stop_bh varchar(40),
                stop_bm varchar(40),
                stop_bs varchar(40),
                org_id  varchar(40),
                org_name varchar(40)
)
begin
  declare sql1 nvarchar(4000);
    set @cti_call_direction=cti_call_direction;
    set @cti_cc_direction=cti_cc_direction;
    set @orig_caller_number=orig_caller_number;
    set @orig_callee_number=orig_callee_number;
    set @caller_number=caller_number;
    set @callee_number=callee_number;
    set @account_code=account_code;
    set @hangup_cause=hangup_cause;
    set @hangup_disposition=hangup_disposition;
    set @cti_call_uuid=cti_call_uuid;
    set @orig_caller_type=orig_caller_type;
               
    set @starttime=starttime;
    set @stoptime=stoptime;
    set @cancel_time =cancel_time;
    set @start_dh =start_dh;
    set @start_dm =start_dm;
    set @start_ds =start_ds;
    set @stop_dh =stop_dh;
    set @stop_dm =stop_dm;
    set @stop_ds =stop_ds;
    set @start_bh=start_bh;
    set @start_bm =start_bm;
    set @start_bs =start_bs;
    set @stop_bh =stop_bh;
    set @stop_bm =stop_bm; 
    set @stop_bs =stop_bs;
  set @org_id =org_id; 
    set @org_name =org_name;


         set sql1=concat('select distinct  a.zh_cn,c1.account_code,c1.agent_count,c1.agent_time,c1.agent_time1,c1.answered,'
            ,'c1.answered_time,c1.answered1,'
            ,'c1.billsec,c1.billsec1,c1.callee_number,c1.caller_number,c1.cancel_time,'
            ,'c1.creat_time,c1.cti_call_direction,c1.cti_call_direction1,'
            ,'c1.cti_call_uuid,c1.cti_cc_direction,c1.duration,c1.duration1,'
            ,'c1.hangup_cause,c1.hangup_disposition,'
            ,'c1.ivr_count,c1.ivr_time,c1.ivr_time1,'
            ,'c1.orig_callee_number,c1.orig_caller_number,'
            ,'c1.orig_caller_type,c1.queue_count,c1.queue_time,c1.queue_time1,'
            ,'c1.waitsec,c1.waitsec1, c1.orig_caller_type1,'
            ,'c1.hangup_disposition1,'
            ,'c1.cti_cc_direction1,org_name '
            ,', c1.first_agent_time,c1.org_id,c1.agent_id,c1.agent_name,c1.agent_session_id,c1.agent_channel_uuid,c1.work_id '
 ,' from (  select distinct c.account_code,c.agent_count,c.agent_time,report_number_to_time(c.agent_time) as agent_time1,c.answered,'
            ,'c.answered_time,report_number_to_time(c.answered) as answered1,'
            ,'c.billsec,c.billsec1,c.callee_number,c.caller_number,c.cancel_time,'
            ,'c.creat_time,c.cti_call_direction,'
            ,'c.cti_call_uuid,c.cti_cc_direction,c.duration,report_number_to_time(c.duration) as duration1,'
            ,'c.hangup_cause,c.hangup_disposition,'
            ,'c.id,c.ivr_count,c.ivr_time,report_number_to_time(c.ivr_time) as ivr_time1,'
            ,'c.orig_callee_number,c.orig_caller_number,'
            ,'c.orig_caller_type,c.queue_count,c.queue_time,report_number_to_time(c.queue_time) as queue_time1,'
            ,'c.waitsec,report_number_to_time(c.waitsec) as waitsec1,'
      ,'c.first_agent_time,c.org_id,c.agent_id,c.agent_name,c.agent_session_id,c.agent_channel_uuid,c.work_id, '
            ,' w.cti_channel_type_chinese as orig_caller_type1,ts.name as org_name,'
            ,' v.hangup_disposition_chinese as  hangup_disposition1,'
            ,' y.cti_call_direction_chinese as cti_call_direction1,'
            ,' x.cti_call_direction_chinese as cti_cc_direction1'            
            ,' from report_cdr  c' 
            ,' left join report_cti_call_direction y on c.cti_call_direction = y.cti_call_direction '
            ,' left join report_cti_call_direction x on c.cti_cc_direction = x.cti_call_direction '
            ,'  left join  report_channel_type w on c.orig_caller_type  = w.cti_channel_type  '
            ,'  left join  report_hangup_disposition v on c.hangup_disposition = v.hangup_disposition '
            ,' left join t_sys_organization ts on ts.domain=c.org_id '
            ,' where 1=1 ');
      
        if @start_dh+@start_dm+@start_ds >0 then
        set sql1=concat(sql1,' and c.duration>=ltrim(@start_dh*3600+@start_dm*60+@start_ds)');
            end if; 
          
            if @stop_dh+@stop_dm+@stop_ds >0 then
        set sql1=concat(sql1,' and c.duration<=ltrim(@stop_dh*3600+@stop_dm*60+@stop_ds)');
            end if; 
            
            
      if @start_bh+@start_bm+@start_bs >0 then
        set sql1=concat(sql1,' and c.billsec>=ltrim(@start_bh*3600+@start_bm*60+@start_bs)');
            end if; 
          
            if @stop_bh+@stop_bm+@stop_bs >0 then
        set sql1=concat(sql1,' and c.billsec<=ltrim(@stop_bh*3600+@stop_bm*60+@stop_bs)');
            end if; 
            
            
                  
            if @starttime is not null and @starttime<>'' then
        set sql1=concat(sql1,' and date_format(c.creat_time,''%Y-%m-%d'')>=@starttime');
            end if; 
     
     
            if @stoptime is not null and @stoptime<>'' then
        set sql1=concat(sql1,' and date_format(c.creat_time,''%Y-%m-%d'')<=@stoptime');
            end if; 
            
      if @cti_call_direction is not null and @cti_call_direction<>'' then
            set sql1=concat(sql1,' and c.cti_call_direction=@cti_call_direction ');
            end if;
            
          
            
            if @cti_cc_direction is not null and @cti_cc_direction<>'' then
            set sql1=concat(sql1,' and c.cti_cc_direction=@cti_cc_direction ');
            end if;
            
            
            if @orig_caller_number is not null and @orig_caller_number<>'' then
            set sql1=concat(sql1,' and c.orig_caller_number=@orig_caller_number ');
            end if;
            
            if @orig_callee_number is not null and @orig_callee_number<>'' then
            set sql1=concat(sql1,' and c.orig_callee_number=@orig_callee_number ');
      end if;
            
            if @caller_number is not null and @caller_number<>'' then
            set sql1=concat(sql1,' and c.caller_number=@caller_number ');
            end if;
            
            if @callee_number is not null and @callee_number<>'' then
            set sql1=concat(sql1,' and c.callee_number=@callee_number ');
            end if;
            
            if @account_code is not null and @account_code<>'' then
            set sql1=concat(sql1,' and c.account_code=@account_code ');
            end if;
            
            if @hangup_cause is not null and  @hangup_cause<>'' then
            set sql1=concat(sql1,' and c.hangup_cause=@hangup_cause ');
            end if;
            
            if @hangup_disposition is not null and @hangup_disposition<>'' then
            set sql1=concat(sql1,' and c.hangup_disposition=@hangup_disposition ');
            end if;
            
            if @cti_call_uuid is not null and @cti_call_uuid<>'' then
            set sql1=concat(sql1,' and c.cti_call_uuid=@cti_call_uuid ');
            end if;
            
            if @orig_caller_type is not null and @orig_caller_type<>'' then
            set sql1=concat(sql1,' and c.orig_caller_type=@orig_caller_type ');
            end if;
  
            if @cancel_time is not null and @cancel_time<>'' then
            set sql1=concat(sql1,' and c.cancel_time<=@cancel_time ');
            end if;
            
      if @org_id is not null and @org_id<>'' then
            set sql1=concat(sql1,' and c.org_id=@org_id ');
            end if;
            
      if @org_name is not null and @org_name<>'' then
            set sql1=concat(sql1,' and ts.name=@org_name ');
            end if;
            
            
               
            set sql1=concat(sql1,' ) c1
            left join v_report_cti_hangup_cause a
           on a.hangup_cause=c1.hangup_cause ');
  
  

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_cdrmisscall` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_cdrmisscall`(
                cti_call_direction varchar(40),
               
                orig_caller_number varchar(40),
                orig_callee_number varchar(40),
                
                hangup_cause varchar(40),
                hangup_disposition varchar(40),
                cti_call_uuid varchar(40),
                orig_caller_type varchar(40),
                starttime varchar(40),
                stoptime varchar(40),
               
              
                start_bh varchar(40),
                start_bm varchar(40),
                start_bs varchar(40),
                stop_bh varchar(40),
                stop_bm varchar(40),
                stop_bs varchar(40)
             
)
begin
  declare sql1 nvarchar(2500);
    set @cti_call_direction=cti_call_direction;
 
    set @orig_caller_number=orig_caller_number;
    set @orig_callee_number=orig_callee_number;
   
    set @hangup_cause=hangup_cause;
    set @hangup_disposition=hangup_disposition;
    set @cti_call_uuid=cti_call_uuid;
    set @orig_caller_type=orig_caller_type;
               
    set @starttime=starttime;
    set @stoptime=stoptime;
   
    set @start_bh=start_bh;
    set @start_bm =start_bm;
    set @start_bs =start_bs;
    set @stop_bh =stop_bh;
    set @stop_bm =stop_bm; 
    set @stop_bs =stop_bs;




        set sql1=concat('select a.zh_cn,c1.account_code,c1.agent_count,c1.agent_time, report_number_to_time(c1.agent_time) as agent_time1,c1.answered,'
            ,'c1.answered_time,c1.answered as answered1,c1.cti_call_direction1,'
            ,'c1.billsec,c1.billsec as billsec1,c1.callee_number,c1.caller_number,c1.cancel_time,'
            ,'c1.creat_time,c1.cti_call_direction,'
            ,'c1.cti_call_uuid,c1.cti_cc_direction,c1.duration,report_number_to_time(c1.duration) as duration1,'
            ,'c1.hangup_cause,c1.hangup_disposition,'
            ,'c1.id,c1.ivr_count,c1.ivr_time,report_number_to_time(c1.ivr_time) as ivr_time1,'
            ,'c1.orig_callee_number,c1.orig_caller_number,'
            ,'c1.orig_caller_type,c1.queue_count,c1.queue_time, report_number_to_time(c1.queue_time) as queue_time1,'
            ,'c1.waitsec, report_number_to_time(c1.waitsec) as waitsec1, c1.orig_caller_type1,'
            ,'c1.hangup_disposition1,'
            ,'c1.cti_cc_direction1'
,'  from (' 
            
            ,'select' 
            ,' c.account_code,c.agent_count,c.agent_time,c.agent_time1,c.answered,'
            ,'c.answered_time,c.answered1,'
            ,'c.billsec,c.billsec1,c.callee_number,c.caller_number,c.cancel_time,'
            ,'c.creat_time,c.cti_call_direction,'
            ,'c.cti_call_uuid,c.cti_cc_direction,c.duration,c.duration1,'
            ,'c.hangup_cause,c.hangup_disposition,'
            ,'c.id,c.ivr_count,c.ivr_time,c.ivr_time1,'
            ,'c.orig_callee_number,c.orig_caller_number,'
            ,'c.orig_caller_type,c.queue_count,c.queue_time,c.queue_time1,'
            ,'c.waitsec,c.waitsec1,'
            
            ,' w.cti_channel_type_chinese as orig_caller_type1,'
            ,' v.hangup_disposition_chinese as  hangup_disposition1,'
            ,' y.cti_call_direction_chinese as cti_call_direction1,'
            ,' x.cti_call_direction_chinese as cti_cc_direction1'     
            ,' from report_cdr  c  '
            ,' left join report_cti_call_direction y on c.cti_call_direction = y.cti_call_direction '
            ,' left join report_cti_call_direction x on c.cti_cc_direction = x.cti_call_direction '
            ,'  left join  report_channel_type w on c.orig_caller_type  = w.cti_channel_type  '
            ,'  left join  report_hangup_disposition v on c.hangup_disposition = v.hangup_disposition '
            ,'  where  c.cti_call_direction is not null and c.cti_call_direction<>''local'' '
            ,' and c.answered_time is null  ');
  
    
             if @cti_call_direction is not null and @cti_call_direction<>'' then
            set sql1=concat(sql1,' and c.cti_call_direction=@cti_call_direction ');
            end if;
        
            
            
            
            if @orig_caller_number is not null and @orig_caller_number<>'' then
            set sql1=concat(sql1,' and c.orig_caller_number=@orig_caller_number ');
            end if;
            
            if @orig_callee_number is not null and @orig_callee_number<>'' then
            set sql1=concat(sql1,' and c.orig_callee_number=@orig_callee_number ');
            end if;
            
           
            if @hangup_cause is not null and  @hangup_cause<>'' then
            set sql1=concat(sql1,' and c.hangup_cause=@hangup_cause ');
            end if;
            
            if @hangup_disposition is not null and @hangup_disposition<>'' then
            set sql1=concat(sql1,' and c.hangup_disposition=@hangup_disposition ');
            end if;
            
            if @cti_call_uuid is not null and @cti_call_uuid<>'' then
            set sql1=concat(sql1,' and c.cti_call_uuid=@cti_call_uuid ');
            end if;
            
            if @orig_caller_type is not null and @orig_caller_type<>'' then
            set sql1=concat(sql1,' and c.orig_caller_type=@orig_caller_type ');
            end if;
      
            
      if @starttime is not null and @starttime<>'' then
        set sql1=concat(sql1,' and date_format(c.creat_time,''%Y-%m-%d'')>=@starttime');
            end if; 
     
     
            if @stoptime is not null and @stoptime<>'' then
        set sql1=concat(sql1,' and date_format(c.creat_time,''%Y-%m-%d'')<=@stoptime');
            end if; 
            
         
      if @start_bh+@start_bm+@start_bs >0 then
        set sql1=concat(sql1,' and c.billsec>=ltrim(@start_bh*3600+@start_bm*60+@start_bs)');
            end if; 
          
            if @stop_bh+@stop_bm+@stop_bs >0 then
        set sql1=concat(sql1,' and c.billsec<=ltrim(@stop_bh*3600+@stop_bm*60+@stop_bs)');
            end if; 
            
       
        set sql1=concat(sql1,' ) c1
            left join v_report_cti_hangup_cause a
           on a.hangup_cause=c1.hangup_cause ');
       
    
    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_cdr_details` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_cdr_details`(
                cti_call_uuid varchar(40)
               
               
)
begin
  declare sql1 nvarchar(2500);
   
  
    set @cti_call_uuid =cti_call_uuid;
    
         set sql1=concat('select a.zh_cn,c1.account_code,c1.agent_count,c1.agent_time,c1.agent_time1,c1.answered,'
            ,'c1.answered_time,c1.answered1,'
            ,'c1.billsec,c1.billsec1,c1.callee_number,c1.caller_number,c1.cancel_time,'
            ,'c1.creat_time,c1.cti_call_direction,'
            ,'c1.cti_call_uuid,c1.cti_cc_direction,c1.duration,c1.duration1,'
            ,'c1.hangup_cause,c1.hangup_disposition,'
            ,'c1.id,c1.ivr_count,c1.ivr_time,c1.ivr_time1,'
            ,'c1.orig_callee_number,c1.orig_caller_number,'
            ,'c1.orig_caller_type,c1.queue_count,c1.queue_time,c1.queue_time1,'
            ,'c1.waitsec,c1.waitsec1, c1.orig_caller_type1,'
            ,'c1.hangup_disposition1,'
            ,'c1.cti_cc_direction1'
 ,' from (  select  c.account_code,c.agent_count,c.agent_time,report_number_to_time(c.agent_time) as agent_time1,c.answered,'
            ,'c.answered_time,report_number_to_time(c.answered) as answered1,'
            ,'c.billsec,c.billsec1,c.callee_number,c.caller_number,c.cancel_time,'
            ,'c.creat_time,c.cti_call_direction,'
            ,'c.cti_call_uuid,c.cti_cc_direction,c.duration,report_number_to_time(c.duration) as duration1,'
            ,'c.hangup_cause,c.hangup_disposition,'
            ,'c.id,c.ivr_count,c.ivr_time,report_number_to_time(c.ivr_time1) as ivr_time1,'
            ,'c.orig_callee_number,c.orig_caller_number,'
            ,'c.orig_caller_type,c.queue_count,c.queue_time,report_number_to_time(c.queue_time) as queue_time1,'
            ,'c.waitsec,report_number_to_time(c.waitsec) as waitsec1,'
            
            ,' w.cti_channel_type_chinese as orig_caller_type1,'
            ,' v.hangup_disposition_chinese as  hangup_disposition1,'
            ,' y.cti_call_direction_chinese as cti_call_direction1,'
            ,' x.cti_call_direction_chinese as cti_cc_direction1'            
            ,' from report_cdr  c' 
            ,' left join report_cti_call_direction y on c.cti_call_direction = y.cti_call_direction '
            ,' left join report_cti_call_direction x on c.cti_cc_direction = x.cti_call_direction '
            ,'  left join  report_channel_type w on c.orig_caller_type  = w.cti_channel_type  '
            ,'  left join  report_hangup_disposition v on c.hangup_disposition = v.hangup_disposition '
            ,' where c.cti_call_uuid=@cti_call_uuid');
             
           set sql1=concat(sql1,' ) c1 left join v_report_cti_hangup_cause a '
          ,' on a.hangup_cause=c1.hangup_cause ');

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_cdr_details2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_cdr_details2`(
                cti_call_uuid varchar(40)
               
               
)
begin
  declare sql1 nvarchar(20000);
   
    set @cti_call_uuid=cti_call_uuid;
    set sql1=concat(' select  a.start_time as id,servicetype,serviceid,name, servicesubtype,
 bb.cti_call_direction_chinese as  direction
,caller_number,callee_number,zhenling,start_time,cancel_time,cancel_disposition,
yy.cancel_cause_chinese as cancel_cause
,bridge_agent_time,agent_channel_uuid,
case servicetype
when ''ivr应答'' then ''''
when ''排队机应答'' then ''''
when ''语音信箱应答'' then ''''
when ''传真应答'' then ''''
else report_number_to_time(z_duration) end as z_duration1,
case servicetype
when ''排队机应答'' then ''''
when ''传真应答'' then ''''
when ''传真应答'' then ''''
else  report_number_to_time(t_duration) end as t_duration1,
case servicetype
when ''ivr应答'' then ''''
when ''排队机应答'' then ''''
when ''话务应答'' then ''''
when ''语音信箱应答'' then ''''
when ''传真应答'' then ''''
else  report_number_to_time(hs_duration) end as hs_duration1,
case servicetype
when ''传真应答'' then ''''
else  report_number_to_time(s_duration)
end as s_duration1
,z_duration,t_duration,hs_duration,s_duration,org_id,agent_id
,agent_name,agent_ext,agent_session_id,channel_id,
zz.cti_channel_type_chinese as channel_type
 from 
(
select ''排队机应答'' as servicetype,member_uuid as serviceid,queue as name,'''' as servicesubtype 
      ,direction,caller_number,callee_number,'''' as zhenling
      ,date_format(start_time,''%y-%m-%d %h:%m:%s'') as start_time
      ,date_format(cancel_time,''%y-%m-%d %h:%m:%s'') as cancel_time
      ,case cancel_cause
       when ''success'' then ''排队机''
       when ''terminated'' then ''排队机''
       when ''break_out'' then ''主叫挂机''
       when ''no_agent_timeout'' then ''排队机''   
       end cancel_disposition 
       ,cancel_cause,date_format(bridge_agent_time,''%y-%m-%d %h:%m:%s'')  as bridge_agent_time,agent_channel_uuid       
       ,'''' z_duration,'''' t_duration,'''' hs_duration, timestampdiff(second,start_time,cancel_time)  as s_duration,org_id,agent_id,agent_name
       ,'''' as agent_ext,agent_session_id,channel_uuid as channel_id,channel_type
  from report_queue where cti_call_uuid=@cti_call_uuid
  union
  select ''语音信箱应答'','''','''','''',cti_call_direction,caller_number,callee_number,'''', 
      date_format(start_time,''%y-%m-%d %h:%m:%s'') as start_time
    ,date_format(stop_time,''%y-%m-%d %h:%m:%s'')   
    ,''主叫挂机'',''正常'','''','''','''',timestampdiff(second,start_time,stop_time) 
    ,'''',timestampdiff(second,start_time,stop_time),'''','''','''','''','''',channel_uuid,''''           
       from  v_report_cti_record_files c      
       where cti_record_type=''vm'' and cti_call_uuid=@cti_call_uuid    
union   
     select ''ivr应答'','''',application_data,'''',call_direction1,caller_number,callee_number,''''
      ,date_format(start_time,''%y-%m-%d %h:%m:%s'')  
      ,date_format(complete_time,''%y-%m-%d %h:%m:%s'')      
      ,''主叫挂机'',zh_cn,'''','''','''',timestampdiff(second,ivr.start_time,ivr.complete_time)        
      ,'''',timestampdiff(second,ivr.start_time,ivr.complete_time) ,'''','''','''','''','''','''',a.cti_channel_type1 
      from v_report_cti_channel_execute as ivr,v_report_channel as a  
    where ivr.application=''ivr'' and ivr.cti_call_uuid=a.cti_call_uuid and ivr.cti_call_uuid=@cti_call_uuid
  union
select ''座席应答'','''',agent_name,services_type,cti_cc_direction,caller_number,callee_number
      ,date_format(start_time,''%y-%m-%d %h:%m:%s'') as start_time
      , date_format(toagent_time,''%y-%m-%d %h:%m:%s'') as toagent_time
      , date_format(cancel_time,''%y-%m-%d %h:%m:%s'')
      , d.hangup_disposition_chinese as cancel
      ,cancel_cause, date_format(post_call_time,''%y-%m-%d %h:%m:%s''),'''',wait,timestampdiff(second,toagent_time,cancel_time) ,post_call,services
      ,org_id,agent_id,agent_name,agent_ext,agent_session_id,channel_uuid,''座席''     
  from report_agent_services c  left join report_hangup_disposition d on c.cancel=d.hangup_disposition
  where cti_call_uuid=@cti_call_uuid
  union
select ''话务应答'','''','''','''',call_direction,c.caller_number,c.callee_number
      ,date_format(created_time,''%y-%m-%d %h:%m:%s'')  
      ,date_format(bridged_time,''%y-%m-%d %h:%m:%s'')
      ,date_format(hangup_time,''%y-%m-%d %h:%m:%s'')
     ,c.hangup_disposition_chinese as hangup_disposition  
      ,c.hangup_cause,'''','''',timestampdiff(second,created_time,bridged_time),timestampdiff(second,bridged_time,hangup_time),''''
      ,timestampdiff(second,bridged_time,hangup_time),'''','''','''','''','''',c.channel_uuid,c.cti_channel_type       
  from (select a.channel_uuid,a.id,a.cti_channel_type,a.bridged_time,a.call_direction,a.caller_number
      ,a.callee_number,created_time,a.waitsec,hangup_time,a.hangup_cause,
      d.hangup_disposition_chinese,a.billsec
      ,a.answered_time,a.duration,a.progresssec,a.answersec,a.cti_call_uuid 
  from v_report_cti_channel a
  left join             
  report_cdr b 
  on a.cti_call_uuid=b.cti_call_uuid and b.channel_uuid is null 
   left join report_hangup_disposition d 
   on a.hangup_disposition=d.hangup_disposition
  where a.cti_call_uuid=@cti_call_uuid) as c left join report_agent_services as d on c.cti_call_uuid=d.cti_call_uuid and d.channel_uuid is null
  union 
  select ''传真应答'','''','''','''',fax_direction,caller_number,callee_number,'''', date_format(event_timestamp,''%y-%m-%d %h:%m:%s'') ,'''',
  ''主叫挂机'',fax_result_text,'''','''','''','''','''','''','''',agent_id,'''','''',agent_session_id,channel_uuid,''''         
  from v_report_cti_fax_files a  where a.cti_call_uuid=@cti_call_uuid
  ) as a 
   left join report_cti_call_direction bb on   direction=bb.cti_call_direction
   left join report_cancel_cause yy on a.cancel_cause=yy.cancel_cause_chinese
   left join report_channel_type zz on channel_type=zz.cti_channel_type  
   order by a.start_time 
   ');

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_REPORT_CDR_EXT` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_REPORT_CDR_EXT`(
                CTI_CALL_DIRECTION varchar(40),
              
                ORIG_CALLER_NUMBER varchar(40),
                ORIG_CALLEE_NUMBER varchar(40),
                CALLER_NUMBER varchar(40),
                CALLEE_NUMBER varchar(40),
                ACCOUNT_CODE varchar(40),
                HANGUP_CAUSE varchar(40),
                HANGUP_DISPOSITION varchar(40),
                CTI_CALL_UUID varchar(40),
                ORIG_CALLER_TYPE varchar(40),
                STARTTIME varchar(40),
                STOPTIME varchar(40),
                CANCEL_TIME varchar(40),
                START_DH varchar(40),
                START_DM varchar(1),
                START_DS varchar(40),
                STOP_DH varchar(40),
                STOP_DM varchar(40),
                STOP_DS varchar(40),
                START_BH varchar(40),
                START_BM varchar(40),
                START_BS varchar(40),
                STOP_BH varchar(40),
                STOP_BM varchar(40),
                STOP_BS varchar(40)
             
)
BEGIN
  DECLARE sql1 nvarchar(4000);
    set @CTI_CALL_DIRECTION=CTI_CALL_DIRECTION;
   
    set @ORIG_CALLER_NUMBER=ORIG_CALLER_NUMBER;
    set @ORIG_CALLEE_NUMBER=ORIG_CALLEE_NUMBER;
    set @CALLER_NUMBER=CALLER_NUMBER;
    set @CALLEE_NUMBER=CALLEE_NUMBER;
    set @ACCOUNT_CODE=ACCOUNT_CODE;
    set @HANGUP_CAUSE=HANGUP_CAUSE;
    set @HANGUP_DISPOSITION=HANGUP_DISPOSITION;
    set @CTI_CALL_UUID=CTI_CALL_UUID;
    set @ORIG_CALLER_TYPE=ORIG_CALLER_TYPE;
               
    set @STARTTIME=STARTTIME;
    set @STOPTIME=STOPTIME;
    set @CANCEL_TIME =CANCEL_TIME;
    set @START_DH =START_DH;
    set @START_DM =START_DM;
    set @START_DS =START_DS;
    set @STOP_DH =STOP_DH;
    set @STOP_DM =STOP_DM;
    set @STOP_DS =STOP_DS;
    set @START_BH=START_BH;
    set @START_BM =START_BM;
    set @START_BS =START_BS;
    set @STOP_BH =STOP_BH;
    set @STOP_BM =STOP_BM; 
    set @STOP_BS =STOP_BS;

         set sql1=concat('select A.ZH_CN,C1.ACCOUNT_CODE,C1.AGENT_COUNT,C1.AGENT_TIME,C1.AGENT_TIME1,C1.ANSWERED,'
            ,'C1.ANSWERED_TIME,C1.ANSWERED1,'
            ,'C1.BILLSEC,C1.BILLSEC1,C1.CALLEE_NUMBER,C1.CALLER_NUMBER,C1.CANCEL_TIME,'
            ,'C1.CREAT_TIME,C1.CTI_CALL_DIRECTION,'
            ,'C1.CTI_CALL_UUID,C1.CTI_CC_DIRECTION,C1.DURATION,C1.DURATION1,'
            ,'C1.HANGUP_CAUSE,C1.HANGUP_DISPOSITION,'
            ,'C1.ID,C1.IVR_COUNT,C1.IVR_TIME,C1.IVR_TIME1,'
            ,'C1.ORIG_CALLEE_NUMBER,C1.ORIG_CALLER_NUMBER,'
            ,'C1.ORIG_CALLER_TYPE,C1.QUEUE_COUNT,C1.QUEUE_TIME,C1.QUEUE_TIME1,'
            ,'C1.WAITSEC,C1.WAITSEC1, c1.ORIG_CALLER_TYPE1,'
            ,'c1.HANGUP_DISPOSITION1,'
            ,'c1.CTI_CC_DIRECTION1,c1.CTI_CALL_DIRECTION1'
            ,', C1.FIRST_AGENT_TIME,C1.ORG_ID,C1.AGENT_ID,C1.AGENT_NAME,C1.AGENT_SESSION_ID,C1.AGENT_CHANNEL_UUID,C1.WORK_ID '
 ,' from (  SELECT  C.ACCOUNT_CODE,C.AGENT_COUNT,C.AGENT_TIME,sec_to_time(C.AGENT_TIME) as AGENT_TIME1,C.ANSWERED,'
            ,'C.ANSWERED_TIME,sec_to_time(C.ANSWERED) as ANSWERED1,'
            ,'C.BILLSEC,C.BILLSEC1,C.CALLEE_NUMBER,C.CALLER_NUMBER,C.CANCEL_TIME,'
            ,'C.CREAT_TIME,C.CTI_CALL_DIRECTION,'
            ,'C.CTI_CALL_UUID,C.CTI_CC_DIRECTION,C.DURATION,sec_to_time(C.DURATION) as DURATION1,'
            ,'C.HANGUP_CAUSE,C.HANGUP_DISPOSITION,'
            ,'C.ID,C.IVR_COUNT,C.IVR_TIME,sec_to_time(C.IVR_TIME1) as IVR_TIME1,'
            ,'C.ORIG_CALLEE_NUMBER,C.ORIG_CALLER_NUMBER,'
            ,'C.ORIG_CALLER_TYPE,C.QUEUE_COUNT,C.QUEUE_TIME,sec_to_time(C.QUEUE_TIME) as QUEUE_TIME1,'
            ,'C.WAITSEC,sec_to_time(C.WAITSEC) as WAITSEC1,'
            ,'C.FIRST_AGENT_TIME,C.ORG_ID,C.AGENT_ID,C.AGENT_NAME,C.AGENT_SESSION_ID,C.AGENT_CHANNEL_UUID,C.WORK_ID, '
            ,' w.cti_channel_type_chinese as ORIG_CALLER_TYPE1,'
            ,' v.hangup_disposition_chinese as  HANGUP_DISPOSITION1,'
            ,' Y.CTI_CALL_DIRECTION_CHINESE as CTI_CALL_DIRECTION1,'
            ,' x.cti_call_direction_chinese as CTI_CC_DIRECTION1'            
            ,' FROM REPORT_CDR  C' 
            ,' left join REPORT_CTI_CALL_DIRECTION Y ON C.CTI_CALL_DIRECTION = y.cti_call_direction '
            ,' left join REPORT_CTI_CALL_DIRECTION x ON C.CTI_CC_DIRECTION = X.CTI_CALL_DIRECTION '
            ,'  LEFT JOIN  REPORT_CHANNEL_TYPE W ON C.ORIG_CALLER_TYPE  = W.CTI_CHANNEL_TYPE  '
            ,'  LEFT JOIN  REPORT_HANGUP_DISPOSITION V ON C.HANGUP_DISPOSITION = V.HANGUP_DISPOSITION '
            ,' WHERE  C.CTI_CC_DIRECTION IS NULL ');
      
        if @START_DH+@START_DM+@START_DS >0 then
        set sql1=CONCAT(sql1,' and C.DURATION>=LTRIM(@START_DH*3600+@START_DM*60+@START_DS)');
            end if; 
          
            if @STOP_DH+@STOP_DM+@STOP_DS >0 then
        set sql1=CONCAT(sql1,' and C.DURATION<=LTRIM(@STOP_DH*3600+@STOP_DM*60+@STOP_DS)');
            end if; 
            
            
      if @START_BH+@START_BM+@START_BS >0 then
        set sql1=CONCAT(sql1,' and C.ANSWERED>=LTRIM(@START_BH*3600+@START_BM*60+@START_BS)');
            end if; 
          
            if @STOP_BH+@STOP_BM+@STOP_BS >0 then
        set sql1=CONCAT(sql1,' and C.ANSWERED<=LTRIM(@STOP_BH*3600+@STOP_BM*60+@STOP_BS)');
            end if; 
            
            
                  
            if @STARTTIME is not null and @STARTTIME<>'' then
        set sql1=CONCAT(sql1,' and C.CREAT_TIME>=@STARTTIME');
            end if; 
     
     
            if @STOPTIME is not null and @STOPTIME<>'' then
        set sql1=CONCAT(sql1,' and C.CREAT_TIME<=@STOPTIME');
            end if; 
            
      IF @CTI_CALL_DIRECTION IS NOT NULL AND @CTI_CALL_DIRECTION<>'' then
            set sql1=concat(sql1,' AND C.CTI_CALL_DIRECTION=@CTI_CALL_DIRECTION ');
            end if;
            
          
            
         
            
            IF @ORIG_CALLER_NUMBER IS NOT NULL AND @ORIG_CALLER_NUMBER<>'' then
            SET sql1=concat(sql1,' AND C.ORIG_CALLER_NUMBER=@ORIG_CALLER_NUMBER ');
            end if;
            
            IF @ORIG_CALLEE_NUMBER IS NOT NULL AND @ORIG_CALLEE_NUMBER<>'' then
            SET sql1=concat(sql1,' AND C.ORIG_CALLEE_NUMBER=@ORIG_CALLEE_NUMBER ');
      end if;
            
            IF @CALLER_NUMBER IS NOT NULL AND @CALLER_NUMBER<>'' then
            SET sql1=concat(sql1,' AND C.CALLER_NUMBER=@CALLER_NUMBER ');
            end if;
            
            IF @CALLEE_NUMBER IS NOT NULL AND @CALLEE_NUMBER<>'' then
            SET sql1=concat(sql1,' AND C.CALLEE_NUMBER=@CALLEE_NUMBER ');
            end if;
            
            IF @ACCOUNT_CODE IS NOT NULL AND @ACCOUNT_CODE<>'' then
            SET sql1=concat(sql1,' AND C.ACCOUNT_CODE=@ACCOUNT_CODE ');
            end if;
            
            IF @HANGUP_CAUSE IS NOT NULL AND  @HANGUP_CAUSE<>'' then
            SET sql1=concat(sql1,' AND C.HANGUP_CAUSE=@HANGUP_CAUSE ');
            end if;
            
            IF @HANGUP_DISPOSITION IS NOT NULL AND @HANGUP_DISPOSITION<>'' then
            SET sql1=concat(sql1,' AND C.HANGUP_DISPOSITION=@HANGUP_DISPOSITION ');
            end if;
            
            IF @CTI_CALL_UUID IS NOT NULL AND @CTI_CALL_UUID<>'' then
            SET sql1=concat(sql1,' AND C.CTI_CALL_UUID=@CTI_CALL_UUID ');
            end if;
            
            IF @ORIG_CALLER_TYPE IS NOT NULL AND @ORIG_CALLER_TYPE<>'' then
            SET sql1=concat(sql1,' AND C.ORIG_CALLER_TYPE=@ORIG_CALLER_TYPE ');
            end if;
  
            IF @CANCEL_TIME IS NOT NULL AND @CANCEL_TIME<>'' then
            SET sql1=concat(sql1,' AND C.CANCEL_TIME<=@CANCEL_TIME ');
            end if;
            
               
            SET sql1=concat(sql1,' ) C1
            left join CTI_HANGUP_CAUSE A
           ON A.HANGUP_CAUSE=C1.HANGUP_CAUSE ');
  
    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_channel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_channel`(
                orig_caller_number varchar(40),
                orig_callee_number varchar(40),
                caller_number varchar(40),
                callee_number varchar(40),
                account_code varchar(40),
                cti_channel_type varchar(40),
                call_direction varchar(40),
                cti_call_direction varchar(40),
                cti_cc_direction varchar(40),
                starttime varchar(40),
                stoptime varchar(40),
               
                hangup_cause varchar(40),
                hangup_disposition varchar(40),
                cti_call_uuid varchar(40),
                channel_uuid varchar(40),
                is_originator varchar(1),
                starth varchar(40),
                startm varchar(40),
                starts varchar(40),
                stoph varchar(40),
                stopm varchar(40),
                stops varchar(40),
                jstarth varchar(40),
                jstartm varchar(40),
                jstarts varchar(40),
                jstoph varchar(40),
                jstopm varchar(40),
                jstops varchar(40),
                context varchar(40)
)
begin
  declare sql1 nvarchar(3500);
    set @orig_caller_number=orig_caller_number;
    set @orig_callee_number=orig_callee_number;
    set @caller_number=caller_number;
    set @callee_number=callee_number;
    set @account_code=account_code;
    set @cti_channel_type=cti_channel_type;
    set @call_direction=call_direction;
    set @cti_call_direction=cti_call_direction;
    set @cti_cc_direction=cti_cc_direction;
    set @starttime=starttime;
    set @stoptime=stoptime;
               
    set @hangup_cause=hangup_cause;
    set @hangup_disposition=hangup_disposition;
    set @cti_call_uuid =cti_call_uuid;
    set @channel_uuid =channel_uuid;
    set @is_originator =is_originator;
    set @starth =starth;
    set @startm =startm;
    set @starts =starts;
    set @stoph =stoph;
    set @stopm=stopm;
    set @stops =stops;
    set @jstarth =jstarth;
    set @jstartm =jstartm;
    set @jstarts =jstarts;
    set @jstoph =jstoph;
    set @jstopm =jstopm;
    set @jstops =jstops;
  set @context =context;
    
    set sql1=concat('select distinct c.account_code,c.answered_time,c.billsec,'
     ,'report_number_to_time(c.billsec)as billsec1,c.call_direction,c.call_direction1,'
       ,'c.callee_number,c.caller_number,c.channel_uuid,c.created_time,c.cti_call_direction,c.cti_cc_direction,'
       ,'c.cti_cc_direction1,c.cti_call_direction1,c.cti_channel_type,c.cti_channel_type1,c.duration,'
       ,'c.hangup_cause,c.hangup_disposition,c.hangup_time,c.is_originator,c.zh_cn,c.hangup_disposition1,'
       ,'c.is_originator1,c.orig_callee_number,c.orig_caller_number,c.cti_call_uuid,c.context1,c.context'
     ,' from v_report_channel as c'
       ,' where 1=1');

  if (@orig_caller_number is not null and @orig_caller_number<>'') then
    set sql1=concat(sql1,' and c.orig_caller_number=@orig_caller_number');
  end if;
    
    if @orig_callee_number is not null and @orig_callee_number<>'' then
     set sql1=concat(sql1,' and c.orig_callee_number=@orig_callee_number');
    end if; 
     if @caller_number is not null and @caller_number<>'' then
    set sql1=concat(sql1,' and c.caller_number=@caller_number');
     end if; 
     if @callee_number is not null and @callee_number<>'' then
    set sql1=concat(sql1,' and c.callee_number=@callee_number');
     end if; 
     
   if @account_code is not null and @account_code<>'' then
    set sql1=concat(sql1,' and c.account_code=@account_code');
     end if; 
     if @cti_channel_type is not null and @cti_channel_type<>'' then
    set sql1=concat(sql1,' and c.cti_channel_type=@cti_channel_type');
     end if; 
     if @call_direction is not null and @call_direction<>'' then
    set sql1=concat(sql1,' and c.call_direction=@call_direction');
     end if; 
   if @cti_call_direction is not null and @cti_call_direction<>'' then
    set sql1=concat(sql1,' and c.cti_call_direction=@cti_call_direction');
     end if; 
     
     if @cti_cc_direction is not null and @cti_cc_direction<>'' then
    set sql1=concat(sql1,' and c.cti_cc_direction=@cti_cc_direction');
     end if; 
     
     if @starttime is not null and @starttime<>'' then
    set sql1=concat(sql1,' and date_format(c.created_time,''%Y-%m-%d'')>=@starttime');
     end if; 
     
     
     if @stoptime is not null and @stoptime<>'' then
    set sql1=concat(sql1,' and date_format(c.created_time,''%Y-%m-%d'')<=@stoptime');
     end if; 
     if @hangup_cause is not null and @hangup_cause<>'' then
    set sql1=concat(sql1,' and c.hangup_cause=@hangup_cause');
     end if; 
     
     if @hangup_disposition is not null and @hangup_disposition<>'' then
    set sql1=concat(sql1,' and c.hangup_disposition1=@hangup_disposition');
     end if; 
     
  if @context is not null and @context<>'' then
    set sql1=concat(sql1,' and c.context=@context');
     end if; 
     
     if @channel_uuid is not null and @channel_uuid<>'' then
      set sql1=concat(sql1,' and c.channel_uuid=@channel_uuid'); 
     end if; 
     
     if @cti_call_uuid is not null and @cti_call_uuid<>'' then
    set sql1=concat(sql1,' and c.cti_call_uuid=@cti_call_uuid'); 
     end if; 
     

     if @is_originator <>''  then
    set sql1=concat(sql1,' and c.is_originator=@is_originator');
     end if; 
 
     if @starth+@startm+@starts >0 then
    set sql1=concat(sql1,' and c.duration>=ltrim(@starth*3600+@startm*60+@starts)');
     end if; 
     if @stoph+@stopm+@stops >0 then
    set sql1=concat(sql1,' and c.duration<=ltrim(@stoph*3600+@stopm*60+@stops)');
     end if; 
     if @jstarth+@jstartm+@jstarts >0 then
    set sql1=concat(sql1,' and c.billsec>=ltrim(@jstarth*3600+@jstartm*60+@jstarts) ');
     end if; 
     if @jstoph+@jstopm+@jstops >0 then
    set sql1=concat(sql1,' and c.billsec<=ltrim(@jstoph*3600+@jstopm*60+@jstops)' );
     end if; 
     

     set sql1=concat(sql1,' order by c.created_time desc');
    
    set @exesql =sql1; 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_REPORT_EVERYORGCALL` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_REPORT_EVERYORGCALL`(
                ORG_ID varchar(40),
                STARTTIME varchar(40),
                STOPTIME varchar(40)
          
             
)
BEGIN
  DECLARE sql1 nvarchar(4000);
    set @ORG_ID=ORG_ID;             
    set @STARTTIME=STARTTIME;
    set @STOPTIME=STOPTIME;
   

     set sql1=concat('select sum(callincount) as 呼入, sum(turnincount) as 呼通, sum(calloutcount) as 呼出,org_id1 '
      ,' from'
      ,' ('
      ,' select a.callcount as callincount,a.turncount as turnincount,a.tjdate,'
      ,' a.org_id as org_id1 from report_calleverdaycollect a'
      ,' where a.CTI_CALL_DIRECTION=''inbound'''
      ,' ) aa'
      ,' left join'
      ,' ('
      ,' select b.callcount as calloutcount,b.org_id from report_calleverdaycollect b'
      ,' where b.CTI_CALL_DIRECTION=''outbound'''
      ,' ) bb on aa.org_id1=bb.org_id'
      ,' WHERE 1=1 ');
             
            if @STARTTIME is not null and @STARTTIME<>'' then
        set sql1=CONCAT(sql1,' and aa.tjdate>=@STARTTIME');
            end if; 
     
            if @STOPTIME is not null and @STOPTIME<>'' then
        set sql1=CONCAT(sql1,' and aa.tjdate<@STOPTIME');
            end if; 
            
      IF @ORG_ID IS NOT NULL AND @ORG_ID<>'' then
            set sql1=concat(sql1,' AND aa.org_id1=@ORG_ID');
            end if;
            
    set sql1=concat(sql1,' group by org_id1 '); 
    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_REPORT_EXT_MISSCALL` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_REPORT_EXT_MISSCALL`(
                CTI_CALL_DIRECTION varchar(40),
              
                ORIG_CALLER_NUMBER varchar(40),
                ORIG_CALLEE_NUMBER varchar(40),
                CALLER_NUMBER varchar(40),
                CALLEE_NUMBER varchar(40),
                ACCOUNT_CODE varchar(40),
                HANGUP_CAUSE varchar(40),
                HANGUP_DISPOSITION varchar(40),
                CTI_CALL_UUID varchar(40),
                ORIG_CALLER_TYPE varchar(40),
                STARTTIME varchar(40),
                STOPTIME varchar(40),
                CANCEL_TIME varchar(40),
                START_TIME varchar(40),
                START_DH varchar(40),
                START_DM varchar(1),
                START_DS varchar(40),
                STOP_DH varchar(40),
                STOP_DM varchar(40),
                STOP_DS varchar(40),
                START_BH varchar(40),
                START_BM varchar(40),
                START_BS varchar(40),
                STOP_BH varchar(40),
                STOP_BM varchar(40),
                STOP_BS varchar(40)
             
)
BEGIN
  DECLARE sql1 nvarchar(2500);
    set @CTI_CALL_DIRECTION=CTI_CALL_DIRECTION;
   
    set @ORIG_CALLER_NUMBER=ORIG_CALLER_NUMBER;
    set @ORIG_CALLEE_NUMBER=ORIG_CALLEE_NUMBER;
    set @CALLER_NUMBER=CALLER_NUMBER;
    set @CALLEE_NUMBER=CALLEE_NUMBER;
    set @ACCOUNT_CODE=ACCOUNT_CODE;
    set @HANGUP_CAUSE=HANGUP_CAUSE;
    set @HANGUP_DISPOSITION=HANGUP_DISPOSITION;
    set @CTI_CALL_UUID=CTI_CALL_UUID;
    set @ORIG_CALLER_TYPE=ORIG_CALLER_TYPE;
               
    set @STARTTIME=STARTTIME;
    set @STOPTIME=STOPTIME;
    set @CANCEL_TIME =CANCEL_TIME;
  set @START_TIME =START_TIME;
    set @START_DH =START_DH;
    set @START_DM =START_DM;
    set @START_DS =START_DS;
    set @STOP_DH =STOP_DH;
    set @STOP_DM =STOP_DM;
    set @STOP_DS =STOP_DS;
    set @START_BH=START_BH;
    set @START_BM =START_BM;
    set @START_BS =START_BS;
    set @STOP_BH =STOP_BH;
    set @STOP_BM =STOP_BM; 
    set @STOP_BS =STOP_BS;

         set sql1=concat('select A.ZH_CN,C1.ACCOUNT_CODE,C1.AGENT_COUNT,C1.AGENT_TIME,C1.AGENT_TIME1,C1.ANSWERED,'
            ,'C1.ANSWERED_TIME,C1.ANSWERED1,sec_to_time( TIMESTAMPDIFF(Second,C1.CREAT_TIME,C1.CANCEL_TIME)) AS START_TIME , '
            ,'C1.BILLSEC,C1.BILLSEC1,C1.CALLEE_NUMBER,C1.CALLER_NUMBER,C1.CANCEL_TIME,'
            ,'C1.CREAT_TIME,C1.CTI_CALL_DIRECTION,'
            ,'C1.CTI_CALL_UUID,C1.CTI_CC_DIRECTION,C1.DURATION,C1.DURATION1,'
            ,'C1.HANGUP_CAUSE,C1.HANGUP_DISPOSITION,'
            ,'C1.ID,C1.IVR_COUNT,C1.IVR_TIME,C1.IVR_TIME1,'
            ,'C1.ORIG_CALLEE_NUMBER,C1.ORIG_CALLER_NUMBER,'
            ,'C1.ORIG_CALLER_TYPE,C1.QUEUE_COUNT,C1.QUEUE_TIME,C1.QUEUE_TIME1,'
            ,'C1.WAITSEC,C1.WAITSEC1, c1.ORIG_CALLER_TYPE1,'
            ,'c1.HANGUP_DISPOSITION1,'
            ,'c1.CTI_CC_DIRECTION1 , c1.CTI_CALL_DIRECTION1'
 ,' from (  SELECT  C.ACCOUNT_CODE,C.AGENT_COUNT,C.AGENT_TIME,sec_to_time(C.AGENT_TIME) as AGENT_TIME1,C.ANSWERED,'
            ,'C.ANSWERED_TIME,sec_to_time(C.ANSWERED) as ANSWERED1,'
            ,'C.BILLSEC,C.BILLSEC1,C.CALLEE_NUMBER,C.CALLER_NUMBER,C.CANCEL_TIME,'
            ,'C.CREAT_TIME,C.CTI_CALL_DIRECTION,'
            ,'C.CTI_CALL_UUID,C.CTI_CC_DIRECTION,C.DURATION,sec_to_time(C.DURATION) as DURATION1,'
            ,'C.HANGUP_CAUSE,C.HANGUP_DISPOSITION,'
            ,'C.ID,C.IVR_COUNT,C.IVR_TIME,sec_to_time(C.IVR_TIME1) as IVR_TIME1,'
            ,'C.ORIG_CALLEE_NUMBER,C.ORIG_CALLER_NUMBER,'
            ,'C.ORIG_CALLER_TYPE,C.QUEUE_COUNT,C.QUEUE_TIME,sec_to_time(C.QUEUE_TIME) as QUEUE_TIME1,'
            ,'C.WAITSEC,sec_to_time(C.WAITSEC) as WAITSEC1,'
            
            ,' w.cti_channel_type_chinese as ORIG_CALLER_TYPE1,'
            ,' v.hangup_disposition_chinese as  HANGUP_DISPOSITION1,'
            ,' Y.CTI_CALL_DIRECTION_CHINESE as CTI_CALL_DIRECTION1,'
            ,' x.cti_call_direction_chinese as CTI_CC_DIRECTION1'            
            ,' FROM REPORT_CDR  C' 
            ,' left join REPORT_CTI_CALL_DIRECTION Y ON C.CTI_CALL_DIRECTION = y.cti_call_direction '
            ,' left join REPORT_CTI_CALL_DIRECTION x ON C.CTI_CC_DIRECTION = X.CTI_CALL_DIRECTION '
            ,'  LEFT JOIN  REPORT_CHANNEL_TYPE W ON C.ORIG_CALLER_TYPE  = W.CTI_CHANNEL_TYPE  '
            ,'  LEFT JOIN  REPORT_HANGUP_DISPOSITION V ON C.HANGUP_DISPOSITION = V.HANGUP_DISPOSITION '
            ,'  WHERE  C.CTI_CC_DIRECTION IS NULL  AND C.ANSWERED_TIME IS NULL ');
      
            if @START_DH+@START_DM+@START_DS >0 then
        set sql1=CONCAT(sql1,' and C.DURATION>=LTRIM(@START_DH*3600+@START_DM*60+@START_DS)');
            end if; 
          
            if @STOP_DH+@STOP_DM+@STOP_DS >0 then
        set sql1=CONCAT(sql1,' and C.DURATION<=LTRIM(@STOP_DH*3600+@STOP_DM*60+@STOP_DS)');
            end if; 
            
            if @STARTTIME is not null and @STARTTIME<>'' then
        set sql1=CONCAT(sql1,' and C.CREAT_TIME>=@STARTTIME');
            end if; 
     
     
            if @STOPTIME is not null and @STOPTIME<>'' then
        set sql1=CONCAT(sql1,' and C.CREAT_TIME<=@STOPTIME');
            end if; 
            
      IF @CTI_CALL_DIRECTION IS NOT NULL AND @CTI_CALL_DIRECTION<>'' then
            set sql1=concat(sql1,' AND C.CTI_CALL_DIRECTION=@CTI_CALL_DIRECTION ');
            end if;
            
            IF @ORIG_CALLER_NUMBER IS NOT NULL AND @ORIG_CALLER_NUMBER<>'' then
            SET sql1=concat(sql1,' AND C.ORIG_CALLER_NUMBER=@ORIG_CALLER_NUMBER ');
            end if;
            
            IF @ORIG_CALLEE_NUMBER IS NOT NULL AND @ORIG_CALLEE_NUMBER<>'' then
            SET sql1=concat(sql1,' AND C.ORIG_CALLEE_NUMBER=@ORIG_CALLEE_NUMBER ');
      end if;
            
            IF @CALLER_NUMBER IS NOT NULL AND @CALLER_NUMBER<>'' then
            SET sql1=concat(sql1,' AND C.CALLER_NUMBER=@CALLER_NUMBER ');
            end if;
            
            IF @CALLEE_NUMBER IS NOT NULL AND @CALLEE_NUMBER<>'' then
            SET sql1=concat(sql1,' AND C.CALLEE_NUMBER=@CALLEE_NUMBER ');
            end if;
            
            IF @ACCOUNT_CODE IS NOT NULL AND @ACCOUNT_CODE<>'' then
            SET sql1=concat(sql1,' AND C.ACCOUNT_CODE=@ACCOUNT_CODE ');
            end if;
            
            IF @HANGUP_CAUSE IS NOT NULL AND  @HANGUP_CAUSE<>'' then
            SET sql1=concat(sql1,' AND C.HANGUP_CAUSE=@HANGUP_CAUSE ');
            end if;
            
            IF @HANGUP_DISPOSITION IS NOT NULL AND @HANGUP_DISPOSITION<>'' then
            SET sql1=concat(sql1,' AND C.HANGUP_DISPOSITION=@HANGUP_DISPOSITION ');
            end if;
            
            IF @CTI_CALL_UUID IS NOT NULL AND @CTI_CALL_UUID<>'' then
            SET sql1=concat(sql1,' AND C.CTI_CALL_UUID=@CTI_CALL_UUID ');
            end if;
            
            IF @ORIG_CALLER_TYPE IS NOT NULL AND @ORIG_CALLER_TYPE<>'' then
            SET sql1=concat(sql1,' AND C.ORIG_CALLER_TYPE=@ORIG_CALLER_TYPE ');
            end if;
  
            IF @CANCEL_TIME IS NOT NULL AND @CANCEL_TIME<>'' then
            SET sql1=concat(sql1,' AND C.CANCEL_TIME<=@CANCEL_TIME ');
            end if;
     
SET sql1=concat(sql1,' ) C1
            left join CTI_HANGUP_CAUSE A');
            
SET sql1=concat(sql1,' ON A.HANGUP_CAUSE=C1.HANGUP_CAUSE ' );
SET sql1=concat(sql1,' WHERE 1=1'  ); 
  
      if @START_BH+@START_BM+@START_BS >0 then
        set sql1=CONCAT(sql1,' and TIMESTAMPDIFF(Second,C1.CREAT_TIME,C1.CANCEL_TIME)>=LTRIM(@START_BH*3600+@START_BM*60+@START_BS)');
            end if; 
          
            if @STOP_BH+@STOP_BM+@STOP_BS >0 then
        set sql1=CONCAT(sql1,' and TIMESTAMPDIFF(Second,C1.CREAT_TIME,C1.CANCEL_TIME)<=LTRIM(@STOP_BH*3600+@STOP_BM*60+@STOP_BS)');
            end if; 

  
  
  
  
    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_fax` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_fax`(
                 orig_caller_number varchar(40),
                 orig_callee_number varchar(40),
                 caller_number varchar(40),
                 callee_number varchar(40),
                 fax_file_name varchar(40),
                 fax_document_total_pages varchar(40),
                 fax_direction varchar(40),
                 fax_result_code varchar(40),
                 fax_success varchar(40),
                 starttime varchar(40),
                 endtime   varchar(40)
)
begin
  declare sql1 nvarchar(2500);
    set @orig_caller_number=orig_caller_number;
    set @orig_callee_number=orig_callee_number;
    set @caller_number=caller_number;
    set @callee_number=callee_number;
    set @fax_file_name=fax_file_name;
    set @fax_document_total_pages=fax_document_total_pages;
    set @fax_direction=fax_direction;
    set @fax_result_code=fax_result_code;
    set @fax_success=fax_success;
    set @starttime=starttime;
    set @endtime=endtime;
 

  set sql1=concat(' select  a.orig_caller_number,a.orig_callee_number,c.caller_number,'
       ,' c.callee_number,c.event_timestamp,c.fax_file_name,c.fax_document_total_pages,'
       ,' c.fax_direction,c.fax_result_code,c.fax_success,'
      ,'case  c.fax_direction when ''rxfax ''then ''接收'' when ''txfax'' then ''发送'''
        ,'else  c.fax_direction end fax_direction1,'
        ,'case  c.fax_success when 0 then ''失败'''
        ,'else  ''成功'' end fax_success1'
       ,' from v_report_cti_fax_files as c
         left join report_cdr as a '
       ,'  on  a.cti_call_uuid=c.cti_call_uuid  where 1=1 ');


  
   if (@orig_caller_number is not null and @orig_caller_number<>'') then
         set sql1=concat(sql1,' and a.orig_caller_number=@orig_caller_number');
   end if;     
    
     if (@orig_callee_number is not null and @orig_callee_number<>'' )then
         set sql1=concat(sql1,' and a.orig_callee_number=@orig_callee_number');
   end if;
    
     if @caller_number is not null and @caller_number<>'' then
    set sql1=concat(sql1,' and c.caller_number=@caller_number');
     end if; 
     if @callee_number is not null and @callee_number<>'' then
    set sql1=concat(sql1,' and c.callee_number=@callee_number');
     end if; 
     
     
     if @fax_file_name is not null and @fax_file_name<>'' then
         set sql1=concat(sql1,' and c.fax_file_name=@fax_file_name');
   end if;
     if @fax_document_total_pages is not null and @fax_document_total_pages<>'' then
         set sql1=concat(sql1,' and c.fax_document_total_pages=@fax_document_total_pages');
   end if;
   if @fax_direction is not null and @fax_direction<>'' then
         set sql1=concat(sql1,' and c.fax_direction=@fax_direction');
     end if;    
   if @fax_result_code is not null and @fax_result_code<>'' then
         set sql1=concat(sql1,' and c.fax_result_code=@fax_result_code');
     end if;
     
     
     if @starttime is not null and @starttime<>'' then
    set sql1=concat(sql1,' and date_format(event_timestamp,''%Y-%m-%d'')>=@starttime');
     end if; 
     
     
     if @endtime is not null and @endtime<>'' then
    set sql1=concat(sql1,' and date_format(event_timestamp,''%Y-%m-%d'')<=@endtime');
     end if;
  

    set @exesql =sql1; 

    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_general_kpi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_general_kpi`(
                 times varchar(100),
                 starttime varchar(40),
                 endtime   varchar(40),
                 queue_start_h varchar(40),
                 queue_start_m varchar(40),
                 queue_start_s varchar(40),
                 queue_stop_h varchar(40),
                 queue_stop_m varchar(40),
                 queue_stop_s varchar(40),
         calling_start_h varchar(40),
                 calling_start_m varchar(40),
                 calling_start_s varchar(40),
                 calling_stop_h varchar(40),
                 calling_stop_m varchar(40),
                 calling_stop_s varchar(40),
         post_start_h varchar(40),
                 post_start_m varchar(40),
                 post_start_s varchar(40),
                 post_stop_h varchar(40),
                 post_stop_m varchar(40),
                 post_stop_s varchar(40),
                 org_id      varchar(40),
                 org_name     varchar(40)
             
)
begin
  declare sql1 nvarchar(4000);
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @queue_start_h=queue_start_h;
    set @queue_start_m=queue_start_m;
    set @queue_start_s=queue_start_s;
    set @queue_stop_h=queue_stop_h;
    set @queue_stop_m=queue_stop_m;
    set @queue_stop_s=queue_stop_s;
    set @calling_start_h=calling_start_h;
    set @calling_start_m=calling_start_m;
    set @calling_start_s=calling_start_s;
    set @calling_stop_h=calling_stop_h;
    set @calling_stop_m =calling_stop_m;
    set @calling_stop_s =calling_stop_s;
    set @post_start_h =post_start_h;
    set @post_start_m =post_start_m;
    set @post_start_s =post_start_s;
    set @post_stop_h =post_stop_h;
    set @post_stop_m =post_stop_m;
    set @post_stop_s=post_stop_s;
  set @org_id=org_id;
  set @org_name=org_name;

    set sql1=concat('select  d1,org_id,org_name,'
        ,'ifnull(sum(callcount),0) as callcount,'  
        ,'ifnull(sum(turncount),0) as turncount,'  
        ,'(ifnull(sum(callcount),0)-ifnull(sum(turncount),0)) as failcount,' 
        ,'concat(ifnull(round(ifnull(sum(turncount),0)*100/ifnull(sum(callcount),0),2),0),''%'') as turnrate,'
        ,'report_number_to_time(ifnull(sum(talktimecount),0)) as talktimecount,'
        ,'report_number_to_time(ifnull(round(ifnull(sum(talktimecount),0)/ifnull(sum(turncount),0),0),0)) as avgcalltime,' 
        ,'ifnull(sum(inboundcalls),0) as inboundcalls,' 
        ,'ifnull(sum(inboundsucccalls),0) as inboundsucccalls,'
        ,'(ifnull(sum(inboundcalls),0)-ifnull(sum(inboundsucccalls),0)) as failinboundcound,' 
        ,'concat(ifnull(round(ifnull(sum(inboundsucccalls),0)*100/ifnull(sum(inboundcalls),0),2),0),''%'') as inboundrate,'
    ,'report_number_to_time(ifnull(sum(inboundtalktimecount),0)) as inboundtalktimecount,'
        ,'report_number_to_time(ifnull(round(ifnull(sum(inboundtalktimecount),0)/ifnull(sum(inboundsucccalls),0),0),0)) as avginbound,' 
        ,'ifnull(sum(transfertoagentcalls),0) as transfertoagentcalls,'  
        ,'ifnull(sum(transfertoagentsucccalls),0) as transfertoagentsucccalls,'  
        ,'(ifnull(sum(transfertoagentcalls),0)-ifnull(sum(transfertoagentsucccalls),0)) as failtransfer,' 
    ,'concat(ifnull(round(ifnull(sum(transfertoagentsucccalls),0)*100/ifnull(sum(transfertoagentcalls),0),2),0),''%'') as transferrate,'
        ,'ifnull(sum(vmcount),0) as vmcount,' 
    ,'report_number_to_time(ifnull(sum(secinqueue),0)) as secinqueue,'
        ,'report_number_to_time(ifnull(round(ifnull(sum(secinqueue),0)/ifnull(sum(transfertoagentcalls),0),0),0)) as avgsec,' 
        ,'report_number_to_time(ifnull(sum(transfertoagenttalktimecount),0)) as transfertoagenttalktimecount,'
        ,'report_number_to_time(ifnull(round(ifnull(sum(transfertoagenttalktimecount),0)/ifnull(sum(transfertoagentsucccalls),0),0),0)) as avgsecin,' 
    ,'report_number_to_time(ifnull(sum(secinpostcall),0)) as secinpostcall,'
        ,'report_number_to_time(ifnull(round(ifnull(sum(secinpostcall),0)/ifnull(sum(transfertoagentsucccalls),0),0),0)) as avgsecpost,' 
        ,'report_number_to_time(ifnull(sum(secinpostcall),0)+ifnull(sum(transfertoagenttalktimecount),0)) as worktime,' 
        ,'report_number_to_time(ifnull(round(ifnull(sum(secinpostcall)+ifnull(sum(transfertoagenttalktimecount),0),0)/ifnull(sum(transfertoagentsucccalls),0),0),0)) as avgwork,' 
    ,'ifnull(sum(calloutcount),0) as calloutcount,'  
        ,'ifnull(sum(turnoutcount),0) as turnoutcount,'  
    ,'(ifnull(sum(calloutcount),0)-ifnull(sum(turnoutcount),0)) as failcallout,' 
    ,'concat(ifnull(round(ifnull(sum(turnoutcount),0)*100/ifnull(sum(calloutcount),0),2),0),''%'') as calloutrate,'
        ,'report_number_to_time(ifnull(sum(callouttalktimecount),0)) as callouttalktimecount,'
        ,'report_number_to_time(ifnull(round(ifnull(sum(callouttalktimecount),0)/ifnull(sum(turnoutcount),0),0),0)) as avgcallout,' 
        
        ,'ifnull(sum(seatcalloutcount),0) as seatcalloutcount,'  
        ,'ifnull(sum(seatturnoutcount),0) as seatturnoutcount,'  
    ,'(ifnull(sum(seatcalloutcount),0)-ifnull(sum(seatturnoutcount),0)) as failseat,' 
    ,'concat(ifnull(round(ifnull(sum(seatturnoutcount),0)*100/ifnull(sum(seatcalloutcount),0),2),0),''%'') as seatrate,'
        ,'report_number_to_time(ifnull(sum(seattalktimecount),0)) as seattalktimecount,'
        ,'report_number_to_time(ifnull(round(ifnull(sum(seattalktimecount),0)/ifnull(sum(seatturnoutcount),0),0),0)) as avgseat' 
       
        
        
        ,' from ');
       
        set sql1=concat(sql1,'( select  ');
        
         if @times='半小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d '')');
         end if;
        
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(tjdate,''%Y''),''-0'',cast(week(tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(tjdate,''%Y''),''-'',cast(week(tjdate) as SIGNED)+1)  end ');
         end if;      
 
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m '')');
         end if;
         
         if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(tjdate,''%Y''),''-'',quarter(tjdate))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y'')');
         end if;
         
         set sql1=concat(sql1,' as d1,'
                         ,'callcount,'
                         ,'turncount,'
                         ,'talktimecount,'
                         ,'inboundcalls,'
                         ,'inboundsucccalls,'
                         ,'inboundtalktimecount,'
                         ,'transfertoagentsucccalls,'
                         ,'transfertoagentcalls,'
                         ,'vmcount,'
                         ,'secinqueue,'
                         ,'transfertoagenttalktimecount,'
                         ,'secinpostcall,'
                         ,'calloutcount,'
                         ,'turnoutcount,'
                         ,'callouttalktimecount,'
                         ,'seatcalloutcount,'
                         ,'seatturnoutcount,'
             ,'org_id,'
             ,'org_name,'
                         ,'seattalktimecount '
                         ,' from report_cti_general_kpi where 1=1 '
                          );
            if @starttime is not null and @starttime<>'' then
        set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')>=@starttime');
            end if; 
     
            if @endtime is not null and @endtime<>'' then
        set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')<=@endtime');
            end if; 

      if @org_id is not null and @org_id<>'' then
        set sql1=concat(sql1,' and org_id=@org_id');
            end if; 
            
      if @org_name is not null and @org_name<>'' then
        set sql1=concat(sql1,' and org_name=@org_name');
            end if; 

        if @queue_start_h+@queue_start_m+@queue_start_s >0 then
        set sql1=concat(sql1,' and secinqueue>=ltrim(@queue_start_h*3600+@queue_start_m*60+@queue_start_s)');
            end if; 
          
            if @queue_stop_h+@queue_stop_m+@queue_stop_s >0 then
        set sql1=concat(sql1,' and secinqueue<=ltrim(@queue_stop_h*3600+@queue_stop_m*60+@queue_stop_s)');
            end if; 
            
            if @calling_start_h+@calling_start_m+@calling_start_s >0 then
        set sql1=concat(sql1,' and secinqueuecall>=ltrim(@calling_start_h*3600+@calling_start_m*60+@calling_start_s)');
            end if; 
          
            if @calling_stop_h+@calling_stop_m+@calling_stop_s >0 then
        set sql1=concat(sql1,' and secinqueuecall<=ltrim(@calling_stop_h*3600+@calling_stop_m*60+@calling_stop_s)');
            end if; 
            
      if @post_start_h+@post_start_m+@post_start_s >0 then
        set sql1=concat(sql1,' and secinpostcall>=ltrim(@post_start_h*3600+@post_start_m*60+@post_start_s)');
            end if; 
          
            if @post_stop_h+@post_stop_m+@post_stop_s >0 then
        set sql1=concat(sql1,' and secinpostcall<=ltrim(@post_stop_h*3600+@post_stop_m*60+@post_stop_s)');
            end if; 
         
          set sql1=concat(sql1,' ) as t1'
          ,' group by t1.d1,t1.org_id,t1.org_name');

    set @exesql =sql1; 
   
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_ivr` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_ivr`( 
                orig_caller_number varchar(40),
                orig_callee_number varchar(40),
                caller_number varchar(40),
                callee_number varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                ivrduration varchar(40),
                cti_call_uuid varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40),
                start_ch varchar(40),
                start_cm varchar(40),
                start_cs varchar(40),
                stop_ch varchar(40),
                stop_cm varchar(40),
                stop_cs varchar(40)
       
)
begin

  declare sql1 nvarchar(2500);

    set @orig_caller_number=orig_caller_number;
    set @orig_callee_number=orig_callee_number;
    set @caller_number=caller_number;
    set @callee_number=callee_number;
    set @starttime=starttime;
    set @endtime=endtime;
    set @ivrduration=ivrduration;
    set @cti_call_uuid=cti_call_uuid;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
               
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s =stop_s;
    set @start_ch =start_ch;
    set @start_cm =start_cm;
    set @start_cs =start_cs;
    set @stop_ch =stop_ch;
    set @stop_cm =stop_cm;
    set @stop_cs =stop_cs;
  
  set sql1=concat(' select a.orig_caller_number,a.orig_callee_number,a.caller_number,a.callee_number,a.call_direction,'
        ,' a.duration,a.duration1,a.created_time,a.answered_time,a.hangup_time,'
        ,' a.cti_call_uuid,ivr.start_time,ivr.complete_time,'
        ,' timestampdiff(second,ivr.start_time,ivr.complete_time) as ivrduration,'
        ,' report_number_to_time(timestampdiff(second,ivr.start_time,ivr.complete_time)) as ivrduration1'
    ,'   from v_report_cti_channel_execute as ivr,v_report_channel as a '
        ,' where ivr.application=''ivr'' and ivr.call_uuid=a.channel_uuid');


     if @start_h+@start_m+@start_s >0 then
    set sql1=concat(sql1,' and timestampdiff(second,ivr.start_time,ivr.complete_time) >=ltrim(@start_h*3600+@start_m*60+@start_s)');
     end if; 
     if @stop_h+@stop_m+@stop_s >0 then
    set sql1=concat(sql1,' and timestampdiff(second,ivr.start_time,ivr.complete_time) <=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
     end if;   
    
   if @start_ch+@start_cm+@start_cs >0 then
    set sql1=concat(sql1,' and a.duration>=ltrim(@start_ch*3600+@start_cm*60+@start_cs) ');
     end if; 
     if @stop_ch+@stop_cm+@stop_cs >0 then
    set sql1=concat(sql1,' and a.duration<=ltrim(@stop_ch*3600+@stop_cm*60+@stop_cs)' );
     end if; 
     
     if @starttime is not null and @starttime<>'' then
    set sql1=concat(sql1,' and date_format(ivr.start_time,''%Y-%m-%d'')>=@starttime');
     end if; 
     
     
     if @endtime is not null and @endtime<>'' then
     set sql1=concat(sql1,' and  date_format(ivr.start_time,''%Y-%m-%d'')<=@endtime');
     end if; 
     
 
     if @orig_caller_number is not null and @orig_caller_number<>'' then
          set sql1=concat(sql1,' and a.orig_caller_number=@orig_caller_number');
     end if;
    
     if @orig_callee_number is not null and @orig_callee_number<>'' then
          set sql1=concat(sql1,' and a.orig_callee_number=@orig_callee_number');
   end if;
   
     if @caller_number is not null and @caller_number<>'' then
          set sql1=concat(sql1,' and a.caller_number=@caller_number');
     end if;
   
     if @callee_number is not null and @callee_number<>'' then
         set sql1=concat(sql1,' and a.callee_number=@callee_number');
     end if;
    
     if @cti_call_uuid is not null and @cti_call_uuid<>'' then
         set sql1=concat(sql1,' and a.cti_call_uuid=@cti_call_uuid');
      end if;
  


    set @exesql =sql1; 

    prepare stm from @exesql; 
    
    execute stm;
    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_org_service` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `p_report_org_service`(
                starttime varchar(40),
                endtime varchar(40),
                context varchar(40),
                name     varchar(40)
              
              
)
begin
  declare sql1 nvarchar(2500);

    set @starttime=starttime;
    set @endtime=endtime;
    set @context=context;
    set @name=name;
   
  set sql1= concat(' select context,name, sum(wxz) as ''未选择'',sum(fcmy) as ''非常满意'',sum(my) as ''满意'',
  sum(yb) as ''一般'' , sum(bmy) as ''不满意'' from (  ');
  set sql1=concat(sql1,' select context, name,'
      ,' case  ' 
      ,' when (selectvalue=''0'') then'
      ,' count(selectvalue) end ''wxz'','
      ,' case '
      ,' when (selectvalue=''1'') then '
      ,' count(selectvalue) end ''fcmy'','
      ,' case '
      ,' when (selectvalue=''2'') then '
      ,' count(selectvalue) end ''my'','
      ,' case '
      ,' when (selectvalue=''3'') then '
      ,' count(selectvalue) end ''yb'','
      ,' case ' 
      ,' when (selectvalue=''4'') then '
      ,' count(selectvalue) end ''bmy'''
      ,' from ' 
      ,'( '
      ,' select  distinct a.*,b.context as context,t.name  as name from servicedc  as a  '
      ,' left join cti_channel as b on a.SRID=b.CALL_UUID  ' 
            ,' left join t_sys_organization as t on t.domain=b.context  where 1=1 ');


    if @starttime is not null and @starttime<>'' then
  set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')>=@starttime');
  end if; 

  if @endtime is not null and @endtime<>'' then
  set sql1=concat(sql1,' and   date_format(recordtime,''%Y-%m-%d'')<=@endtime');
  end if; 
    
    if @context is not null and @context<>'' then
  set sql1=concat(sql1,' and  context=@context');
  end if; 
    
    if @name is not null and @name<>'' then
  set sql1=concat(sql1,' and  name=@name');
  end if; 
    
    
        
    set sql1=concat(sql1,' ) as dd '
      ,' group by context,selectvalue ) as s '
            ,' group by context ');
 
    set @exesql =sql1; 
 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_org_service1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `p_report_org_service1`(
                starttime varchar(40),
                endtime varchar(40)
              
              
              
)
begin
  declare sql1 nvarchar(2500);

    set @starttime=starttime;
    set @endtime=endtime;
   
  set sql1= concat(' select  sum(wxz) as ''未选择'',sum(fcmy) as ''非常满意'',sum(my) as ''满意'',
  sum(yb) as ''一般'' , sum(bmy) as ''不满意'' from (  ');
  set sql1=concat(sql1,' select '
      ,' case  ' 
      ,' when (selectvalue=''0'') then'
      ,' count(selectvalue) end ''wxz'','
      ,' case '
      ,' when (selectvalue=''1'') then '
      ,' count(selectvalue) end ''fcmy'','
      ,' case '
      ,' when (selectvalue=''2'') then '
      ,' count(selectvalue) end ''my'','
      ,' case '
      ,' when (selectvalue=''3'') then '
      ,' count(selectvalue) end ''yb'','
      ,' case ' 
      ,' when (selectvalue=''4'') then '
      ,' count(selectvalue) end ''bmy'''
      ,' from ' 
      ,'( '
      ,' select  distinct a.*  from servicedc  as a  '
            ,'   where 1=1 ');


    if @starttime is not null and @starttime<>'' then
  set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')>=@starttime');
  end if; 

  if @endtime is not null and @endtime<>'' then
  set sql1=concat(sql1,' and   date_format(recordtime,''%Y-%m-%d'')<=@endtime');
  end if; 
        
    set sql1=concat(sql1,' ) as dd '
      ,' group by selectvalue ) as s '
            ,'  ');
 
    set @exesql =sql1; 

    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_satisfaction_survey` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_satisfaction_survey`(
                times varchar(40),
                work_id varchar(40),
                selectname varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                selectvalue varchar(40),
                agent_name varchar(40)
               
)
begin
  declare sql1 nvarchar(4000);
    set @times=times;
    set @work_id=work_id;
    set @selectname=selectname;
    set @starttime=starttime;
    set @endtime=endtime;
    set @selectvalue=selectvalue;
    set @agent_name=agent_name;

        set sql1=concat('select tjdate1,selectvalue,selectname,org_id,agent_name,work_id,snum '
          ,' from(select distinct ');
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
  
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;      
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;
 
  
   if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
         
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,'   select d1,selectvalue,selectname,org_id,agent_name,work_id, count(selectvalue) snum '
          ,' from(select');
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(sc.recordtime,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(sc.recordtime,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(sc.recordtime,''%Y-%m-%d '')');
         end if;
    
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(sc.recordtime) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(sc.recordtime,''%Y''),''-0'',cast(week(sc.recordtime) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(sc.recordtime,''%Y''),''-'',cast(week(sc.recordtime) as SIGNED)+1)  end ');
         end if;      
 
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(sc.recordtime,''%Y-%m '')');
         end if;
         
      
       if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(sc.recordtime,''%Y''),''-'',quarter(sc.recordtime))');      
         end if;
      
     if @times='年' then
     set sql1=concat(sql1,' date_format(sc.recordtime,''%Y'')');
         end if;  
          
     set sql1=concat(sql1,' as d1,sc.selectvalue,sc.selectname,a.org_id, a.agent_name,a.work_id '
                       '  from servicedc sc,v_report_cti_agent_session a where  sc.agentsessionid=a.agent_session_id ');  
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(sc.recordtime,''%Y-%m-%d'')>=@starttime');
      end if; 
          
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(sc.recordtime,''%Y-%m-%d'')<=@endtime');
      end if; 
        

     if @work_id is not null and @work_id<>'' then
     set sql1=concat(sql1,' and a.work_id=@work_id ');
     end if;
         
    if @selectname is not null and @selectname<>'' then
     set sql1=concat(sql1,' and sc.selectname=@selectname ');
     end if;
         
    if @selectvalue is not null and @selectvalue<>'' then
     set sql1=concat(sql1,' and sc.selectvalue=@selectvalue ');
     end if;
         
    if @agent_name is not null and @agent_name<>'' then
     set sql1=concat(sql1,' and a.agent_name=@agent_name ');
     end if;
         
      
         


  set sql1=concat(sql1,' ) as cdr1 ');                    
  set sql1=concat(sql1,' group by selectname,org_id,agent_name,work_id,d1 ,selectvalue '
            ,'  ) as cdr '
        ,' on tjdate1=cdr.d1'
                ,' order by tjdate1');


    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_satisfaction_survey_detailed` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_satisfaction_survey_detailed`(
                cti_call_uuid varchar(40),
                orig_caller_number varchar(40),
                agent_name varchar(40),
                work_id varchar(40),
                selectname varchar(40),
                starttime varchar(40),
                stoptime varchar(40)
              
              
)
begin
  declare sql1 nvarchar(2500);
    set @cti_call_uuid=cti_call_uuid;
    set @orig_caller_number=orig_caller_number;
    set @agent_name=agent_name;
    set @work_id=work_id;
    set @selectname=selectname;
    set @starttime=starttime;
    set @stoptime=stoptime;
    
    
    set sql1=concat('select q.cti_call_uuid,q.orig_caller_number,a.agent_name,a.work_id,sc.recordtime,sc.selectvalue,sc.selectname'
     ,' from servicedc sc,v_report_cti_agent_session a,report_cdr q'
       ,' where sc.agentsessionid=a.agent_session_id and sc.srid=q.cti_call_uuid');

    if @cti_call_uuid is not null and @cti_call_uuid<>'' then
     set sql1=concat(sql1,' and q.cti_call_uuid=@cti_call_uuid');
    end if; 

     if @orig_caller_number is not null and @orig_caller_number<>'' then
    set sql1=concat(sql1,' and q.orig_caller_number=@orig_caller_number');
     end if; 
     
     if @agent_name is not null and @agent_name<>'' then
    set sql1=concat(sql1,' and a.agent_name=@agent_name');
     end if; 
     
   if @work_id is not null and @work_id<>'' then
    set sql1=concat(sql1,' and a.work_id=@work_id');
     end if; 
          
     if @selectname is not null and @selectname<>'' then
    set sql1=concat(sql1,' and sc.selectname=@selectname');
     end if; 
     
     
     
     if @starttime is not null and @starttime<>'' then
    set sql1=concat(sql1,' and date_format(sc.recordtime,''%Y-%m-%d'')>=@starttime');
     end if; 
     
     
     if @stoptime is not null and @stoptime<>'' then
    set sql1=concat(sql1,' and date_format(sc.recordtime,''%Y-%m-%d'')<=@stoptime');
     end if; 

    set @exesql =sql1; 
    prepare stm from @exesql; 

    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_service` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_service`(
                
                starttime varchar(40),
                endtime varchar(40)
             
      
)
begin
  declare sql1 nvarchar(5000);
    set @starttime=starttime;
    set @endtime=endtime;
   
        set sql1=concat(' select count(*) as totalrecord from servicedc as c where 1=1 ');
        
          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')>=@starttime');
      end if; 
          
          if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')<=@endtime');
      end if; 
         
   
       if (@endtime is null or @endtime='') and (@starttime is null or @starttime='') then
       set sql1=concat(sql1,' and recordtime>=date_format(now(),''%Y-%m-%d '') and recordtime<=date_format(date_add(now(),interval 1 day),''%Y-%m-%d '') ');
       end if;

   
    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_service1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_service1`(
                
                starttime varchar(40),
                endtime varchar(40)
             
      
)
begin
  declare sql1 nvarchar(5000);
    set @starttime=starttime;
    set @endtime=endtime;
   

    set sql1=concat('select a.hour,a.selectname,a.pjcount,b.totalrecord from v_report_service1 as b,v_report_service as a where a.hour=b.hour ');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and date_format(str_to_date(a.hour,''%Y-%m-%d''),''%Y-%m-%d'')>=@starttime');
      end if; 
          
          if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(str_to_date(a.hour,''%Y-%m-%d''),''%Y-%m-%d'')<=@endtime');
      end if; 


       if (@endtime is null or @endtime='') and (@starttime is null or @starttime='') then
       set sql1=concat(sql1,' and a.hour>=date_format(now(),''%Y-%m-%d '') and a.hour<=date_format(date_add(now(),interval 1 day),''%Y-%m-%d '') ');
       end if;



    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_service2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_service2`(
                
                starttime varchar(40),
                endtime varchar(40)
             
      
)
begin
  declare sql1 nvarchar(5000);
    set @starttime=starttime;
    set @endtime=endtime;
   
        set sql1=concat(' select count(*) as totalrecord from servicedc as c where selectvalue <> 0 ');
        
          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')>=@starttime');
      end if; 
          
          if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')<=@endtime');
      end if; 
         
   
       if (@endtime is null or @endtime='') and (@starttime is null or @starttime='') then
       set sql1=concat(sql1,' and recordtime>=date_format(now(),''%Y-%m-%d '') and recordtime<=date_format(date_add(now(),interval 1 day),''%Y-%m-%d '') ');
       end if;

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_service3` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_service3`(
                
                starttime varchar(40),
                endtime varchar(40)
             
      
)
begin
  declare sql1 nvarchar(5000);
    set @starttime=starttime;
    set @endtime=endtime;
   
        set sql1=concat(' select count(*) as totalrecord from servicedc as c where (selectvalue=1 or selectvalue=2  )');
        
          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')>=@starttime');
      end if; 
          
          if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')<=@endtime');
      end if; 
         
   
       if (@endtime is null or @endtime='') and (@starttime is null or @starttime='') then
       set sql1=concat(sql1,' and recordtime>=date_format(now(),''%Y-%m-%d '') and recordtime<=date_format(date_add(now(),interval 1 day),''%Y-%m-%d '') ');
       end if;

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_REPORT_SINGLERGCALL` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_REPORT_SINGLERGCALL`(
                ORG_ID varchar(40),
                STARTTIME varchar(40),
                STOPTIME varchar(40)
          
             
)
BEGIN
  DECLARE sql1 nvarchar(4000);
    set @ORG_ID=ORG_ID;             
    set @STARTTIME=STARTTIME;
    set @STOPTIME=STOPTIME;
   

     set sql1=concat(' select inbound_orgid,inboundcount as 呼入,agent_inboundcount as 进线 '
            ,' ,agent_inboundcountsucc as 接通,outboundcountsucc as 呼出'
            ,' ,faxcount as 传真,vmcount as 留言'
      ,' from'        
      ,' ('              
      ,' select sum(callcount) as inboundcount,a.ORG_ID as inbound_orgid '
      ,' from report_calleverdaycollect a'
      ,' where a.CTI_CALL_DIRECTION=''inbound'' ');
            
      if @STARTTIME is not null and @STARTTIME<>'' then
        set sql1=CONCAT(sql1,' and a.tjdate>=@STARTTIME');
            end if; 
     
            if @STOPTIME is not null and @STOPTIME<>'' then
        set sql1=CONCAT(sql1,' and a.tjdate<@STOPTIME');
            end if;  
                   
  set sql1=concat(sql1,'  group by a.ORG_ID  ) aa '
      ,' left join '    
      ,' ('
      ,'  select sum(callcount) as agent_inboundcount ,b.ORG_ID as agent_inboundorgid'
      ,'   from report_calleverdaycollect b'
      ,' where  b.CTI_CC_DIRECTION=''inbound'''
      ,' group by b.ORG_ID '
            ,' ) bb on aa.inbound_orgid=bb.agent_inboundorgid '
            ,' left join  ('    
            ,'  select sum(agent_count) as agent_inboundcountsucc ,b.ORG_ID as agent_inboundorgidsucc '
            ,' from report_calleverdaycollect b '
            ,' where   b.CTI_CC_DIRECTION=''inbound'''
            ,' group by b.ORG_ID'
            ,' ) cc on aa.inbound_orgid=cc.agent_inboundorgidsucc '
            ,' left join  ('    
            ,'  select sum(callcount) as outboundcountsucc ,b.ORG_ID as outbound_orgid'
            ,'  from report_calleverdaycollect b '
            ,'   where b.CTI_CALL_DIRECTION=''outbound''  '
            ,' group by b.ORG_ID'
            ,' ) dd on aa.inbound_orgid=dd.outbound_orgid'
            ,' left join ( '        
            ,' select sum(faxcount) as faxcount ,b.ORG_ID as fax_orgid'
            ,'  from report_calleverdaycollect b'
            ,'   group by b.ORG_ID'
            ,' ) ee on aa.inbound_orgid=ee.fax_orgid'
            ,' left join ('       
            ,' select sum(VMCOUNT) as vmcount ,b.ORG_ID as vm_orgid'
            ,'  from report_calleverdaycollect b '
            ,' group by b.ORG_ID '
            ,' ) ff on aa.inbound_orgid=ff.vm_orgid'
            );
             
         
            
      IF @ORG_ID IS NOT NULL AND @ORG_ID<>'' then
            set sql1=concat(sql1,' AND aa.inbound_orgid=@ORG_ID');
            end if;
       
    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_skill` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_skill`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_ph varchar(40),
                start_pm varchar(40),
                start_ps varchar(40),
                stop_ph varchar(40),
                stop_pm varchar(40),
                stop_ps varchar(40)
              
              
)
begin
  declare sql1 nvarchar(2500);
    
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_ph=start_ph;
    set @start_pm=start_pm;
    set @start_ps=start_ps;
    set @stop_ph=stop_ph;
    set @stop_pm=stop_pm;
    set @stop_ps=stop_ps;
        set sql1=concat('select tjdate1 ,skill,callcount,turncount,queue_count,queue_succ_count,queue_time , '
          ,' report_number_to_time(ifnull(queue_time,0)) as queue_time1 ,'
      ,' failcall,' 
      ,' failqueue,' 
      ,' callrate,'   
      ,' queue_rate,'   
      ,' avgqueue_time ' 
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;

 
    if @times='周' then
       set sql1=concat(sql1,' case   when( week(dat1.tjdate)<10) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',week(dat1.tjdate))   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',week(dat1.tjdate))  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;


         if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,skill,sum(callcount) as callcount,sum(turncount) as turncount '
            ,' ,sum(queue_count) as queue_count,sum(queue_succ_count) as queue_succ_count '
            ,' ,sum(queue_time) as queue_time,'
      ,'(ifnull(sum(callcount),0)-ifnull(sum(turncount),0)) as failcall,' 
        ,'(ifnull(sum(queue_count),0)-ifnull(sum(queue_succ_count),0)) as failqueue,' 
        ,'concat(ifnull(round(ifnull(sum(turncount),0)*100/ifnull(sum(callcount),0),2),0),''%'') as callrate,'   
        ,'concat(ifnull(round(ifnull(sum(queue_succ_count),0)*100/ifnull(sum(queue_count),0),2),0),''%'') as queue_rate,'   
        ,'report_number_to_time(ifnull(round(ifnull(sum(queue_time),0)/ifnull(sum(queue_succ_count),0),0),0)) as avgqueue_time ' 
          ,' from(select ');
          
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d '')');
         end if;
  
        if @times='周' then
       set sql1=concat(sql1,' case  '
        ,' when( week(tjdate)<10) '
        ,' then '
    ,'  concat(date_format(tjdate,''%Y''),''-0'',week(tjdate))   '
    ,'else '
        ,' concat(date_format(tjdate,''%Y''),''-'',week(tjdate)) end');
         end if;
  
     if @times='月' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m '')');
         end if;
  
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(tjdate,''%Y''),''-'',quarter(tjdate))');      
         end if;
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y'')');
         end if;  
          
     set sql1=concat(sql1,' as d1, skill,callcount,turncount,queue_count,queue_succ_count
            ,queue_time '
            ,' from report_skill  c where skill is not null  ');  
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')<@endtime');
      end if; 
        if @start_ph+@start_pm+@start_ps >0 then
        set sql1=concat(sql1,' and queue_time>=ltrim(@start_ph*3600+@start_pm*60+@start_ps)');
            end if; 
          
            if @stop_ph+@stop_pm+@stop_ps >0 then
        set sql1=concat(sql1,' and queue_time<=ltrim(@stop_ph*3600+@stop_pm*60+@stop_ps)');
            end if; 
  
  set sql1=concat(sql1,' )  cdr1'
            ,' group by skill ,d1 '
            ,' )  cdr'
            ,' on tjdate1=cdr.d1');
       set sql1=concat(sql1,' order by tjdate1 ');


    set @exesql =sql1; 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_skill_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_skill_back`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_ph varchar(40),
                start_pm varchar(40),
                start_ps varchar(40),
                stop_ph varchar(40),
                stop_pm varchar(40),
                stop_ps varchar(40)
              
              
)
begin
  declare sql1 nvarchar(2500);
    
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_ph=start_ph;
    set @start_pm=start_pm;
    set @start_ps=start_ps;
    set @stop_ph=stop_ph;
    set @stop_pm=stop_pm;
    set @stop_ps=stop_ps;
        set sql1=concat('select tjdate1 ,org_id,skill,callcount,turncount,queue_count,queue_succ_count,queue_time , '
          ,' report_number_to_time(ifnull(queue_time,0)) as queue_time1 ,'
      ,' failcall,' 
      ,' failqueue,' 
      ,' callrate,'   
      ,' queue_rate,'   
      ,' avgqueue_time ' 
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;

 
    if @times='周' then
       set sql1=concat(sql1,' case   when( week(dat1.tjdate)<10) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',week(dat1.tjdate))   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',week(dat1.tjdate))  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;


         if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,org_id,skill,sum(callcount) as callcount,sum(turncount) as turncount '
            ,' ,sum(queue_count) as queue_count,sum(queue_succ_count) as queue_succ_count '
            ,' ,sum(queue_time) as queue_time,'
      ,'(ifnull(sum(callcount),0)-ifnull(sum(turncount),0)) as failcall,' 
        ,'(ifnull(sum(queue_count),0)-ifnull(sum(queue_succ_count),0)) as failqueue,' 
        ,'concat(ifnull(round(ifnull(sum(turncount),0)*100/ifnull(sum(callcount),0),2),0),''%'') as callrate,'   
        ,'concat(ifnull(round(ifnull(sum(queue_succ_count),0)*100/ifnull(sum(queue_count),0),2),0),''%'') as queue_rate,'   
        ,'report_number_to_time(ifnull(round(ifnull(sum(queue_time),0)/ifnull(sum(queue_succ_count),0),0),0)) as avgqueue_time ' 
          ,' from(select ');
          
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d '')');
         end if;
  
        if @times='周' then
       set sql1=concat(sql1,' case  '
        ,' when( week(tjdate)<10) '
        ,' then '
    ,'  concat(date_format(tjdate,''%Y''),''-0'',week(tjdate))   '
    ,'else '
        ,' concat(date_format(tjdate,''%Y''),''-'',week(tjdate)) end');
         end if;
  
     if @times='月' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m '')');
         end if;
  
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(tjdate,''%Y''),''-'',quarter(tjdate))');      
         end if;
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y'')');
         end if;  
          
     set sql1=concat(sql1,' as d1, skill,callcount,turncount,queue_count,queue_succ_count
            ,queue_time,org_id '
                       ' from report_skill  c where skill is not null  ');  
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')<@endtime');
      end if; 
        if @start_ph+@start_pm+@start_ps >0 then
        set sql1=concat(sql1,' and queue_time>=ltrim(@start_ph*3600+@start_pm*60+@start_ps)');
            end if; 
          
            if @stop_ph+@stop_pm+@stop_ps >0 then
        set sql1=concat(sql1,' and queue_time<=ltrim(@stop_ph*3600+@stop_pm*60+@stop_ps)');
            end if; 
  
  set sql1=concat(sql1,' )  cdr1'
            ,' group by skill ,d1 '
            ,' )  cdr'
            ,' on tjdate1=cdr.d1');
       set sql1=concat(sql1,' order by tjdate1 ');


    set @exesql =sql1; 
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_system_cdr` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_system_cdr`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40),
                cti_call_direction varchar(40),
                orig_caller_type varchar(40)
              
)
begin
  declare sql1 nvarchar(2500);
    
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
    set @cti_call_direction=cti_call_direction;
    set @orig_caller_type=orig_caller_type;
 

        set sql1=concat('select tjdate1,billsec,waitsec,cdr.sucse,round((ifnull(sucse / num,0))*100,2) as w,ifnull(billsec / sucse,0) as p,'
          ,'report_number_to_time(billsec) as billsec1'
          ,',report_number_to_time(round(ifnull(billsec / sucse,0))) as p1'
          ,',report_number_to_time(waitsec) as waitsec1 ,'
          ,' y.cti_call_direction_chinese as cti_call_direction1,'
          ,' w.cti_channel_type_chinese as orig_caller_type1,'
          ,' case'
          ,' when num is null then 0'
          ,' else num'
          ,' end num1'
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;

 
if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;


 if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

         
         
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,cti_call_direction,count(id) as num,cdr1.orig_caller_type,sum(cdr1.billsec) as billsec,'
          ,'sum(cdr1.waitsec) as waitsec,count(answered_time) as sucse'
          ,' from(select');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d '')');
         end if;

  
  if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(creat_time_30m) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(creat_time_30m,''%Y''),''-0'',cast(week(creat_time_30m) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(creat_time_30m,''%Y''),''-'',cast(week(creat_time_30m) as SIGNED)+1)  end ');
         end if;
  
     if @times='月' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m '')');
         end if;

  
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(creat_time_30m,''%Y''),''-'',quarter(creat_time_30m))');      
         end if;
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y'')');
         end if;  
          
     set sql1=concat(sql1,' as d1,c.cti_call_direction,id,c.orig_caller_type,c.billsec ,c.waitsec,c.answered_time'
                       ' from report_cdr  c where 1=1');  
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')<=@endtime');
      end if; 
        
         if @start_h+@start_m+@start_s >0 then
     set sql1=concat(sql1,' and billsec>=ltrim(@start_h*3600+@start_m*60+@start_s)');
     end if; 
          
     if @stop_h+@stop_m+@stop_s >0 then
     set sql1=concat(sql1,' and billsec<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
     end if; 
            
        
        
     if @orig_caller_type is not null and @orig_caller_type <>'' then
     set sql1=concat(sql1,' and c.orig_caller_type=@orig_caller_type ');
     end if;
        
     if @cti_call_direction is not null and @cti_call_direction<>'' then
     set sql1=concat(sql1,' and c.cti_call_direction=@cti_call_direction ');
     end if;

  set sql1=concat(sql1,'  and c.cti_call_direction is not null '  );                    
  set sql1=concat(sql1,' )  cdr1'
            ,' group by cti_call_direction,orig_caller_type,d1'
            ,' )  cdr'
            ,' on tjdate1=cdr.d1'
            
            ,'  left join report_cti_call_direction y on cdr.cti_call_direction = y.cti_call_direction'
            ,'   left join  report_channel_type w on cdr.orig_caller_type = w.cti_channel_type'
            ,' order by tjdate1,cdr.cti_call_direction');


    set @exesql =sql1; 
  


    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_system_cdr_photo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_system_cdr_photo`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40),
                cti_call_direction varchar(40),
                orig_caller_type varchar(40)
              
)
begin
  declare sql1 nvarchar(2500);
  
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
    set @cti_call_direction=cti_call_direction;
    set @orig_caller_type=orig_caller_type;
 

  set sql1=concat(' select * from ( ');
  set sql1=concat(sql1,'select tjdate1'
  ',case' 
  ,' when (cti_call_direction is null or cti_call_direction='''') then ''呼入'''
  ,' when cti_call_direction=''inbound'' then ''呼入'''
  ,' when cti_call_direction=''outbound'' then ''呼出'''
  ,' when cti_call_direction=''local'' then ''本地呼叫'''
  ,' else cti_call_direction'
    ,' end  cti_call_direction1,'
    ,' case'
    ,' when num is null then 0'
    ,' else num'
    ,' end num1'
    ,' from(select distinct' );
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
       
        if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if; 
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;
  
      if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
     
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ( '
          ,' select d1,cti_call_direction,count(id) as num'
          ,' from(select ');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m-%d '')');
         end if;
        
    
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(creat_time_30m) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(creat_time_30m,''%Y''),''-0'',cast(week(creat_time_30m) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(creat_time_30m,''%Y''),''-'',cast(week(creat_time_30m) as SIGNED)+1)  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y-%m '')');
         end if;
        
    
    if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(creat_time_30m,''%Y''),''-'',quarter(creat_time_30m))');      
         end if;
         
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(creat_time_30m,''%Y'')');
         end if;  
          
      set sql1=concat(sql1,'   as d1,c.cti_call_direction,id' 
                          ,' ,c.answered_time'
                          ,' from report_cdr as c where 1=1' );
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(creat_time_30m,''%Y-%m-%d'')<=@endtime');
      end if; 
        
         if @start_h+@start_m+@start_s >0 then
     set sql1=concat(sql1,' and billsec>=ltrim(@start_h*3600+@start_m*60+@start_s)');
     end if; 
          
     if @stop_h+@stop_m+@stop_s >0 then
     set sql1=concat(sql1,' and billsec<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
     end if; 
            
        
        
     if @orig_caller_type is not null and @orig_caller_type <>'' then
     set sql1=concat(sql1,' and c.orig_caller_type=@orig_caller_type ');
     end if;
        
     if @cti_call_direction is not null and @cti_call_direction<>'' then
     set sql1=concat(sql1,' and c.cti_call_direction=@cti_call_direction ');
     end if;


         SET sql1=concat(sql1,'  and c.cti_call_direction is not null '
    ,'  and c.cti_call_direction<>''local'' and c.ANSWERED_TIME is not null');


 set sql1=concat(sql1,' ) as cdr1'
      ,' group by cti_call_direction,d1'
  ,' ) as cdr'
  ,' on tjdate1=cdr.d1'
  ,' union
     select null,''呼入'',0
     union
     select null,''呼出'',0)t1'
 ,' order by tjdate1,cti_call_direction1' );

    set @exesql =sql1; 

    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `P_REPORT_SYSTEM_EXT` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `P_REPORT_SYSTEM_EXT`(
                TIMES varchar(40),
                STARTTIME varchar(40),
                ENDTIME varchar(40),
                START_H varchar(40),
                START_M varchar(40),
                START_S varchar(40),
                STOP_H varchar(40),
                STOP_M varchar(40),
                STOP_S varchar(40),
                CTI_CALL_DIRECTION varchar(40),
                ORIG_CALLER_TYPE varchar(40)
              
)
BEGIN
  DECLARE sql1 nvarchar(2500);
    set @TIMES=TIMES;
    set @STARTTIME=STARTTIME;
    set @ENDTIME=ENDTIME;
    set @START_H=START_H;
    set @START_M=START_M;
    set @START_S=START_S;
    set @STOP_H=STOP_H;
    set @STOP_M=STOP_M;
    set @STOP_S=STOP_S;
    set @CTI_CALL_DIRECTION=CTI_CALL_DIRECTION;
    set @ORIG_CALLER_TYPE=ORIG_CALLER_TYPE;
 

        SET sql1=concat('select TJDATE1,BILLSEC,WAITSEC,cdr.SUCSE,(num / SUCSE)*100 as w,(BILLSEC / SUCSE) AS P,'
          ,'sec_to_time(BILLSEC) AS BILLSEC1'
          ,',sec_to_time(BILLSEC / SUCSE) AS p1'
          ,',sec_to_time(WAITSEC) AS WAITSEC1 ,'
          ,' Y.CTI_CALL_DIRECTION_CHINESE as CTI_CALL_DIRECTION1,'
          ,' w.cti_channel_type_chinese as ORIG_CALLER_TYPE1,'
          ,' case'
          ,' when num is null then 0'
          ,' else num'
          ,' end num1'
          ,' from(select DISTINCT ');
    
     IF @TIMES='半小时' then
     SET sql1=concat(sql1,' date_format(DAT1.TJDATE,''%Y-%m-%d %H:%i'')');
         end if;
         
     IF @TIMES='小时' then
     SET sql1=concat(sql1,' date_format(DAT1.TJDATE,''%Y-%m-%d %H'')');
         end if;
         
     IF @TIMES='天' then
     SET sql1=concat(sql1,' date_format(DAT1.TJDATE,''%Y-%m-%d '')');
         end if;
        
     IF @TIMES='周' then
     SET sql1=concat(sql1,' WEEK(DAT1.TJDATE)');
         end if;
         
     IF @TIMES='月' then
     SET sql1=concat(sql1,' date_format(DAT1.TJDATE,''%Y-%m '')');
         end if;
        
     IF @TIMES='季度' then
     SET sql1=concat(sql1,' QUARTER(DAT1.TJDATE)');
         end if;
         
     IF @TIMES='年' then
     SET sql1=concat(sql1,' date_format(DAT1.TJDATE,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as TJDATE1 FROM REPORT_DATE  DAT1 WHERE 1=1');

          if @STARTTIME is not null and @STARTTIME<>'' then
      set sql1=CONCAT(sql1,' and  date_format(DAT1.TJDATE,''%Y-%m-%d'')>=@STARTTIME');
      end if; 
     
    
     
      if @ENDTIME is not null and @ENDTIME<>'' then
      set sql1=CONCAT(sql1,' and  date_format(DAT1.TJDATE,''%Y-%m-%d'')<=@ENDTIME');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,CTI_CALL_DIRECTION,count(id) as num,cdr1.ORIG_CALLER_TYPE,sum(cdr1.BILLSEC) as BILLSEC,'
          ,'sum(cdr1.WAITSEC) as WAITSEC,COUNT(ANSWERED_TIME) as SUCSE'
          ,' from(SELECT');
          
            
            
     IF @TIMES='半小时' then
     SET sql1=concat(sql1,' date_format(CREAT_TIME_30M,''%Y-%m-%d %H:%i'')');
         end if;
         
     IF @TIMES='小时' then
     SET sql1=concat(sql1,' date_format(CREAT_TIME_30M,''%Y-%m-%d %H'')');
         end if;
         
     IF @TIMES='天' then
     SET sql1=concat(sql1,' date_format(CREAT_TIME_30M,''%Y-%m-%d '')');
         end if;
        
     IF @TIMES='周' then
     SET sql1=concat(sql1,' WEEK(CREAT_TIME_30M)');
         end if;
         
     IF @TIMES='月' then
     SET sql1=concat(sql1,' date_format(CREAT_TIME_30M,''%Y-%m '')');
         end if;
        
     IF @TIMES='季度' then
     SET sql1=concat(sql1,' QUARTER(CREAT_TIME_30M)');
         end if;
         
     IF @TIMES='年' then
     SET sql1=concat(sql1,' date_format(CREAT_TIME_30M,''%Y-&m'')');
         end if;  
          
     set sql1=concat(sql1,' as d1,C.CTI_CALL_DIRECTION,id,c.ORIG_CALLER_TYPE,c.BILLSEC ,c.WAITSEC,c.ANSWERED_TIME'
                       ' FROM REPORT_CDR  c where 1=1');  
     
         
         if @STARTTIME is not null and @STARTTIME<>'' then
      set sql1=CONCAT(sql1,' and  date_format(CREAT_TIME_30M,''%Y-%m-%d'')>=@STARTTIME');
      end if; 
     
      if @ENDTIME is not null and @ENDTIME<>'' then
      set sql1=CONCAT(sql1,' and  date_format(CREAT_TIME_30M,''%Y-%m-%d'')<=@ENDTIME');
      end if; 
        
         if @START_H+@START_M+@START_S >0 then
     set sql1=CONCAT(sql1,' and BILLSEC>=LTRIM(@START_H*3600+@START_M*60+@START_S)');
     end if; 
          
     if @STOP_H+@STOP_M+@STOP_S >0 then
     set sql1=CONCAT(sql1,' and BILLSEC<=LTRIM(@STOP_H*3600+@STOP_M*60+@STOP_S)');
     end if; 
            
        
        
     IF @ORIG_CALLER_TYPE IS NOT NULL AND @ORIG_CALLER_TYPE <>'' then
     SET sql1=concat(sql1,' AND c.ORIG_CALLER_TYPE=@ORIG_CALLER_TYPE ');
     end if;
        
     IF @CTI_CALL_DIRECTION IS NOT NULL AND @CTI_CALL_DIRECTION<>'' then
     SET sql1=concat(sql1,' AND C.CTI_CALL_DIRECTION=@CTI_CALL_DIRECTION ');
     end if;



  set sql1=concat(sql1,'  and c.CTI_CC_DIRECTION is not null '  );                    
  set sql1=concat(sql1,' )  cdr1'
            ,' group by CTI_CALL_DIRECTION,ORIG_CALLER_TYPE,d1'
            ,' )  cdr'
            ,' on TJDATE1=cdr.d1'
            
            ,'  left join REPORT_CTI_CALL_DIRECTION Y ON cdr.CTI_CALL_DIRECTION = y.cti_call_direction'
            ,'   LEFT JOIN  REPORT_CHANNEL_TYPE W ON cdr.ORIG_CALLER_TYPE = W.CTI_CHANNEL_TYPE'
            ,' order by TJDATE1,cdr.CTI_CALL_DIRECTION');

  

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_system_statictics` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `p_report_system_statictics`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40)
         
              
)
begin
  declare sql1 nvarchar(2500);
    
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;

 

        set sql1=concat('select tjdate1,context,name,fcmy,my,yb,bmy,wxz  '
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;

 
if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;


 if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

         
         
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select  recordtime,context,name,sum(wxz) as wxz,sum(fcmy) as fcmy ,sum(my) as my,sum(bmy)  as bmy ,sum(yb) as yb '
          ,' from(select ');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(report_time_30m(recordtime),''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m-%d '')');
         end if;

         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(recordtime) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(recordtime,''%Y''),''-0'',cast(week(recordtime) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(recordtime,''%Y''),''-'',cast(week(recordtime) as SIGNED)+1)  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m '')');
         end if;
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(recordtime,''%Y''),''-'',quarter(recordtime))');      
         end if;
 
     if @times='年' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y'')');
         end if;  
          
    set sql1=concat(sql1,' as recordtime ,context , name ,'
      ,' case '
      ,' when (selectvalue=''0'') then '
      ,' count(selectvalue) end ''wxz'', '
      ,' case ' 
      ,' when (selectvalue=''1'') then '
      ,' count(selectvalue) end ''fcmy'','
      ,' case ' 
      ,' when (selectvalue=''2'') then '
      ,' count(selectvalue) end ''my'','
      ,' case ' 
      ,' when (selectvalue=''3'') then '
      ,' count(selectvalue) end ''yb'','
      ,' case '
      ,' when (selectvalue=''4'') then '
      ,' count(selectvalue) end ''bmy'' '
      ,' from '
      ,' ( '
      ,'  select  distinct a.*,b.context as context,t.name  as name from servicedc  as a  '
      ,'  left join cti_channel as b on a.SRID=b.CALL_UUID  '
      ,'  left join t_sys_organization as t on t.domain=b.context  where 1=1  ');
            
          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')<=@endtime');
      end if; 
            
    set sql1=concat(sql1,' ) as b'
      ,' group by context,selectvalue ,');
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(report_time_30m(recordtime),''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m-%d '')');
         end if;

         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(recordtime) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(recordtime,''%Y''),''-0'',cast(week(recordtime) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(recordtime,''%Y''),''-'',cast(week(recordtime) as SIGNED)+1)  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m '')');
         end if;
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(recordtime,''%Y''),''-'',quarter(recordtime))');      
         end if;
 
     if @times='年' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y'')');
         end if;  
            
     set sql1 =concat(sql1,'   '
      ,' ) as a '
      ,' group by context,recordtime ) as b on d.tjdate1 = b.recordtime') ;


    set @exesql =sql1; 
  


    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_system_statisfication` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`c8user`@`%` PROCEDURE `p_report_system_statisfication`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40)
         
              
)
begin
  declare sql1 nvarchar(2500);
    
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;

 

        set sql1=concat('select tjdate1,org_id,name,fcmy,my,yb,bmy,wxz  '
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;

 
if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;


 if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

         
         
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select  recordtime,org_id,name,sum(wxz) as wxz,sum(fcmy) as fcmy ,sum(my) as my,sum(bmy)  as bmy ,sum(yb) as yb '
          ,' from(select ');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(report_time_30m(recordtime),''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m-%d '')');
         end if;

         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(recordtime) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(recordtime,''%Y''),''-0'',cast(week(recordtime) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(recordtime,''%Y''),''-'',cast(week(recordtime) as SIGNED)+1)  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m '')');
         end if;
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(recordtime,''%Y''),''-'',quarter(recordtime))');      
         end if;
 
     if @times='年' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y'')');
         end if;  
          
    set sql1=concat(sql1,' as recordtime ,org_id , name ,'
      ,' case '
      ,' when (selectvalue=''0'') then '
      ,' count(selectvalue) end ''wxz'', '
      ,' case ' 
      ,' when (selectvalue=''1'') then '
      ,' count(selectvalue) end ''fcmy'','
      ,' case ' 
      ,' when (selectvalue=''2'') then '
      ,' count(selectvalue) end ''my'','
      ,' case ' 
      ,' when (selectvalue=''3'') then '
      ,' count(selectvalue) end ''yb'','
      ,' case '
      ,' when (selectvalue=''4'') then '
      ,' count(selectvalue) end ''bmy'' '
      ,' from '
      ,' ( '
      ,'  select  distinct a.*,t.name  as name from servicedc  as a  '
      ,'  left join t_sys_organization as t on t.domain=a.org_id  where 1=1  ');
            
          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(recordtime,''%Y-%m-%d'')<=@endtime');
      end if; 
            
    set sql1=concat(sql1,' ) as b'
      ,' group by org_id,selectvalue ,');
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(report_time_30m(recordtime),''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m-%d '')');
         end if;

         if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(recordtime) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(recordtime,''%Y''),''-0'',cast(week(recordtime) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(recordtime,''%Y''),''-'',cast(week(recordtime) as SIGNED)+1)  end ');
         end if;
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y-%m '')');
         end if;
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(recordtime,''%Y''),''-'',quarter(recordtime))');      
         end if;
 
     if @times='年' then
     set sql1=concat(sql1,' date_format(recordtime,''%Y'')');
         end if;  
            
     set sql1 =concat(sql1,'   '
      ,' ) as a '
      ,' group by org_id,recordtime ) as b on d.tjdate1 = b.recordtime') ;


    set @exesql =sql1; 
  


    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_trans_acd_event` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_trans_acd_event`()
begin

    declare inStartTime datetime ;           #开始时间
    declare inStopTime datetime  ;
    declare inStopTime1 datetime ;            #结束时间
    declare logLastTime datetime ;            #中间时间
    declare inSaveDate_value int;    #保留几天
    declare inTransferDate_value int; #转移几天的数据
    declare ResoureTotalCount int;    #判断是否转移数据
    declare TempTotalCount int;
    set sql_safe_updates = 0;  
    
    #获得执行的开始时间
     select tDate into inStartTime from report_lastcountdate where tYpe='CTI_ACD_EVENT';
	#获得最小的时间
     select min(event_timestamp) into logLastTime  from  cti_acd_event;
	#首先计算出需要保留的天数和转移的天数；
     select TRANSFERDATE_NUMBER ,SAVEDATE_NUMBER into inTransferDate_value,inSaveDate_value  
     from report_value where type='CTI_ACD_EVENT';
	# ========================获得时间判断是否需要转移表中的数据==========================================
	set  inStopTime =str_to_date(date_format(sysdate(),'%Y-%m-%d'), '%Y-%m-%d');
	set  inStopTime1 =date_add(inStopTime, INTERVAL inSaveDate_value*(-1) day);  #获得最大的转移时间
	#获得开始时间
    select (case when inStartTime>=logLastTime then inStartTime when inStartTime<logLastTime then logLastTime  end) into inStartTime from dual;
     #获得结束时间
	set inStopTime =date_add(inStartTime, INTERVAL inTransferDate_value*(1) day);
	set inStopTime =str_to_date(date_format(inStopTime,'%Y-%m-%d'), '%Y-%m-%d');
	select (case when inStopTime>inStopTime1 then inStopTime1 when inStopTime<=inStopTime1 then inStopTime   end) into inStopTime from dual;
    select   Count(1) into ResoureTotalCount 
    from cti_acd_event where event_timestamp<inStopTime1 and event_timestamp>= inStartTime;
   #========================如果获取的记录大于0，需要备份数据，则查找最早的StartTime时间================

      if ResoureTotalCount>0  then
         select count(1) into  TempTotalCount from cti_hist_acd_event where event_timestamp<inStopTime and event_timestamp>=inStartTime;
     #如果TEMP表中已经有数据，则删除备份表的就有数据
         if TempTotalCount>0 then
            Begin
               Delete from cti_hist_acd_event where event_timestamp<inStopTime and event_timestamp>=inStartTime;
               commit;
            End;
         end if;
     #开始备份数据到TEMP表中
   
        insert into cti_hist_acd_event (id, event_timestamp, action, agent_id, agent_session_uuid,
        agent_channel_uuid, agent_status, agent_state, queue, queue_count,member_uuid,
        member_channel_uuid, member_cid_name, member_cid_number,
        hangup_cause, cancel_cause, cti_call_uuid)

        select id, event_timestamp, action, agent_id, agent_session_uuid,
        agent_channel_uuid, agent_status, agent_state, queue, queue_count,
        member_uuid, member_channel_uuid, member_cid_name, member_cid_number,
        hangup_cause, cancel_cause, cti_call_uuid
        from cti_acd_event
        where event_timestamp<inStopTime and event_timestamp>=inStartTime  ;
        commit;
      #备份完毕要考虑是否备份成功，如果TEMP表中的记录总数与要备份的总数相等，为备份成功
        select count(1) into TempTotalCount from cti_hist_acd_event where event_timestamp<inStopTime and event_timestamp>=inStartTime;
        select Count(1) into ResoureTotalCount from cti_acd_event where event_timestamp<inStopTime and event_timestamp>=inStartTime;
     
        if TempTotalCount=ResoureTotalCount then    #删除原表中的数据
		
			Delete from cti_acd_event where event_timestamp<inStopTime and event_timestamp>=inStartTime;
			commit;
		End if;
           
       #更新表  MyComm_LastCountDate 中的数据
	     Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_ACD_EVENT';
      else
       Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_ACD_EVENT';
     end if;
	commit;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_trans_agent_action` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_trans_agent_action`()
begin

    declare inStartTime datetime ;           #开始时间
    declare inStopTime datetime  ;
    declare inStopTime1 datetime ;            #结束时间
    declare logLastTime datetime ;            #中间时间
    declare inSaveDate_value int;    #保留几天
    declare inTransferDate_value int; #转移几天的数据
    declare ResoureTotalCount int;    #判断是否转移数据
    declare TempTotalCount int;
    set sql_safe_updates = 0;  
    
    #获得执行的开始时间
     select tDate into inStartTime from report_lastcountdate where tYpe='CTI_AGENT_ACTION';
	#获得最小的时间
     select min(event_timestamp) into logLastTime  from  cti_agent_action;
	#首先计算出需要保留的天数和转移的天数；
     select TRANSFERDATE_NUMBER ,SAVEDATE_NUMBER into inTransferDate_value,inSaveDate_value  
     from report_value where type='CTI_AGENT_ACTION';
    # ========================获得时间判断是否需要转移表中的数据==========================================
    set  inStopTime =str_to_date(date_format(sysdate(),'%Y-%m-%d'), '%Y-%m-%d');
	set  inStopTime1 =date_add(inStopTime, INTERVAL inSaveDate_value*(-1) day);  #获得最大的转移时间
     #获得开始时间时间
	select (case when inStartTime>=logLastTime then inStartTime when inStartTime<logLastTime then logLastTime  end) into inStartTime from dual;
	
    #获得结束时间
	set  inStopTime =date_add(inStartTime, INTERVAL inTransferDate_value*(1) day);
	set  inStopTime =str_to_date(date_format(inStopTime,'%Y-%m-%d'), '%Y-%m-%d');
    select (case when inStopTime>inStopTime1 then inStopTime1 when inStopTime<=inStopTime1 then inStopTime   end) into inStopTime from dual;
    select   Count(1) into ResoureTotalCount 
    from cti_agent_action where event_timestamp<inStopTime1 and event_timestamp>= inStartTime;
   #========================如果获取的记录大于0，需要备份数据，则查找最早的StartTime时间================

      if ResoureTotalCount>0  then
         select count(1) into  TempTotalCount from cti_hist_agent_action where event_timestamp<inStopTime and event_timestamp>=inStartTime;
     #如果TEMP表中已经有数据，则删除备份表的就有数据
         if TempTotalCount>0 then
            Begin
               Delete from cti_hist_agent_action where event_timestamp<inStopTime and event_timestamp>=inStartTime;
               commit;
            End;
         end if;
     #开始备份数据到TEMP表中
   
		insert into cti_hist_agent_action (id, event_timestamp, agent_id, agent_session_id, cur_state_name,
        channel_uuid, other_leg_uuid,call_uuid, class, method, params)

        select id, event_timestamp, agent_id, agent_session_id, cur_state_name,
        channel_uuid, other_leg_uuid,call_uuid, class, method, params
        from cti_agent_action
        where event_timestamp<instoptime and event_timestamp>=instarttime  ;
        commit;
      #备份完毕要考虑是否备份成功，如果temp表中的记录总数与要备份的总数相等，为备份成功
        select count(1) into temptotalcount from cti_hist_agent_action where event_timestamp<instoptime and event_timestamp>=instarttime;
        select count(1) into resouretotalcount from cti_agent_action where event_timestamp<instoptime and event_timestamp>=instarttime;
        if TempTotalCount=ResoureTotalCount then    #删除原表中的数据
		
			Delete from cti_agent_action where event_timestamp<instoptime and event_timestamp>=instarttime  ;
             
                commit;
		End if;
           
       #更新表  MyComm_LastCountDate 中的数据
	     Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_AGENT_ACTION';
	 else
          Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_AGENT_ACTION';
     end if;
	commit;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_trans_agent_session` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_trans_agent_session`()
begin

    declare inStartTime datetime ;           #开始时间
    declare inStopTime datetime  ;
    declare inStopTime1 datetime ;            #结束时间
    declare logLastTime datetime ;            #中间时间
    declare inSaveDate_value int;    #保留几天
    declare inTransferDate_value int; #转移几天的数据
    declare ResoureTotalCount int;    #判断是否转移数据
    declare TempTotalCount int;
    set sql_safe_updates = 0;  
    
    #获得执行的开始时间
     select tDate into inStartTime from report_lastcountdate where tYpe='CTI_AGENT_SESSION';
	#获得最小的时间
     select min(login_timestamp) into logLastTime  from  cti_agent_session;
	#首先计算出需要保留的天数和转移的天数；
     select TRANSFERDATE_NUMBER ,SAVEDATE_NUMBER into inTransferDate_value,inSaveDate_value  
     from report_value where type='CTI_AGENT_SESSION';
    # ========================获得时间判断是否需要转移表中的数据==========================================
	set  inStopTime =str_to_date(date_format(sysdate(),'%Y-%m-%d'), '%Y-%m-%d');
	set  inStopTime1 =date_add(inStopTime, INTERVAL inSaveDate_value*(-1) day);  #获得最大的转移时间
    #获得开始时间时间
	select (case when inStartTime>=logLastTime then inStartTime when inStartTime<logLastTime then logLastTime  end) into inStartTime from dual;
	#获得结束时间
	set  inStopTime =date_add(inStartTime, INTERVAL inTransferDate_value*(1) day);
	set  inStopTime =str_to_date(date_format(inStopTime,'%Y-%m-%d'), '%Y-%m-%d');
	select (case when inStopTime>inStopTime1 then inStopTime1 when inStopTime<=inStopTime1 then inStopTime   end) into inStopTime from dual;
    select   Count(1) into ResoureTotalCount 
    from cti_agent_session where login_timestamp<inStopTime1 and login_timestamp>= inStartTime;
   #========================如果获取的记录大于0，需要备份数据，则查找最早的StartTime时间================

      if ResoureTotalCount>0  then
		select count(1) into  TempTotalCount from cti_hist_agent_session where login_timestamp<inStopTime and login_timestamp>=inStartTime;
     #如果TEMP表中已经有数据，则删除备份表的就有数据
         if TempTotalCount>0 then
            Begin
               Delete from cti_hist_agent_session where login_timestamp<inStopTime and login_timestamp>=inStartTime;
               commit;
            End;
         end if;
     #开始备份数据到TEMP表中
		insert into cti_hist_agent_session (id, agent_id, agent_session_id, agent_name, org_id, agent_ext, agent_contact, work_id, is_leader,
        login_timestamp, logout_timestamp, logout_state, login_timestamp_30m)

        select id, agent_id, agent_session_id, agent_name, org_id, agent_ext, agent_contact, work_id, is_leader,
        login_timestamp, logout_timestamp, logout_state, login_timestamp_30m
        from cti_agent_session
        where login_timestamp<instoptime and login_timestamp>=instarttime  ;
        commit;
      #备份完毕要考虑是否备份成功，如果temp表中的记录总数与要备份的总数相等，为备份成功
        select count(1) into temptotalcount from cti_hist_agent_session where login_timestamp<instoptime and login_timestamp>=instarttime;
        select count(1) into resouretotalcount from cti_agent_session where login_timestamp<instoptime and login_timestamp>=instarttime;
        if TempTotalCount=ResoureTotalCount then    #删除原表中的数据
		
			Delete from cti_agent_session where login_timestamp<instoptime and login_timestamp>=instarttime  ;
             
                commit;
		End if;
           
       #更新表  MyComm_LastCountDate 中的数据
	    Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_AGENT_SESSION';
	else
         Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_AGENT_SESSION';
     end if;
	commit;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_trans_agent_state` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_trans_agent_state`()
begin

    declare inStartTime datetime ;           #开始时间
    declare inStopTime datetime  ;
    declare inStopTime1 datetime ;            #结束时间
    declare logLastTime datetime ;            #中间时间
    declare inSaveDate_value int;    #保留几天
    declare inTransferDate_value int; #转移几天的数据
    declare ResoureTotalCount int;    #判断是否转移数据
    declare TempTotalCount int;
    set sql_safe_updates = 0;  
    
    #获得执行的开始时间
     select tDate into inStartTime from report_lastcountdate where tYpe='CTI_AGENT_STATE';
	#获得最小的时间
     select min(entry_timestamp) into logLastTime  from  cti_agent_state;
	#首先计算出需要保留的天数和转移的天数；
     select TRANSFERDATE_NUMBER ,SAVEDATE_NUMBER into inTransferDate_value,inSaveDate_value  
     from report_value where type='CTI_AGENT_STATE';
    # ========================获得时间判断是否需要转移表中的数据==========================================
	set  inStopTime =str_to_date(date_format(sysdate(),'%Y-%m-%d'), '%Y-%m-%d');
	set  inStopTime1 =date_add(inStopTime, INTERVAL inSaveDate_value*(-1) day);  #获得最大的转移时间
	#获得开始时间时间
    select (case when inStartTime>=logLastTime then inStartTime when inStartTime<logLastTime then logLastTime  end) into inStartTime from dual;
	#获得结束时间
	set  inStopTime =date_add(inStartTime, INTERVAL inTransferDate_value*(1) day);
	set  inStopTime =str_to_date(date_format(inStopTime,'%Y-%m-%d'), '%Y-%m-%d');
	select (case when inStopTime>inStopTime1 then inStopTime1 when inStopTime<=inStopTime1 then inStopTime   end) into inStopTime from dual;
    select   Count(1) into ResoureTotalCount 
    from cti_agent_state where entry_timestamp<inStopTime1 and entry_timestamp>= inStartTime;
   #========================如果获取的记录大于0，需要备份数据，则查找最早的StartTime时间================

      if ResoureTotalCount>0  then
         select count(1) into  TempTotalCount from cti_hist_agent_state where entry_timestamp<inStopTime and entry_timestamp>=inStartTime;
         #如果TEMP表中已经有数据，则删除备份表的就有数据
         if TempTotalCount>0 then
            Begin
               Delete from cti_hist_agent_state where entry_timestamp<inStopTime and entry_timestamp>=inStartTime;
               commit;
            End;
         end if;
     #开始备份数据到TEMP表中
	    insert into cti_hist_agent_state (id, entry_timestamp, agent_id, agent_session_id, new_state_name, channel_uuid, other_leg_uuid,
        sub_id, old_state_name, duration, call_uuid, exit_timestamp, pre_rec_id)

        select id, entry_timestamp, agent_id, agent_session_id, new_state_name, channel_uuid, other_leg_uuid,
        sub_id, old_state_name, duration, call_uuid, exit_timestamp, pre_rec_id
        from cti_agent_state
        where entry_timestamp<instoptime and entry_timestamp>=instarttime  ;
        commit;
      #备份完毕要考虑是否备份成功，如果temp表中的记录总数与要备份的总数相等，为备份成功
        select count(1) into temptotalcount from cti_hist_agent_state where entry_timestamp<instoptime and entry_timestamp>=instarttime;
        select count(1) into resouretotalcount from cti_agent_state where entry_timestamp<instoptime and entry_timestamp>=instarttime;
      
      if TempTotalCount=ResoureTotalCount then    #删除原表中的数据
		
			Delete from cti_agent_state where entry_timestamp<instoptime and entry_timestamp>=instarttime  ;
                commit;
		End if;
           
       #更新表  MyComm_LastCountDate 中的数据
	    Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_AGENT_STATE';
      else
        Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_AGENT_STATE';
     end if;
	commit;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_trans_channel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_trans_channel`()
begin

    declare inStartTime datetime ;           #开始时间
    declare inStopTime datetime  ;
    declare inStopTime1 datetime ;            #结束时间
    declare logLastTime datetime ;            #中间时间
    declare inSaveDate_value int;    #保留几天
    declare inTransferDate_value int; #转移几天的数据
    declare ResoureTotalCount int;    #判断是否转移数据
    declare TempTotalCount int;
    set sql_safe_updates = 0;  
    
    #获得执行的开始时间
     select tDate into inStartTime from report_lastcountdate where tYpe='CTI_CHANNEL';
	#获得最小的时间
     select min(event_timestamp) into logLastTime  from  cti_channel;
	#首先计算出需要保留的天数和转移的天数；
     select TRANSFERDATE_NUMBER ,SAVEDATE_NUMBER into inTransferDate_value,inSaveDate_value  
     from report_value where type='CTI_CHANNEL';
    # ========================获得时间判断是否需要转移表中的数据==========================================
    set  inStopTime =str_to_date(date_format(sysdate(),'%Y-%m-%d'), '%Y-%m-%d');
	set  inStopTime1 =date_add(inStopTime, INTERVAL inSaveDate_value*(-1) day);  #获得最大的转移时间
	 #获得开始时间时间
	select (case when inStartTime>=logLastTime then inStartTime when inStartTime<logLastTime then logLastTime  end) into inStartTime from dual;
    #获得结束时间
	set  inStopTime =date_add(inStartTime, INTERVAL inTransferDate_value*(1) day);
	set  inStopTime =str_to_date(date_format(inStopTime,'%Y-%m-%d'), '%Y-%m-%d');
	select (case when inStopTime>inStopTime1 then inStopTime1 when inStopTime<=inStopTime1 then inStopTime   end) into inStopTime from dual;
    select   Count(1) into ResoureTotalCount 
    from cti_channel where event_timestamp<inStopTime1 and event_timestamp>= inStartTime;
   #========================如果获取的记录大于0，需要备份数据，则查找最早的StartTime时间================

      if ResoureTotalCount>0  then
         select count(1) into  TempTotalCount from cti_hist_channel where event_timestamp<inStopTime and event_timestamp>=inStartTime;
     #如果TEMP表中已经有数据，则删除备份表的就有数据
         if TempTotalCount>0 then
            Begin
               Delete from cti_hist_channel where event_timestamp<inStopTime and event_timestamp>=inStartTime;
               commit;
            End;
         end if;
     #开始备份数据到TEMP表中
	   insert into cti_hist_channel (
        id, event_timestamp, switch_host_name, switch_ipv4, switch_name, channel_name,
        channel_uuid, call_direction, cti_call_direction, cti_cc_direction, cti_channel_type,
        hit_dialplan, call_uuid, cti_call_uuid, hangup_cause, caller_number, orig_caller_number,
        callee_number, orig_callee_number, caller_network_addr, ani, destination_number, context,
        gateway_name, domain_name, first_answered_by, created_time, answered_time, hangup_time,
        transfer_time, bridged_time, hold_accum, is_originator, other_leg_uuid, account_code,
        hangup_disposition, digits_dialed, duration, billsec, progresssec, answersec, waitsec,
        cti_queue_accum, cti_bridge_accum, cti_bridge_agent_accum
        )
        select
        id, event_timestamp, switch_host_name, switch_ipv4, switch_name, channel_name,
        channel_uuid, call_direction, cti_call_direction, cti_cc_direction, cti_channel_type,
        hit_dialplan, call_uuid, cti_call_uuid, hangup_cause, caller_number, orig_caller_number,
        callee_number, orig_callee_number, caller_network_addr, ani, destination_number, context,
        gateway_name, domain_name, first_answered_by, created_time, answered_time, hangup_time,
        transfer_time, bridged_time, hold_accum, is_originator, other_leg_uuid, account_code,
        hangup_disposition, digits_dialed, duration, billsec, progresssec, answersec, waitsec,
        cti_queue_accum, cti_bridge_accum, cti_bridge_agent_accum

        from cti_channel
        where event_timestamp<inStopTime and event_timestamp>=inStartTime  ;
        commit;
        #备份完毕要考虑是否备份成功，如果TEMP表中的记录总数与要备份的总数相等，为备份成功
        select count(1) into TempTotalCount from cti_hist_channel where event_timestamp<inStopTime and event_timestamp>=inStartTime;
        select Count(1) into ResoureTotalCount from cti_channel where event_timestamp<inStopTime and event_timestamp>=inStartTime;
      
      if TempTotalCount=ResoureTotalCount then    #删除原表中的数据
		
			Delete from cti_channel where event_timestamp<instoptime and event_timestamp>=instarttime  ;
             
                commit;
		End if;
           
       #更新表  MyComm_LastCountDate 中的数据
	   Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_CHANNEL';
	else 
       Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_CHANNEL';
     end if;
	commit;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_trans_channel_event` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_trans_channel_event`()
begin

    declare inStartTime datetime ;           #开始时间
    declare inStopTime datetime  ;
    declare inStopTime1 datetime ;            #结束时间
    declare logLastTime datetime ;            #中间时间
    declare inSaveDate_value int;    #保留几天
    declare inTransferDate_value int; #转移几天的数据
    declare ResoureTotalCount int;    #判断是否转移数据
    declare TempTotalCount int;
    set sql_safe_updates = 0;  
    
    #获得执行的开始时间
     select tDate into inStartTime from report_lastcountdate where tYpe='CTI_CHANNEL_EVENT';
	#获得最小的时间
     select min(event_timestamp) into logLastTime  from  cti_channel_event;
	#首先计算出需要保留的天数和转移的天数；
     select TRANSFERDATE_NUMBER ,SAVEDATE_NUMBER into inTransferDate_value,inSaveDate_value  
     from report_value where type='CTI_CHANNEL_EVENT';
    # ========================获得时间判断是否需要转移表中的数据==========================================
    set  inStopTime =str_to_date(date_format(sysdate(),'%Y-%m-%d'), '%Y-%m-%d');
	set  inStopTime1 =date_add(inStopTime, INTERVAL inSaveDate_value*(-1) day);  #获得最大的转移时间
	#获得开始时间时间
	select (case when inStartTime>=logLastTime then inStartTime when inStartTime<logLastTime then logLastTime  end) into inStartTime from dual;
	#获得结束时间
	set  inStopTime =date_add(inStartTime, INTERVAL inTransferDate_value*(1) day);
	set  inStopTime =str_to_date(date_format(inStopTime,'%Y-%m-%d'), '%Y-%m-%d');
	select (case when inStopTime>inStopTime1 then inStopTime1 when inStopTime<=inStopTime1 then inStopTime   end) into inStopTime from dual;
    select   Count(1) into ResoureTotalCount 
    from cti_channel_event where event_timestamp<inStopTime1 and event_timestamp>= inStartTime;
   #========================如果获取的记录大于0，需要备份数据，则查找最早的StartTime时间================

      if ResoureTotalCount>0  then
         select count(1) into  TempTotalCount 
         from cti_hist_channel_event where event_timestamp<inStopTime and event_timestamp>=inStartTime;
     #如果TEMP表中已经有数据，则删除备份表的就有数据
         if TempTotalCount>0 then
            Begin
               Delete from cti_hist_channel_event
               where event_timestamp<inStopTime and event_timestamp>=inStartTime;
               commit;
            End;
         end if;
     #开始备份数据到TEMP表中
	   insert into cti_hist_channel_event (id,event_timestamp,event_name,channel_name,channel_uuid,
					channel_state,channel_state_id,call_state,direction,call_uuid,
					cti_call_uuid,caller_username,caller_id_number,orig_caller_id_number,callee_id_name,
					callee_id_number,ani,destination_number,context,hangup_cause,
					other_type,other_leg_uuid,domain_name)

        select id,event_timestamp,event_name,channel_name,channel_uuid,
					channel_state,channel_state_id,call_state,direction,call_uuid,
					cti_call_uuid,caller_username,caller_id_number,orig_caller_id_number,callee_id_name,
					callee_id_number,ani,destination_number,context,hangup_cause,
					other_type,other_leg_uuid,domain_name
        from cti_channel_event
        where event_timestamp<instoptime and event_timestamp>=instarttime  ;
        commit;
      #备份完毕要考虑是否备份成功，如果temp表中的记录总数与要备份的总数相等，为备份成功
        select count(1) into temptotalcount from cti_hist_channel_event where event_timestamp<instoptime and event_timestamp>=instarttime;
        select count(1) into resouretotalcount from cti_channel_event where event_timestamp<instoptime and event_timestamp>=instarttime;
        
      if TempTotalCount=ResoureTotalCount then    #删除原表中的数据
			Delete from cti_channel_event where event_timestamp<instoptime and event_timestamp>=instarttime  ;
                commit;
		End if;
           
       #更新表  MyComm_LastCountDate 中的数据
		Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_CHANNEL_EVENT';
	else
        Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_CHANNEL_EVENT';
     end if;
	commit;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_trans_channel_execute` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_trans_channel_execute`()
begin

    declare inStartTime datetime ;           #开始时间
    declare inStopTime datetime  ;
    declare inStopTime1 datetime ;            #结束时间
    declare logLastTime datetime ;            #中间时间
    declare inSaveDate_value int;    #保留几天
    declare inTransferDate_value int; #转移几天的数据
    declare ResoureTotalCount int;    #判断是否转移数据
    declare TempTotalCount int;
    set sql_safe_updates = 0;  
    
    #获得执行的开始时间
     select tDate into inStartTime from report_lastcountdate where tYpe='CTI_CHANNEL_EXECUTE';
	#获得最小的时间
     select min(start_time) into logLastTime  from  cti_channel_execute;
	#首先计算出需要保留的天数和转移的天数；
     select TRANSFERDATE_NUMBER ,SAVEDATE_NUMBER into inTransferDate_value,inSaveDate_value  
     from report_value where type='CTI_CHANNEL_EXECUTE';
    # ========================获得时间判断是否需要转移表中的数据==========================================
    set  inStopTime =str_to_date(date_format(sysdate(),'%Y-%m-%d'), '%Y-%m-%d');
	set  inStopTime1 =date_add(inStopTime, INTERVAL inSaveDate_value*(-1) day);  #获得最大的转移时间
	#获得开始时间时间
	select (case when inStartTime>=logLastTime then inStartTime when inStartTime<logLastTime then logLastTime  end) into inStartTime from dual;
	 #获得结束时间
	set  inStopTime =date_add(inStartTime, INTERVAL inTransferDate_value*(1) day);
	set  inStopTime =str_to_date(date_format(inStopTime,'%Y-%m-%d'), '%Y-%m-%d');
	select (case when inStopTime>inStopTime1 then inStopTime1 when inStopTime<=inStopTime1 then inStopTime   end) into inStopTime from dual;
    select   Count(1) into ResoureTotalCount 
    from cti_channel_execute where start_time<inStopTime1 and start_time>= inStartTime;

   #========================如果获取的记录大于0，需要备份数据，则查找最早的StartTime时间================

      if ResoureTotalCount>0  then
         select count(1) into  TempTotalCount 
         from cti_hist_channel_execute where start_time<inStopTime and start_time>=inStartTime;
     #如果TEMP表中已经有数据，则删除备份表的就有数据
         if TempTotalCount>0 then
            Begin
               Delete from cti_hist_channel_execute 
               where start_time<inStopTime and start_time>=inStartTime;
               commit;
            End;
         end if;
     #开始备份数据到TEMP表中
	   insert into cti_hist_channel_execute (id, channel_uuid, application, application_data, application_response, start_time, complete_time, application_uuid,
        call_uuid, cti_call_uuid)

        select id, channel_uuid, application, application_data, application_response, start_time, complete_time, application_uuid,
        call_uuid, cti_call_uuid
        from cti_channel_execute
        where start_time<instoptime and start_time>=instarttime  ;
        commit;
      #备份完毕要考虑是否备份成功，如果temp表中的记录总数与要备份的总数相等，为备份成功
        select count(1) into temptotalcount from cti_hist_channel_execute where start_time<instoptime and start_time>=instarttime;
        select count(1) into resouretotalcount from cti_channel_execute where start_time<instoptime and start_time>=instarttime;
        
      if TempTotalCount=ResoureTotalCount then    #删除原表中的数据
			Delete from cti_channel_execute where start_time<instoptime and start_time>=instarttime  ;
			commit;
		End if;
           
       #更新表  MyComm_LastCountDate 中的数据
		Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_CHANNEL_EXECUTE';
 	else 
       Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_CHANNEL_EXECUTE';
     end if;
	commit;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_trans_record_files` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_trans_record_files`()
begin

    declare inStartTime datetime ;           #开始时间
    declare inStopTime datetime  ;
    declare inStopTime1 datetime ;            #结束时间
    declare logLastTime datetime ;            #中间时间
    declare inSaveDate_value int;    #保留几天
    declare inTransferDate_value int; #转移几天的数据
    declare ResoureTotalCount int;    #判断是否转移数据
    declare TempTotalCount int;
    set sql_safe_updates = 0;  
    
    #获得执行的开始时间
     select tDate into inStartTime from report_lastcountdate where tYpe='CTI_RECORD_FILES';
	#获得最小的时间
     select min(start_time) into logLastTime  from  cti_record_files;
	#首先计算出需要保留的天数和转移的天数；
     select TRANSFERDATE_NUMBER ,SAVEDATE_NUMBER into inTransferDate_value,inSaveDate_value  
     from report_value where type='CTI_RECORD_FILES';
    # ========================获得时间判断是否需要转移表中的数据==========================================
    set  inStopTime =str_to_date(date_format(sysdate(),'%Y-%m-%d'), '%Y-%m-%d');
	set  inStopTime1 =date_add(inStopTime, INTERVAL inSaveDate_value*(-1) day);  #获得最大的转移时间
	 #获得开始时间时间
	select (case when inStartTime>=logLastTime then inStartTime when inStartTime<logLastTime then logLastTime  end) into logLastTime from dual;
     #获得结束时间
	set  inStopTime =date_add(inStartTime, INTERVAL inTransferDate_value*(1) day);
	set  inStopTime =str_to_date(date_format(inStopTime,'%Y-%m-%d'), '%Y-%m-%d');
	select (case when inStopTime>inStopTime1 then inStopTime1 when inStopTime<=inStopTime1 then inStopTime   end) into inStopTime from dual;
     #判断  备份表中在此时间段是否有数据
    select   Count(1) into ResoureTotalCount 
    from cti_record_files where start_time<inStopTime1 and start_time>= inStartTime;
   #========================如果获取的记录大于0，需要备份数据，则查找最早的StartTime时间================

      if ResoureTotalCount>0  then
         select count(1) into  TempTotalCount 
         from cti_hist_record_files where start_time<inStopTime and start_time>=inStartTime;
     #如果TEMP表中已经有数据，则删除备份表的就有数据
         if TempTotalCount>0 then
            Begin
               Delete from cti_hist_record_files 
               where start_time<inStopTime and start_time>=inStartTime;
               commit;
            End;
         end if;
     #开始备份数据到TEMP表中
	     insert into cti_hist_record_files (ID,CHANNEL_UUID,CTI_CALL_DIRECTION,CALL_UUID,CTI_CALL_UUID,
		CALLER_NUMBER,CALLEE_NUMBER,RECORD_STEREO,READ_CODEC,READ_RATE,
		WRITE_CODEC,WRITE_RATE,RECORD_FILE_NAME,START_TIME,STOP_TIME,CC_QUEUE,
		AGENT_ID,AGENT_SESSION_ID,CTI_RECORD_TYPE,ORG_ID,VM_NUMBER,URL_PREFIX)

        select ID,CHANNEL_UUID,CTI_CALL_DIRECTION,CALL_UUID,CTI_CALL_UUID,
		CALLER_NUMBER,CALLEE_NUMBER,RECORD_STEREO,READ_CODEC,READ_RATE,
		WRITE_CODEC,WRITE_RATE,RECORD_FILE_NAME,START_TIME,STOP_TIME,CC_QUEUE,
		AGENT_ID,AGENT_SESSION_ID,CTI_RECORD_TYPE,ORG_ID,VM_NUMBER,URL_PREFIX
        from cti_record_files
        where start_time<instoptime and start_time>=instarttime  ;
        commit;
      #备份完毕要考虑是否备份成功，如果temp表中的记录总数与要备份的总数相等，为备份成功
        select count(1) into temptotalcount from cti_hist_record_files where start_time<instoptime and start_time>=instarttime;
        select count(1) into resouretotalcount from cti_record_files where start_time<instoptime and start_time>=instarttime;
        
      if TempTotalCount=ResoureTotalCount then    #删除原表中的数据
		
			Delete from cti_record_files where start_time<instoptime and start_time>=instarttime  ;
             
                commit;
		End if;
           
       #更新表  MyComm_LastCountDate 中的数据
		Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_RECORD_FILES';
      else
		Update report_lastcountdate set tDate=inStopTime where  tYpe='CTI_RECORD_FILES';
     end if;
	commit;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_vm` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_vm`( 
                starttime varchar(40),
                stoptime varchar(40),
                direction varchar(40),
                origcaller varchar(40),
                origcallee varchar(40),
                caller varchar(40),
                callee varchar(40),
                uuid varchar(40),
                channel_uuid varchar(40),
                duration varchar(40),
                starth varchar(40),
                startm varchar(40),
                starts varchar(40),
                stoph varchar(40),
                stopm varchar(40),
                stops varchar(1),
                vm varchar(40)
                
       
)
begin

  declare sql1 nvarchar(2500);

    set @starttime=starttime;
    set @stoptime=stoptime;
    set @direction=direction;
    set @origcaller=origcaller;
    set @origcallee=origcallee;
    set @caller=caller;
    set @callee=callee;
    set @uuid=uuid;
    set @channel_uuid=channel_uuid;
    set @duration=duration;
    set @starth=starth;
               
    set @startm=startm;
    set @starts=starts;
    set @stoph =stoph;
    set @stopm =stopm;
    set @stops =stops;
    set vm='vm';
    set @vm =vm;
    
     set sql1=concat('select c.orig_caller_number,c.orig_callee_number,a.caller_number,a.callee_number,'
       ,' a.start_time,a.stop_time,a.cti_call_direction,'
       ,' w.cti_call_direction_chinese as cti_call_direction1,a.cti_call_uuid,a.channel_uuid, '
       ,' timestampdiff(second,a.start_time,a.stop_time) as duration, '
       ,'  report_number_to_time(timestampdiff(second,a.start_time,a.stop_time)) as rduration1 '
       ,' from   v_report_cdr c, v_report_cti_record_files a '
       
       , 'left join report_cti_call_direction w on a.cti_call_direction=w.cti_call_direction '
       ,' where a.call_uuid=c.cti_call_uuid   and a.cti_record_type=''vm''');
      if @starth+@startm+@starts >0 then
    set sql1=concat(sql1,' and timestampdiff(second,a.start_time,a.stop_time) >=ltrim(@starth*3600+@startm*60+@starts)');
     end if; 
     if @stoph+@stopm+@stops >0 then
    set sql1=concat(sql1,' and timestampdiff(second,a.start_time,a.stop_time) <=ltrim(@stoph*3600+@stopm*60+@stops)');
     end if;   
     
   if @direction is not null and @direction<>'' then
     set sql1=concat(sql1,' and a.cti_call_direction=@direction');
     end if;
     
    if @origcaller is not null and @origcaller<>'' then
     set sql1=concat(sql1,' and c.orig_caller_number=@origcaller');
     end if;
     
    if @origcallee is not null and @origcallee<>'' then
     set sql1=concat(sql1,' and c.orig_callee_number=@origcallee');
  end if;
     
    if @caller is not null and @caller<>'' then
     set sql1=concat(sql1,' and a.caller_number=@caller ');
    end if;
    
    if @callee is not null and @callee<>'' then
     set sql1=concat(sql1,' and a.callee_number=@callee ');
    end if;
    
    if @uuid is not null and @uuid<>'' then
     set sql1=concat(sql1,' and a.cti_call_uuid=@uuid '); 
  end if;
     
    
    if @channel_uuid is not null and @channel_uuid<>'' then
     set sql1=concat(sql1,' and a.channel_uuid=@channel_uuid ');
  end if;

     if @starttime is not null and @starttime<>'' then
    set sql1=concat(sql1,' and date_format(a.start_time,''%Y-%m-%d'')>=@starttime');
     end if; 
     
     
     if @stoptime is not null and @stoptime<>'' then
     set sql1=concat(sql1,' and  date_format(a.start_time,''%Y-%m-%d'')<=@stoptime');
     end if; 
     


    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;
    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_weixin_agent` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_weixin_agent`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                org_id varchar(40),
                org_name varchar(40),
                agent_name varchar(40),
                agent_id varchar(40)
)
begin
  declare sql1 nvarchar(2500);
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @org_id=org_id;
    set @org_name=org_name;
    set @agent_name=agent_name;
    set @agent_id=agent_id;

        set sql1=concat('select tjdate1,org_id,org_name,agent_id '
          ,', send_count,recv_count,do_count '
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
 
  if @times='周' then
       set sql1=concat(sql1,' case  when( week(dat1.tjdate)<10) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',week(dat1.tjdate))   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',week(dat1.tjdate))  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;

         if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,org_id,org_name,agent_id,sum(send_count) as send_count '
            ,' ,sum(recv_count) as recv_count,sum(do_count) as do_count '
          ,' from(select');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d '')');
         end if;
  
        if @times='周' then
       set sql1=concat(sql1,' case  '
        ,' when( week(tjdate)<10) '
        ,' then '
    ,'  concat(date_format(tjdate,''%Y''),''-0'',week(tjdate))   '
    ,'else '
        ,' concat(date_format(tjdate,''%Y''),''-'',week(tjdate)) end ');
         end if;
  
     if @times='月' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m '')');
         end if;
  
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(tjdate,''%Y''),''-'',quarter(tjdate))');      
         end if;
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y'')');
         end if;  
          
     set sql1=concat(sql1,' as d1,a.org_id,a.org_name,a.agent_id,a.send_count,a.recv_count,a.do_count  '
                       ' from report_weixin_agent  a
                           
                              where 1=1');  
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
          
      if @org_id is not null and @org_id<>'' then
      set sql1=concat(sql1,' and  org_id=@org_id');
      end if; 
          
      if @org_name is not null and @org_name<>'' then
      set sql1=concat(sql1,' and  org_name=@org_name');
      end if; 
          

      if @agent_name is not null and @agent_name<>'' then
      set sql1=concat(sql1,' and  agent_id=@agent_id');
      end if; 
          
          
          set sql1=concat(sql1,' )  cdr1 '
        ,' group by d1,org_id,agent_id '
            ,' )  cdr'
            ,' on tjdate1=cdr.d1' );
            
    
       set sql1=concat(sql1,' order by tjdate1  ');


    set @exesql =sql1; 

  
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_weixin_agent_back` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_weixin_agent_back`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                org_id varchar(40),
                org_name varchar(40),
                agent_name varchar(40),
                agent_id varchar(40)
)
begin
  declare sql1 nvarchar(2500);
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @org_id=org_id;
    set @org_name=org_name;
    set @agent_name=agent_name;
    set @agent_id=agent_id;

        set sql1=concat('select tjdate1,org_id,org_name,agent_id,agent_name '
          ,', send_count,recv_count,do_count '
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
 
if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;

         if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,org_id,org_name,agent_id,agent_name,sum(send_count) as send_count '
            ,' ,sum(recv_count) as recv_count,sum(do_count) as do_count '
          ,' from(select');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d '')');
         end if;
  
    if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(tjdate,''%Y''),''-0'',cast(week(tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(tjdate,''%Y''),''-'',cast(week(tjdate) as SIGNED)+1)  end ');
         end if;
  
     if @times='月' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m '')');
         end if;
  
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(tjdate,''%Y''),''-'',quarter(tjdate))');      
         end if;
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y'')');
         end if;  
          
     set sql1=concat(sql1,' as d1,org_id,org_name,agent_id,send_count,recv_count,do_count,agent_name '
                       ' from report_weixin_agent  c where 1=1');  
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
          
      if @org_id is not null and @org_id<>'' then
      set sql1=concat(sql1,' and  org_id=@org_id');
      end if; 
          
      if @org_name is not null and @org_name<>'' then
      set sql1=concat(sql1,' and  org_name=@org_name');
      end if; 
          
      if @agent_id is not null and @agent_id<>'' then
      set sql1=concat(sql1,' and  agent_id=@agent_id');
      end if; 
          
      if @agent_name is not null and @agent_name<>'' then
      set sql1=concat(sql1,' and  agent_name=@agent_name');
      end if; 
          
          
          set sql1=concat(sql1,' )  cdr1 '
        ,' group by d1,org_id,agent_id '
            ,' )  cdr'
            ,' on tjdate1=cdr.d1' );
            
         

       set sql1=concat(sql1,' order by tjdate1  ');


    set @exesql =sql1; 

    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_weixin_agent_back1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_weixin_agent_back1`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                org_id varchar(40),
                org_name varchar(40),
                agent_name varchar(40),
                agent_id varchar(40)
)
begin
  declare sql1 nvarchar(2500);
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @org_id=org_id;
    set @org_name=org_name;
    set @agent_name=agent_name;
    set @agent_id=agent_id;

        set sql1=concat('select tjdate1,org_id,org_name,agent_id '
          ,', send_count,recv_count,do_count '
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
 
if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;

         if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,org_id,org_name,agent_id,sum(send_count) as send_count '
            ,' ,sum(recv_count) as recv_count,sum(do_count) as do_count '
          ,' from(select');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d '')');
         end if;
  
    if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(tjdate,''%Y''),''-0'',cast(week(tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(tjdate,''%Y''),''-'',cast(week(tjdate) as SIGNED)+1)  end ');
         end if;
  
     if @times='月' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m '')');
         end if;
  
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(tjdate,''%Y''),''-'',quarter(tjdate))');      
         end if;
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y'')');
         end if;  
          
     set sql1=concat(sql1,' as d1,org_id,org_name,agent_id,send_count,recv_count,do_count '
                       ' from report_weixin_agent  c where 1=1');  
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
          
      if @org_id is not null and @org_id<>'' then
      set sql1=concat(sql1,' and  org_id=@org_id');
      end if; 
          
      if @org_name is not null and @org_name<>'' then
      set sql1=concat(sql1,' and  org_name=@org_name');
      end if; 
          
      if @agent_id is not null and @agent_id<>'' then
      set sql1=concat(sql1,' and  agent_id=@agent_id');
      end if; 
          
    
          
          
          set sql1=concat(sql1,' )  cdr1 '
        ,' group by d1,org_id,agent_id '
            ,' )  cdr'
            ,' on tjdate1=cdr.d1' );
            
         

       set sql1=concat(sql1,' order by tjdate1  ');


    set @exesql =sql1; 

    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_weixin_company` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_weixin_company`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                org_id varchar(40),
                org_name varchar(40),
                weixin_type varchar(40),
                service_id varchar(40)
)
begin
  declare sql1 nvarchar(2500);
    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @org_id=org_id;
    set @org_name=org_name;
    set @weixin_type=weixin_type;
    set @service_id=service_id;

        set sql1=concat('select tjdate1,org_id,org_name,weixin_type,service_id'
          ,', send_count,recv_count,do_count,total_count '
          ,' from(select distinct ');
    
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;
 
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;

         if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;

     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
        
       set sql1=concat(sql1, ' as tjdate1 from report_date  dat1 where 1=1');

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
    
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
    
          set sql1=concat(sql1,' )  d left join ('
          ,' select d1,org_id,org_name,weixin_type,service_id,sum(send_count) as send_count '
            ,' ,sum(recv_count) as recv_count,sum(do_count) as do_count'
            ,' ,(sum(recv_count)+sum(send_count)) as total_count '
          ,' from(select');
          
            
            
     if @times='半小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m-%d '')');
         end if;
  
     if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(tjdate,''%Y''),''-0'',cast(week(tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(tjdate,''%Y''),''-'',cast(week(tjdate) as SIGNED)+1)  end ');
         end if;
  
     if @times='月' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y-%m '')');
         end if;
  
      
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(tjdate,''%Y''),''-'',quarter(tjdate))');      
         end if;
  
     if @times='年' then
     set sql1=concat(sql1,' date_format(tjdate,''%Y'')');
         end if;  
          
     set sql1=concat(sql1,' as d1,org_id,org_name,service_id,send_count,recv_count,do_count,weixin_type '
                       ' from report_weixin_company  c where 1=1');  
     
         
         if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 
     
      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
          
      if @org_id is not null and @org_id<>'' then
      set sql1=concat(sql1,' and  org_id=@org_id');
      end if; 
          
      if @org_name is not null and @org_name<>'' then
      set sql1=concat(sql1,' and  org_name=@org_name');
      end if; 
          
      if @weixin_type is not null and @weixin_type<>'' then
      set sql1=concat(sql1,' and  weixin_type=@weixin_type');
      end if; 
          
      if @service_id is not null and @service_id<>'' then
      set sql1=concat(sql1,' and  service_id=@service_id');
      end if; 
          
          set sql1=concat(sql1,' )  cdr1 '
        ,' group by d1,org_id,service_id,weixin_type '
            ,' )  cdr'
            ,' on tjdate1=cdr.d1' );
            
         

       set sql1=concat(sql1,' order by tjdate1  ');


    set @exesql =sql1; 

  
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_winxi_detail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_winxi_detail`(
                starttime varchar(40),
                stoptime varchar(40),
                org_id   varchar(40),
                org_name varchar(40),
                from_id varchar(40),
          to_id   varchar(40),
                service_id         varchar(40),
                weixin_type        varchar(40),
                message_type        varchar(40)
                
)
begin
  declare sql1 nvarchar(4000);
    set @starttime=starttime;
    set @stoptime=stoptime;
    set @org_id = org_id;
    set @org_name=org_name;
    set @from_id=from_id;
    set @to_id=to_id;
    set @service_id=service_id;
    set @weixin_type=weixin_type;
  set @message_type=message_type;


         set sql1=concat('select * from ( ');
         set sql1=concat(sql1,' select wx_direction,creator,tw.orgid,tw.orgname,vr.to_id as service_id,tw.type,vr.timestamp,agent_id,' 
          ,' case wx_direction when ''接收'' then from_id  when ''发送'' then to_id end as from_id1,'   
          ,' case wx_direction when ''接收'' then from_name  when ''发送'' then to_name end as from_name1,'   
          ,' case wx_direction when ''接收'' then to_id  when ''发送'' then from_id end as to_id1,'
          ,' case wx_direction when ''接收'' then to_name  when ''发送'' then from_name end as to_name1,'
          ,' vr.sub_type,rm.sub_type_ch , '
                    ,' case when vr.sub_type=''text''  then concat(left(vr.payload,30 ),''......'') '
          ,'  when vr.sub_type=''video'' then  concat(url_head,left(substring(payload,14),41)) else concat(url_head,vr.payload) end  payload  '
                    ,' from v_report_im_history vr'
          ,' left join t_weixin tw on vr.to_id=tw.WEIXIN_ID '
                    ,' left join report_message_type rm on vr.sub_type=rm.sub_type '
                    ,' ) as a'
          ,' where 1=1 ');
    
  
        
        
            if @starttime is not null and @starttime<>'' then
        set sql1=concat(sql1,' and date_format(timestamp,''%Y-%m-%d'')>=@starttime');
            end if;
            
            if @stoptime is not null and @stoptime<>'' then
        set sql1=concat(sql1,' and date_format(timestamp,''%Y-%m-%d'')<=@stoptime');
            end if; 
            
      if @org_id is not null and @org_id<>'' then
        set sql1=concat(sql1,' and orgid=@org_id ');
            end if; 
            
      if @org_name is not null and @org_name<>'' then
        set sql1=concat(sql1,' and orgname=@org_name ');
            end if; 
            
      if @from_id is not null and @from_id<>'' then
        set sql1=concat(sql1,' and from_id1=@from_id ');
            end if; 
            
      if @to_id is not null and @to_id<>'' then
        set sql1=concat(sql1,' and to_id1=@to_id ');
            end if; 
            
      if @service_id is not null and @service_id<>'' then
        set sql1=concat(sql1,' and service_id=@service_id ');
            end if;
            
      if @weixin_type is not null and @weixin_type<>'' then
        set sql1=concat(sql1,' and type=@weixin_type ');
            end if;
            
      if @message_type is not null and @message_type<>'' then
        set sql1=concat(sql1,' and sub_type=@message_type ');
            end if;
       
    set sql1=concat(sql1,' order by timestamp  ');   
       
    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_report_winxi_user` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_report_winxi_user`(
                starttime varchar(40),
                stoptime varchar(40),
                org_id   varchar(40),
                org_name varchar(40),
                service_id varchar(40),
                nickname    varchar(40),
                sex         varchar(40),
                type        varchar(40)
                
)
begin
  declare sql1 nvarchar(4000);
    set @starttime=starttime;
    set @stoptime=stoptime;
    set @org_id = org_id;
    set @org_name=org_name;
    set @service_id=service_id;
    set @nickname=nickname;
    set @sex=sex;
    set @type=type;



         set sql1=concat(' select ' 
              ,' tw.orgid,'
              ,' tw.orgname,'
              ,' cu.SERVICE_ID,'
              ,' tw.type,'
              ,' cu.nickname,'
              ,' cu.sex,'
                            ,' case cu.sex when 1 then ''男''  when 2 then ''女'' else ''未知''  end sex1 ,'
              ,' cu.city,'
              ,' cu.PROVINCE,'
              ,' cu.COUNTRY,'
              ,' cu.SUBSCRIBE_TIMESTAMP,'
              ,' cu.UPDATE_TIMESTAMP '
              ,' from cti_weixin_user cu'
              ,' left join t_weixin tw on cu.SERVICE_ID=tw.WEIXIN_ID'
                            ,' where 1=1 ');
    
            if @starttime is not null and @starttime<>'' then
        set sql1=concat(sql1,' and date_format(cu.SUBSCRIBE_TIMESTAMP,''%Y-%m-%d'')>=@starttime');
            end if;
            
            if @stoptime is not null and @stoptime<>'' then
        set sql1=concat(sql1,' and date_format(cu.SUBSCRIBE_TIMESTAMP,''%Y-%m-%d'')<=@stoptime');
            end if; 
            
      if @org_id is not null and @org_id<>'' then
        set sql1=concat(sql1,' and orgid=@org_id ');
            end if; 
            
      if @org_name is not null and @org_name<>'' then
        set sql1=concat(sql1,' and orgname=@org_name ');
            end if; 
            
      if @service_id is not null and @service_id<>'' then
        set sql1=concat(sql1,' and service_id=@service_id ');
            end if; 
            
      if @nickname is not null and @nickname<>'' then
        set sql1=concat(sql1,' and nickname=@nickname ');
            end if; 
            
      if @sex is not null and @sex<>'' then
        set sql1=concat(sql1,' and sex=@sex ');
            end if;
            
      if @type is not null and @type<>'' then
        set sql1=concat(sql1,' and type=@type ');
            end if;
            
    set sql1=concat(sql1,' order by cu.SUBSCRIBE_TIMESTAMP desc  ');        
            
    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `p_yuyin_count` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `p_yuyin_count`(
                times varchar(40),
                starttime varchar(40),
                endtime varchar(40),
                start_h varchar(40),
                start_m varchar(40),
                start_s varchar(40),
                stop_h varchar(40),
                stop_m varchar(40),
                stop_s varchar(40)
      
              
)
begin
  declare sql1 nvarchar(2500);

    set @times=times;
    set @starttime=starttime;
    set @endtime=endtime;
    set @start_h=start_h;
    set @start_m=start_m;
    set @start_s=start_s;
    set @stop_h=stop_h;
    set @stop_m=stop_m;
    set @stop_s=stop_s;
 
  
     set sql1=concat('select tjdate1 as d1,callee_number,billsec,report_number_to_time(billsec) as billsec1,num,'
               ,'  report_number_to_time(billsec/num) as avganswered '
         ,' from(select distinct');
               
          if @times='半小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H:%i'')');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m-%d '')');
         end if;
         
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(dat1.tjdate) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(dat1.tjdate,''%Y''),''-0'',cast(week(dat1.tjdate) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(dat1.tjdate,''%Y''),''-'',cast(week(dat1.tjdate) as SIGNED)+1)  end ');
         end if;      
 
         
     if @times='月' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y-%m '')');
         end if;
        
         
    if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(dat1.tjdate,''%Y''),''-'',quarter(dat1.tjdate))');      
         end if;
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(dat1.tjdate,''%Y'')');
         end if;
          
         set sql1=concat(sql1,' as tjdate1 from report_date as dat1  where 1=1' );
          
            

          if @starttime is not null and @starttime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')>=@starttime');
      end if; 

      if @endtime is not null and @endtime<>'' then
      set sql1=concat(sql1,' and  date_format(dat1.tjdate,''%Y-%m-%d'')<=@endtime');
      end if; 
           
     set sql1=concat(sql1,' ) as d left join ( '
   ,'  select d1,callee_number,count(id) as num,sum(billsec) as billsec '
   ,' from(select ' );    
          
 
     if @times='半小时' then
     set sql1=concat(sql1,' report_time_30m(start_time) ');
         end if;
         
     if @times='小时' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d %H'')');
         end if;
         
     if @times='天' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m-%d '')');
         end if;
        
 
 if @times='周' then
       set sql1=concat(sql1,' case   when( cast(week(start_time) as SIGNED)+1 <=9) '
        ,' then '
    ,'  concat(date_format(start_time,''%Y''),''-0'',cast(week(start_time) as SIGNED)+1)   '
        ,' else '
        ,'  concat(date_format(start_time,''%Y''),''-'',cast(week(start_time) as SIGNED)+1)  end ');
         end if;      
 
   
     if @times='月' then
     set sql1=concat(sql1,' date_format(start_time,''%Y-%m '')');
         end if;
        
     if @times='季度' then
         set sql1=concat(sql1,'  concat(date_format(start_time,''%Y''),''-'',quarter(start_time))');      
         end if;
        
         
         
     if @times='年' then
     set sql1=concat(sql1,' date_format(start_time,''%y'')');
         end if;
          
    
         set sql1=concat(sql1,' as d1,callee_number,id,timestampdiff(second,start_time,stop_time)  as billsec '
        ,' from v_report_cti_record_files as a where a.cti_record_type=''vm'' ');
         
     if @starttime is not null and @starttime<>'' then
     set sql1=concat(sql1,' and  date_format(a.start_time,''%Y-%m-%d'')>=@starttime');
     end if; 
     
     if @endtime is not null and @endtime<>'' then
     set sql1=concat(sql1,' and  date_format(a.start_time,''%Y-%m-%d'')<=@endtime');
     end if; 
         
        set sql1=concat(sql1,' ) as cdr1 group by cdr1.d1,callee_number ');
          set sql1=concat(sql1,' having 1=1 ');
       
    if @start_h+@start_m+@start_s >0 then
     set sql1=concat(sql1,' and sum(billsec)>=ltrim(@start_h*3600+@start_m*60+@start_s)');
     end if; 
          
     if @stop_h+@stop_m+@stop_s >0 then
     set sql1=concat(sql1,' and sum(billsec)<=ltrim(@stop_h*3600+@stop_m*60+@stop_s)');
     end if; 
        
        
         set sql1=concat(sql1,') as cdr on tjdate1=cdr.d1 order by tjdate1 ');
    
    
        

    set @exesql =sql1; 
    
    prepare stm from @exesql; 
    
    execute stm;

    
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_add` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_add`(
 a int,
 b int,
 out c int
)
BEGIN
  set c=a+b;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `test_event` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `test_event`()
BEGIN

INSERT INTO `c8config`.`test`
(`idtest`)
VALUES
(1);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `test_sp1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `test_sp1`( )
BEGIN   
  DECLARE end_id INT DEFAULT 0;
    DECLARE t_error INTEGER DEFAULT 0;   
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET t_error=1;   
    

    
    select * from CTI_AGENT_SESSION;
    
    
    END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_out_time_order` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `update_out_time_order`()
BEGIN
 
set sql_safe_updates = 0;
INSERT INTO tsmstask (Mobilenum,SMInfo,WriteTime,Priorty,PostState,PostResult) 
		SELECT  b.moblephone, CONCAT('您有一条超期工单，工单号为:', m.WorkOrderNo) ,now() ,0 ,1 ,'新任务' from t_sys_user b 
				left join mycomm_workorder m
				on m.HandlePerCode=b.workNumber where m.WorkState='待处理' 
					   AND m.IsOuterDateNotify=1 
					   AND NOW() >= m.HandleCommitTime 
					   AND m.IsMessage=0  ;

UPDATE mycomm_workorder n set n.IsMessage=1 WHERE n.WorkState='待处理' AND n.IsOuterDateNotify=1 AND NOW() >=n.HandleCommitTime and n.IsMessage=0;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Users_Test` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `Users_Test`(out pCode int)
begin


end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Final view structure for view `v_agent_action`
--

/*!50001 DROP VIEW IF EXISTS `v_agent_action`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_agent_action` AS select `v_report_cti_agent_action`.`ID` AS `ID`,`v_report_cti_agent_action`.`AGENT_ID` AS `AGENT_ID`,`v_report_cti_agent_action`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`v_report_cti_agent_action`.`EVENT_TIMESTAMP` AS `EVENT_TIMESTAMP`,`v_report_cti_agent_action`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`v_report_cti_agent_action`.`OTHER_LEG_UUID` AS `OTHER_LEG_UUID`,`v_report_cti_agent_action`.`CLASS` AS `CLASS`,`v_report_cti_agent_action`.`METHOD` AS `METHOD`,`v_report_cti_agent_action`.`PARAMS` AS `PARAMS`,`v_report_cti_agent_action`.`CUR_STATE_NAME` AS `CUR_STATE_NAME`,`v_report_cti_agent_action`.`CALL_UUID` AS `CALL_UUID`,`v_report_cti_agent_session`.`AGENT_NAME` AS `AGENT_NAME`,`v_report_cti_agent_session`.`ORG_ID` AS `ORG_ID`,`v_report_cti_agent_session`.`AGENT_EXT` AS `AGENT_EXT`,`v_report_cti_agent_session`.`AGENT_CONTACT` AS `AGENT_CONTACT`,`v_report_cti_agent_session`.`WORK_ID` AS `WORK_ID`,`v_report_cti_agent_session`.`LOGIN_TIMESTAMP` AS `LOGIN_TIMESTAMP`,`v_report_cti_agent_session`.`IS_LEADER` AS `IS_LEADER`,`v_report_cti_agent_session`.`LOGOUT_TIMESTAMP` AS `LOGOUT_TIMESTAMP`,`v_report_cti_agent_session`.`LOGOUT_STATE` AS `LOGOUT_STATE`,`v_report_cti_agent_action_name`.`ZH_CN` AS `ZH_CN` from ((`v_report_cti_agent_action` join `v_report_cti_agent_session` on((`v_report_cti_agent_action`.`AGENT_SESSION_ID` = `v_report_cti_agent_session`.`AGENT_SESSION_ID`))) left join `v_report_cti_agent_action_name` on((`v_report_cti_agent_action`.`METHOD` = `v_report_cti_agent_action_name`.`METHOD`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_action`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_action`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_action` AS select `v_report_cti_agent_action`.`ID` AS `ID`,`v_report_cti_agent_action`.`AGENT_ID` AS `AGENT_ID`,`v_report_cti_agent_action`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`v_report_cti_agent_action`.`EVENT_TIMESTAMP` AS `EVENT_TIMESTAMP`,`v_report_cti_agent_action`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`v_report_cti_agent_action`.`OTHER_LEG_UUID` AS `OTHER_LEG_UUID`,`v_report_cti_agent_action`.`CLASS` AS `CLASS`,`v_report_cti_agent_action`.`METHOD` AS `METHOD`,`v_report_cti_agent_action`.`PARAMS` AS `PARAMS`,`v_report_cti_agent_action`.`CUR_STATE_NAME` AS `CUR_STATE_NAME`,`v_report_cti_agent_action`.`CALL_UUID` AS `CALL_UUID`,`v_report_cti_agent_session`.`AGENT_NAME` AS `AGENT_NAME`,`v_report_cti_agent_session`.`ORG_ID` AS `ORG_ID`,`v_report_cti_agent_session`.`AGENT_EXT` AS `AGENT_EXT`,`v_report_cti_agent_session`.`AGENT_CONTACT` AS `AGENT_CONTACT`,`v_report_cti_agent_session`.`WORK_ID` AS `WORK_ID`,`v_report_cti_agent_session`.`LOGIN_TIMESTAMP` AS `LOGIN_TIMESTAMP`,`v_report_cti_agent_session`.`IS_LEADER` AS `IS_LEADER`,`v_report_cti_agent_session`.`LOGOUT_TIMESTAMP` AS `LOGOUT_TIMESTAMP`,`v_report_cti_agent_session`.`LOGOUT_STATE` AS `LOGOUT_STATE`,`v_report_cti_agent_state_name`.`ZH_CN` AS `ZH_CN` from ((`v_report_cti_agent_action` join `v_report_cti_agent_session` on((`v_report_cti_agent_action`.`AGENT_SESSION_ID` = `v_report_cti_agent_session`.`AGENT_SESSION_ID`))) left join `v_report_cti_agent_state_name` on((`v_report_cti_agent_action`.`CUR_STATE_NAME` = `v_report_cti_agent_state_name`.`STATE`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx` AS select `a`.`ID` AS `ID`,`a`.`PRE_REC_ID` AS `PRE_REC_ID`,`a`.`AGENT_ID` AS `AGENT_ID`,`a`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`a`.`ENTRY_TIMESTAMP` AS `ENTRY_TIMESTAMP`,`a`.`EXIT_TIMESTAMP` AS `EXIT_TIMESTAMP`,`a`.`DURATION` AS `DURATION`,`a`.`NEW_STATE_NAME` AS `NEW_STATE_NAME`,`a`.`OLD_STATE_NAME` AS `OLD_STATE_NAME`,`a`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`a`.`OTHER_LEG_UUID` AS `OTHER_LEG_UUID`,`a`.`SUB_ID` AS `SUB_ID`,`REPORT_TIME_30M`(`a`.`ENTRY_TIMESTAMP`) AS `ENTRY_TIMESTAMP_30M` from `cti_agent_state` `a` where ((`a`.`NEW_STATE_NAME` = 'st_on_break') or (`a`.`NEW_STATE_NAME` = 'st_holding') or (`a`.`NEW_STATE_NAME` = 'st_post_call') or (`a`.`NEW_STATE_NAME` = 'st_in_innercall') or (`a`.`NEW_STATE_NAME` = 'st_offering') or (`a`.`NEW_STATE_NAME` = 'st_in_queue_call') or (`a`.`NEW_STATE_NAME` = 'st_in_outbound_call')) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_nh`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_nh`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_nh` AS select `r5`.`AGENT_ID` AS `AGENT_ID`,`r5`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`r5`.`ENTRY_TIMESTAMP_30M` AS `ENTRY_TIMESTAMP_30M`,`r6`.`id5` AS `id5`,`r5`.`duration5` AS `duration5` from (`v_report_agent_jx_nh_3` `r5` join `v_report_agent_jx_nh_4` `r6`) where ((`r5`.`AGENT_ID` = `r6`.`AGENT_ID`) and (`r5`.`AGENT_SESSION_ID` = `r6`.`AGENT_SESSION_ID`) and (`r5`.`ENTRY_TIMESTAMP_30M` = `r6`.`ENTRY_TIMESTAMP_30M`)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_nh_1`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_nh_1`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_nh_1` AS select `r5`.`AGENT_ID` AS `AGENT_ID`,`r5`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`r5`.`CHANNEL_UUID` AS `CHANNEL_UUID`,min(`r5`.`ENTRY_TIMESTAMP_30M`) AS `ENTRY_TIMESTAMP_30M` from `v_report_agent_jx` `r5` where ((`r5`.`NEW_STATE_NAME` = 'st_in_innercall') and (`r5`.`OLD_STATE_NAME` = 'st_outgoing_innercall')) group by `r5`.`AGENT_ID`,`r5`.`AGENT_SESSION_ID`,`r5`.`CHANNEL_UUID` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_nh_2`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_nh_2`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_nh_2` AS select `r4`.`AGENT_ID` AS `AGENT_ID`,`r4`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`r4`.`CHANNEL_UUID` AS `CHANNEL_UUID`,min(`r4`.`ENTRY_TIMESTAMP_30M`) AS `ENTRY_TIMESTAMP_30M` from `v_report_agent_jx` `r4` where ((`r4`.`NEW_STATE_NAME` = 'st_in_innercall') and (`r4`.`OLD_STATE_NAME` = 'st_outgoing_innercall')) group by `r4`.`AGENT_ID`,`r4`.`AGENT_SESSION_ID`,`r4`.`CHANNEL_UUID` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_nh_3`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_nh_3`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_nh_3` AS select `rth5`.`AGENT_ID` AS `AGENT_ID`,`rth5`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`rth5`.`ENTRY_TIMESTAMP_30M` AS `ENTRY_TIMESTAMP_30M`,sum(`tt5`.`DURATION`) AS `duration5` from (`v_report_agent_jx_nh_1` `rth5` join `v_report_agent_jx` `tt5`) where ((`rth5`.`AGENT_ID` = `tt5`.`AGENT_ID`) and (`rth5`.`AGENT_SESSION_ID` = `tt5`.`AGENT_SESSION_ID`) and (`rth5`.`CHANNEL_UUID` = `tt5`.`CHANNEL_UUID`) and (`tt5`.`NEW_STATE_NAME` = 'st_in_innercall') and (`tt5`.`OLD_STATE_NAME` = 'st_outgoing_innercall')) group by `rth5`.`AGENT_ID`,`rth5`.`AGENT_SESSION_ID`,`rth5`.`ENTRY_TIMESTAMP_30M` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_nh_4`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_nh_4`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_nh_4` AS select `rth4`.`AGENT_ID` AS `AGENT_ID`,`rth4`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`rth4`.`ENTRY_TIMESTAMP_30M` AS `ENTRY_TIMESTAMP_30M`,count(`rth4`.`CHANNEL_UUID`) AS `id5` from `v_report_agent_jx_nh_2` `rth4` group by `rth4`.`AGENT_ID`,`rth4`.`AGENT_SESSION_ID`,`rth4`.`ENTRY_TIMESTAMP_30M` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_th`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_th`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_th` AS select `r5`.`AGENT_ID` AS `AGENT_ID`,`r5`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`r5`.`ENTRY_TIMESTAMP_30M` AS `ENTRY_TIMESTAMP_30M`,`r6`.`id5` AS `id5`,`r5`.`duration5` AS `duration5` from (`v_report_agent_jx_th_3` `r5` join `v_report_agent_jx_th_4` `r6`) where (`r5`.`AGENT_ID` = `r6`.`AGENT_ID`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_th_1`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_th_1`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_th_1` AS select `r5`.`AGENT_ID` AS `AGENT_ID`,`r5`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`r5`.`CHANNEL_UUID` AS `CHANNEL_UUID`,min(`r5`.`ENTRY_TIMESTAMP_30M`) AS `ENTRY_TIMESTAMP_30M` from `v_report_agent_jx` `r5` where (`r5`.`NEW_STATE_NAME` = 'st_in_queue_call') group by `r5`.`AGENT_ID`,`r5`.`AGENT_SESSION_ID`,`r5`.`CHANNEL_UUID` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_th_2`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_th_2`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_th_2` AS select `r4`.`AGENT_ID` AS `AGENT_ID`,`r4`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`r4`.`CHANNEL_UUID` AS `CHANNEL_UUID`,min(`r4`.`ENTRY_TIMESTAMP_30M`) AS `ENTRY_TIMESTAMP_30M` from `v_report_agent_jx` `r4` where (`r4`.`NEW_STATE_NAME` = 'st_in_queue_call') group by `r4`.`AGENT_ID`,`r4`.`AGENT_SESSION_ID`,`r4`.`CHANNEL_UUID` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_th_3`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_th_3`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_th_3` AS select `rth5`.`AGENT_ID` AS `AGENT_ID`,`rth5`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`rth5`.`ENTRY_TIMESTAMP_30M` AS `ENTRY_TIMESTAMP_30M`,sum(`tt5`.`DURATION`) AS `duration5` from (`v_report_agent_jx_th_1` `rth5` join `v_report_agent_jx` `tt5`) where ((`rth5`.`AGENT_ID` = `tt5`.`AGENT_ID`) and (`rth5`.`AGENT_SESSION_ID` = `tt5`.`AGENT_SESSION_ID`) and (`rth5`.`CHANNEL_UUID` = `tt5`.`CHANNEL_UUID`) and (`tt5`.`NEW_STATE_NAME` = 'st_in_queue_call')) group by `rth5`.`AGENT_ID`,`rth5`.`AGENT_SESSION_ID`,`rth5`.`ENTRY_TIMESTAMP_30M` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_th_4`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_th_4`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_th_4` AS select `rth4`.`AGENT_ID` AS `AGENT_ID`,`rth4`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`rth4`.`ENTRY_TIMESTAMP_30M` AS `ENTRY_TIMESTAMP_30M`,count(`rth4`.`CHANNEL_UUID`) AS `id5` from `v_report_agent_jx_th_2` `rth4` group by `rth4`.`AGENT_ID`,`rth4`.`AGENT_SESSION_ID`,`rth4`.`ENTRY_TIMESTAMP_30M` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_wh`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_wh`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_wh` AS select `r5`.`AGENT_ID` AS `AGENT_ID`,`r5`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`r5`.`ENTRY_TIMESTAMP_30M` AS `ENTRY_TIMESTAMP_30M`,`r6`.`id5` AS `id5`,`r5`.`duration5` AS `duration5` from (`v_report_agent_jx_wh_3` `r5` join `v_report_agent_jx_wh_4` `r6`) where ((`r5`.`AGENT_ID` = `r6`.`AGENT_ID`) and (`r5`.`AGENT_SESSION_ID` = `r6`.`AGENT_SESSION_ID`) and (`r5`.`ENTRY_TIMESTAMP_30M` = `r6`.`ENTRY_TIMESTAMP_30M`)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_wh_1`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_wh_1`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_wh_1` AS select `r5`.`AGENT_ID` AS `AGENT_ID`,`r5`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`r5`.`CHANNEL_UUID` AS `CHANNEL_UUID`,min(`r5`.`ENTRY_TIMESTAMP_30M`) AS `ENTRY_TIMESTAMP_30M` from `v_report_agent_jx` `r5` where (`r5`.`NEW_STATE_NAME` = 'st_in_outbound_call') group by `r5`.`AGENT_ID`,`r5`.`AGENT_SESSION_ID`,`r5`.`CHANNEL_UUID` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_wh_2`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_wh_2`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_wh_2` AS select `r4`.`AGENT_ID` AS `AGENT_ID`,`r4`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`r4`.`CHANNEL_UUID` AS `CHANNEL_UUID`,min(`r4`.`ENTRY_TIMESTAMP_30M`) AS `ENTRY_TIMESTAMP_30M` from `v_report_agent_jx` `r4` where (`r4`.`NEW_STATE_NAME` = 'st_in_outbound_call') group by `r4`.`AGENT_ID`,`r4`.`AGENT_SESSION_ID`,`r4`.`CHANNEL_UUID` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_wh_3`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_wh_3`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_wh_3` AS select `rth5`.`AGENT_ID` AS `AGENT_ID`,`rth5`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`rth5`.`ENTRY_TIMESTAMP_30M` AS `ENTRY_TIMESTAMP_30M`,sum(`tt5`.`DURATION`) AS `duration5` from (`v_report_agent_jx_wh_1` `rth5` join `v_report_agent_jx` `tt5`) where ((`rth5`.`AGENT_ID` = `tt5`.`AGENT_ID`) and (`rth5`.`AGENT_SESSION_ID` = `tt5`.`AGENT_SESSION_ID`) and (`rth5`.`CHANNEL_UUID` = `tt5`.`CHANNEL_UUID`) and (`tt5`.`NEW_STATE_NAME` = 'st_in_outbound_call')) group by `rth5`.`AGENT_ID`,`rth5`.`AGENT_SESSION_ID`,`rth5`.`ENTRY_TIMESTAMP_30M` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_jx_wh_4`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_jx_wh_4`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_jx_wh_4` AS select `rth4`.`AGENT_ID` AS `AGENT_ID`,`rth4`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`rth4`.`ENTRY_TIMESTAMP_30M` AS `ENTRY_TIMESTAMP_30M`,count(`rth4`.`CHANNEL_UUID`) AS `id5` from `v_report_agent_jx_wh_2` `rth4` group by `rth4`.`AGENT_ID`,`rth4`.`AGENT_SESSION_ID`,`rth4`.`ENTRY_TIMESTAMP_30M` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agent_session`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agent_session`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agent_session` AS select `v_report_cti_agent_session`.`AGENT_ID` AS `AGENT_ID`,`v_report_cti_agent_session`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`v_report_cti_agent_session`.`AGENT_NAME` AS `AGENT_NAME`,`v_report_cti_agent_session`.`ORG_ID` AS `ORG_ID`,`v_report_cti_agent_session`.`AGENT_EXT` AS `AGENT_EXT`,`v_report_cti_agent_session`.`AGENT_CONTACT` AS `AGENT_CONTACT`,`v_report_cti_agent_session`.`WORK_ID` AS `WORK_ID`,`v_report_cti_agent_session`.`IS_LEADER` AS `IS_LEADER`,min(`v_report_cti_agent_session`.`LOGIN_TIMESTAMP`) AS `LOGIN_TIMESTAMP`,`v_report_cti_agent_session`.`LOGOUT_TIMESTAMP` AS `LOGOUT_TIMESTAMP`,`v_report_cti_agent_session`.`LOGOUT_STATE` AS `LOGOUT_STATE`,min(`v_report_cti_agent_session`.`LOGIN_TIMESTAMP_30M`) AS `LOGIN_TIMESTAMP_30M` from `v_report_cti_agent_session` group by `v_report_cti_agent_session`.`AGENT_ID`,`v_report_cti_agent_session`.`AGENT_SESSION_ID`,`v_report_cti_agent_session`.`AGENT_NAME`,`v_report_cti_agent_session`.`ORG_ID`,`v_report_cti_agent_session`.`AGENT_EXT`,`v_report_cti_agent_session`.`AGENT_CONTACT`,`v_report_cti_agent_session`.`WORK_ID`,`v_report_cti_agent_session`.`IS_LEADER`,`v_report_cti_agent_session`.`LOGOUT_TIMESTAMP`,`v_report_cti_agent_session`.`LOGOUT_STATE` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agentstate`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agentstate`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agentstate` AS select `v_report_cti_agent_state`.`ID` AS `ID`,`v_report_cti_agent_state`.`ENTRY_TIMESTAMP` AS `ENTRY_TIMESTAMP`,`v_report_cti_agent_state`.`AGENT_ID` AS `AGENT_ID`,date_format(`v_report_cti_agent_state`.`ENTRY_TIMESTAMP`,'%Y-%m-%d %H') AS `ENTRY_TIME_H`,date_format(`v_report_cti_agent_state`.`ENTRY_TIMESTAMP`,'%Y-%m-%d') AS `ENTRY_TIME_DATE`,`v_report_cti_agent_state`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`v_report_cti_agent_state`.`NEW_STATE_NAME` AS `NEW_STATE_NAME`,`v_report_cti_agent_state`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`v_report_cti_agent_state`.`OTHER_LEG_UUID` AS `OTHER_LEG_UUID`,`v_report_cti_agent_state`.`OLD_STATE_NAME` AS `OLD_STATE_NAME`,`v_report_cti_agent_state`.`DURATION` AS `DURATION`,`v_report_cti_agent_state`.`CALL_UUID` AS `CALL_UUID`,`v_report_cti_agent_state`.`EXIT_TIMESTAMP` AS `EXIT_TIMESTAMP`,`v_report_cti_agent_state`.`PRE_REC_ID` AS `PRE_REC_ID` from `v_report_cti_agent_state` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agentstate_session`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agentstate_session`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agentstate_session` AS select `v_report_cti_agent_state`.`ID` AS `ID`,`v_report_cti_agent_state`.`ENTRY_TIMESTAMP` AS `ENTRY_TIMESTAMP`,date_format(`v_report_cti_agent_state`.`ENTRY_TIMESTAMP`,'%Y-%m-%d %H') AS `ENTRY_TIME_H`,date_format(`v_report_cti_agent_state`.`ENTRY_TIMESTAMP`,'%Y-%m-%d') AS `ENTRY_TIME_DATE`,`v_report_cti_agent_state`.`AGENT_ID` AS `AGENT_ID`,`v_report_cti_agent_state`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`v_report_cti_agent_state`.`NEW_STATE_NAME` AS `NEW_STATE_NAME`,`v_report_cti_agent_state`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`v_report_cti_agent_state`.`OTHER_LEG_UUID` AS `OTHER_LEG_UUID`,`v_report_cti_agent_state`.`OLD_STATE_NAME` AS `OLD_STATE_NAME`,`v_report_cti_agent_state`.`DURATION` AS `DURATION`,`v_report_cti_agent_state`.`CALL_UUID` AS `CALL_UUID`,`v_report_cti_agent_state`.`EXIT_TIMESTAMP` AS `EXIT_TIMESTAMP`,`v_report_cti_agent_state`.`PRE_REC_ID` AS `PRE_REC_ID`,`v_report_cti_agent_session`.`AGENT_NAME` AS `AGENT_NAME`,`v_report_cti_agent_session`.`ORG_ID` AS `ORG_ID`,`v_report_cti_agent_session`.`AGENT_EXT` AS `AGENT_EXT`,`v_report_cti_agent_session`.`AGENT_CONTACT` AS `AGENT_CONTACT`,`v_report_cti_agent_session`.`WORK_ID` AS `WORK_ID`,`v_report_cti_agent_session`.`IS_LEADER` AS `IS_LEADER`,`v_report_cti_agent_session`.`LOGIN_TIMESTAMP` AS `LOGIN_TIMESTAMP`,`v_report_cti_agent_session`.`LOGOUT_TIMESTAMP` AS `LOGOUT_TIMESTAMP`,`v_report_cti_agent_session`.`LOGOUT_STATE` AS `LOGOUT_STATE`,`v_report_cti_agent_state_name`.`ZH_CN` AS `ZH_CN`,`cti_agent_state_name_1`.`ZH_CN` AS `OLD_ZH_CN`,sec_to_time(`v_report_cti_agent_state`.`DURATION`) AS `sec_to_time(V_REPORT_CTI_AGENT_STATE.DURATION)` from (((`v_report_cti_agent_state` join `v_report_cti_agent_session` on((`v_report_cti_agent_state`.`AGENT_SESSION_ID` = `v_report_cti_agent_session`.`AGENT_SESSION_ID`))) left join `v_report_cti_agent_state_name` on((`v_report_cti_agent_state`.`NEW_STATE_NAME` = `v_report_cti_agent_state_name`.`STATE`))) left join `v_report_cti_agent_state_name` `cti_agent_state_name_1` on((`v_report_cti_agent_state`.`OLD_STATE_NAME` = `cti_agent_state_name_1`.`STATE`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_agentstate_session_h`
--

/*!50001 DROP VIEW IF EXISTS `v_report_agentstate_session_h`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_agentstate_session_h` AS select `cti_hist_agent_state`.`ID` AS `ID`,`cti_hist_agent_state`.`ENTRY_TIMESTAMP` AS `ENTRY_TIMESTAMP`,date_format(`cti_hist_agent_state`.`ENTRY_TIMESTAMP`,'%Y-%m-%d %H') AS `ENTRY_TIME_H`,date_format(`cti_hist_agent_state`.`ENTRY_TIMESTAMP`,'%Y-%m-%d') AS `ENTRY_TIME_DATE`,`cti_hist_agent_state`.`AGENT_ID` AS `AGENT_ID`,`cti_hist_agent_state`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`cti_hist_agent_state`.`NEW_STATE_NAME` AS `NEW_STATE_NAME`,`cti_hist_agent_state`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`cti_hist_agent_state`.`OTHER_LEG_UUID` AS `OTHER_LEG_UUID`,`cti_hist_agent_state`.`OLD_STATE_NAME` AS `OLD_STATE_NAME`,`cti_hist_agent_state`.`DURATION` AS `DURATION`,`cti_hist_agent_state`.`CALL_UUID` AS `CALL_UUID`,`cti_hist_agent_state`.`EXIT_TIMESTAMP` AS `EXIT_TIMESTAMP`,`cti_hist_agent_state`.`PRE_REC_ID` AS `PRE_REC_ID`,`cti_hist_agent_session`.`AGENT_NAME` AS `AGENT_NAME`,`cti_hist_agent_session`.`ORG_ID` AS `ORG_ID`,`cti_hist_agent_session`.`AGENT_EXT` AS `AGENT_EXT`,`cti_hist_agent_session`.`AGENT_CONTACT` AS `AGENT_CONTACT`,`cti_hist_agent_session`.`WORK_ID` AS `WORK_ID`,`cti_hist_agent_session`.`IS_LEADER` AS `IS_LEADER`,`cti_hist_agent_session`.`LOGIN_TIMESTAMP` AS `LOGIN_TIMESTAMP`,`cti_hist_agent_session`.`LOGOUT_TIMESTAMP` AS `LOGOUT_TIMESTAMP`,`cti_hist_agent_session`.`LOGOUT_STATE` AS `LOGOUT_STATE`,`cti_agent_state_name`.`ZH_CN` AS `ZH_CN`,`cti_agent_state_name_1`.`ZH_CN` AS `OLD_ZH_CN`,sec_to_time(`cti_hist_agent_state`.`DURATION`) AS `DURATION1` from (((`cti_hist_agent_state` join `cti_hist_agent_session` on((`cti_hist_agent_state`.`AGENT_SESSION_ID` = `cti_hist_agent_session`.`AGENT_SESSION_ID`))) left join `cti_agent_state_name` on((`cti_hist_agent_state`.`NEW_STATE_NAME` = `cti_agent_state_name`.`STATE`))) left join `cti_agent_state_name` `cti_agent_state_name_1` on((`cti_hist_agent_state`.`OLD_STATE_NAME` = `cti_agent_state_name_1`.`STATE`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cdr`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cdr`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cdr` AS select `a`.`ZH_CN` AS `ZH_CN`,`c`.`ACCOUNT_CODE` AS `ACCOUNT_CODE`,`c`.`AGENT_COUNT` AS `AGENT_COUNT`,`c`.`AGENT_TIME` AS `AGENT_TIME`,`c`.`AGENT_TIME1` AS `AGENT_TIME1`,`c`.`ANSWERED` AS `ANSWERED`,`c`.`ANSWERED_TIME` AS `ANSWERED_TIME`,`c`.`ANSWERED1` AS `ANSWERED1`,`c`.`BILLSEC` AS `BILLSEC`,`c`.`BILLSEC1` AS `BILLSEC1`,`c`.`CALLEE_NUMBER` AS `CALLEE_NUMBER`,`c`.`CANCEL_TIME` AS `CANCEL_TIME`,`c`.`CREAT_TIME` AS `CREAT_TIME`,`c`.`CTI_CALL_DIRECTION` AS `CTI_CALL_DIRECTION`,`c`.`CTI_CALL_UUID` AS `CTI_CALL_UUID`,`c`.`CTI_CC_DIRECTION` AS `CTI_CC_DIRECTION`,`c`.`DURATION` AS `DURATION`,`c`.`DURATION1` AS `DURATION1`,`c`.`HANGUP_CAUSE` AS `HANGUP_CAUSE`,`c`.`HANGUP_DISPOSITION` AS `HANGUP_DISPOSITION`,`c`.`ID` AS `ID`,`c`.`IVR_COUNT` AS `IVR_COUNT`,`c`.`IVR_TIME` AS `IVR_TIME`,`c`.`IVR_TIME1` AS `IVR_TIME1`,`c`.`ORIG_CALLEE_NUMBER` AS `ORIG_CALLEE_NUMBER`,`c`.`ORIG_CALLER_NUMBER` AS `ORIG_CALLER_NUMBER`,`c`.`ORIG_CALLER_TYPE` AS `ORIG_CALLER_TYPE`,`c`.`QUEUE_COUNT` AS `QUEUE_COUNT`,`c`.`QUEUE_TIME` AS `QUEUE_TIME`,`c`.`QUEUE_TIME1` AS `QUEUE_TIME1`,`c`.`WAITSEC` AS `WAITSEC`,`c`.`WAITSEC1` AS `WAITSEC1`,`ct`.`CTI_CHANNEL_TYPE_CHINESE` AS `ORIG_CALLER_TYPE1`,`hd`.`HANGUP_DISPOSITION_CHINESE` AS `HANGUP_DISPOSITION1`,`ccd`.`CTI_CALL_DIRECTION_CHINESE` AS `CTI_CALL_DIRECTION1`,`ccd1`.`CTI_CALL_DIRECTION_CHINESE` AS `CTI_CC_DIRECTION1` from (((((`report_cdr` `c` left join `v_report_cti_hangup_cause` `a` on((`a`.`HANGUP_CAUSE` = `c`.`HANGUP_CAUSE`))) left join `report_channel_type` `ct` on((`c`.`ORIG_CALLER_TYPE` = `ct`.`CTI_CHANNEL_TYPE`))) left join `report_hangup_disposition` `hd` on((`c`.`HANGUP_DISPOSITION` = `hd`.`HANGUP_DISPOSITION`))) left join `report_cti_call_direction` `ccd` on((`c`.`CTI_CALL_DIRECTION` = `ccd`.`CTI_CALL_DIRECTION`))) left join `report_cti_call_direction` `ccd1` on((`c`.`CTI_CC_DIRECTION` = `ccd1`.`CTI_CALL_DIRECTION`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_channel`
--

/*!50001 DROP VIEW IF EXISTS `v_report_channel`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_channel` AS select sec_to_time(`a`.`DURATION`) AS `DURATION1`,sec_to_time(`a`.`BILLSEC`) AS `BILLSEC1`,`a`.`ORIG_CALLER_NUMBER` AS `ORIG_CALLER_NUMBER`,`a`.`ORIG_CALLEE_NUMBER` AS `ORIG_CALLEE_NUMBER`,`a`.`CONTEXT` AS `CONTEXT`,`a`.`BRIDGED_TIME` AS `BRIDGED_TIME`,`a`.`channel_name` AS `channel_name`,`a`.`PROGRESSSEC` AS `PROGRESSSEC`,`a`.`CALLER_NUMBER` AS `CALLER_NUMBER`,`a`.`CALLEE_NUMBER` AS `CALLEE_NUMBER`,`a`.`CALL_DIRECTION` AS `CALL_DIRECTION`,`a`.`CTI_CALL_DIRECTION` AS `CTI_CALL_DIRECTION`,`a`.`CTI_CC_DIRECTION` AS `CTI_CC_DIRECTION`,`c`.`HANGUP_CAUSE` AS `HANGUP_CAUSE`,`c`.`ZH_CN` AS `ZH_CN`,`a`.`ACCOUNT_CODE` AS `ACCOUNT_CODE`,`a`.`CTI_CHANNEL_TYPE` AS `CTI_CHANNEL_TYPE`,`a`.`CREATED_TIME` AS `CREATED_TIME`,`a`.`ANSWERED_TIME` AS `ANSWERED_TIME`,`a`.`HANGUP_TIME` AS `HANGUP_TIME`,`a`.`HANGUP_DISPOSITION` AS `HANGUP_DISPOSITION`,`a`.`IS_ORIGINATOR` AS `IS_ORIGINATOR`,`a`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`a`.`CTI_CALL_UUID` AS `CTI_CALL_UUID`,`ccd2`.`CTI_CALL_DIRECTION_CHINESE` AS `CALL_DIRECTION1`,`ccd`.`CTI_CALL_DIRECTION_CHINESE` AS `CTI_CALL_DIRECTION1`,`ccd1`.`CTI_CALL_DIRECTION_CHINESE` AS `CTI_CC_DIRECTION1`,`a`.`DURATION` AS `DURATION`,`a`.`BILLSEC` AS `BILLSEC`,`ct`.`CTI_CHANNEL_TYPE_CHINESE` AS `CTI_CHANNEL_TYPE1`,(case `a`.`IS_ORIGINATOR` when 1 then '是' else '否' end) AS `IS_ORIGINATOR1`,`hd`.`HANGUP_DISPOSITION_CHINESE` AS `HANGUP_DISPOSITION1`,`a`.`id` AS `id`,`a`.`ANSWERSEC` AS `ANSWERSEC`,`a`.`WAITSEC` AS `WAITSEC`,`a`.`CTI_BRIDGE_AGENT_ACCUM` AS `CTI_BRIDGE_AGENT_ACCUM`,`a`.`CTI_QUEUE_ACCUM` AS `CTI_QUEUE_ACCUM`,`a`.`CTI_BRIDGE_ACCUM` AS `CTI_BRIDGE_ACCUM`,`a`.`OTHER_LEG_UUID` AS `OTHER_LEG_UUID`,`a`.`DESTINATION_NUMBER` AS `DESTINATION_NUMBER`,`ts`.`name` AS `CONTEXT1` from (((((((`v_report_cti_channel` `a` left join `v_report_cti_hangup_cause` `c` on((`a`.`HANGUP_CAUSE` = `c`.`HANGUP_CAUSE`))) left join `report_hangup_disposition` `hd` on((`a`.`HANGUP_DISPOSITION` = `hd`.`HANGUP_DISPOSITION`))) left join `report_cti_call_direction` `ccd` on((`a`.`CTI_CALL_DIRECTION` = `ccd`.`CTI_CALL_DIRECTION`))) left join `report_cti_call_direction` `ccd1` on((`a`.`CTI_CC_DIRECTION` = `ccd1`.`CTI_CALL_DIRECTION`))) left join `report_cti_call_direction` `ccd2` on((`a`.`CALL_DIRECTION` = `ccd2`.`CTI_CALL_DIRECTION`))) left join `report_channel_type` `ct` on((`a`.`CTI_CHANNEL_TYPE` = `ct`.`CTI_CHANNEL_TYPE`))) left join `t_sys_organization` `ts` on((`a`.`CONTEXT` = `ts`.`domain`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cti_acd_event`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cti_acd_event`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cti_acd_event` AS select `cti_acd_event`.`ID` AS `ID`,`cti_acd_event`.`EVENT_TIMESTAMP` AS `EVENT_TIMESTAMP`,`cti_acd_event`.`ACTION` AS `ACTION`,`cti_acd_event`.`AGENT_ID` AS `AGENT_ID`,`cti_acd_event`.`AGENT_SESSION_UUID` AS `AGENT_SESSION_UUID`,`cti_acd_event`.`AGENT_CHANNEL_UUID` AS `AGENT_CHANNEL_UUID`,`cti_acd_event`.`AGENT_STATUS` AS `AGENT_STATUS`,`cti_acd_event`.`AGENT_STATE` AS `AGENT_STATE`,`cti_acd_event`.`QUEUE` AS `QUEUE`,`cti_acd_event`.`QUEUE_COUNT` AS `QUEUE_COUNT`,`cti_acd_event`.`MEMBER_UUID` AS `MEMBER_UUID`,`cti_acd_event`.`MEMBER_CHANNEL_UUID` AS `MEMBER_CHANNEL_UUID`,`cti_acd_event`.`MEMBER_CID_NAME` AS `MEMBER_CID_NAME`,`cti_acd_event`.`MEMBER_CID_NUMBER` AS `MEMBER_CID_NUMBER`,`cti_acd_event`.`HANGUP_CAUSE` AS `HANGUP_CAUSE`,`cti_acd_event`.`CANCEL_CAUSE` AS `CANCEL_CAUSE`,`cti_acd_event`.`CTI_CALL_UUID` AS `CTI_CALL_UUID` from `cti_acd_event` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cti_agent_action`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cti_agent_action`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cti_agent_action` AS select `cti_agent_action`.`ID` AS `ID`,`cti_agent_action`.`AGENT_ID` AS `AGENT_ID`,`cti_agent_action`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`cti_agent_action`.`EVENT_TIMESTAMP` AS `EVENT_TIMESTAMP`,`cti_agent_action`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`cti_agent_action`.`OTHER_LEG_UUID` AS `OTHER_LEG_UUID`,`cti_agent_action`.`CLASS` AS `CLASS`,`cti_agent_action`.`METHOD` AS `METHOD`,`cti_agent_action`.`PARAMS` AS `PARAMS`,`cti_agent_action`.`CUR_STATE_NAME` AS `CUR_STATE_NAME`,`cti_agent_action`.`CALL_UUID` AS `CALL_UUID` from `cti_agent_action` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cti_agent_action_name`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cti_agent_action_name`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cti_agent_action_name` AS select `cti_agent_action_name`.`ID` AS `ID`,`cti_agent_action_name`.`METHOD` AS `METHOD`,`cti_agent_action_name`.`ZH_CN` AS `ZH_CN` from `cti_agent_action_name` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cti_agent_session`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cti_agent_session`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cti_agent_session` AS select `cti_agent_session`.`AGENT_ID` AS `AGENT_ID`,`cti_agent_session`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`cti_agent_session`.`AGENT_NAME` AS `AGENT_NAME`,`cti_agent_session`.`ORG_ID` AS `ORG_ID`,`cti_agent_session`.`AGENT_EXT` AS `AGENT_EXT`,`cti_agent_session`.`AGENT_CONTACT` AS `AGENT_CONTACT`,`cti_agent_session`.`WORK_ID` AS `WORK_ID`,`cti_agent_session`.`IS_LEADER` AS `IS_LEADER`,min(`cti_agent_session`.`LOGIN_TIMESTAMP`) AS `LOGIN_TIMESTAMP`,`cti_agent_session`.`LOGOUT_TIMESTAMP` AS `LOGOUT_TIMESTAMP`,`cti_agent_session`.`LOGOUT_STATE` AS `LOGOUT_STATE`,min(`cti_agent_session`.`LOGIN_TIMESTAMP_30M`) AS `LOGIN_TIMESTAMP_30M` from `cti_agent_session` group by `cti_agent_session`.`AGENT_ID`,`cti_agent_session`.`AGENT_SESSION_ID`,`cti_agent_session`.`AGENT_NAME`,`cti_agent_session`.`ORG_ID`,`cti_agent_session`.`AGENT_EXT`,`cti_agent_session`.`AGENT_CONTACT`,`cti_agent_session`.`WORK_ID`,`cti_agent_session`.`IS_LEADER`,`cti_agent_session`.`LOGOUT_TIMESTAMP`,`cti_agent_session`.`LOGOUT_STATE` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cti_agent_state`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cti_agent_state`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cti_agent_state` AS select `cti_agent_state`.`ID` AS `ID`,`cti_agent_state`.`ENTRY_TIMESTAMP` AS `ENTRY_TIMESTAMP`,`cti_agent_state`.`AGENT_ID` AS `AGENT_ID`,`cti_agent_state`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`cti_agent_state`.`NEW_STATE_NAME` AS `NEW_STATE_NAME`,`cti_agent_state`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`cti_agent_state`.`OTHER_LEG_UUID` AS `OTHER_LEG_UUID`,`cti_agent_state`.`SUB_ID` AS `SUB_ID`,`cti_agent_state`.`OLD_STATE_NAME` AS `OLD_STATE_NAME`,`cti_agent_state`.`DURATION` AS `DURATION`,`cti_agent_state`.`CALL_UUID` AS `CALL_UUID`,`cti_agent_state`.`EXIT_TIMESTAMP` AS `EXIT_TIMESTAMP`,`cti_agent_state`.`PRE_REC_ID` AS `PRE_REC_ID` from `cti_agent_state` where (`cti_agent_state`.`OLD_STATE_NAME` <> 'st_pending') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cti_agent_state_name`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cti_agent_state_name`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cti_agent_state_name` AS select `cti_agent_state_name`.`ID` AS `ID`,`cti_agent_state_name`.`STATE` AS `STATE`,`cti_agent_state_name`.`ZH_CN` AS `ZH_CN` from `cti_agent_state_name` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cti_channel`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cti_channel`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cti_channel` AS select `a`.`ORIG_CALLER_NUMBER` AS `ORIG_CALLER_NUMBER`,`a`.`ORIG_CALLEE_NUMBER` AS `ORIG_CALLEE_NUMBER`,`a`.`CONTEXT` AS `CONTEXT`,`a`.`BRIDGED_TIME` AS `BRIDGED_TIME`,`a`.`CHANNEL_NAME` AS `channel_name`,`a`.`PROGRESSSEC` AS `PROGRESSSEC`,`a`.`CALLER_NUMBER` AS `CALLER_NUMBER`,`a`.`CALLEE_NUMBER` AS `CALLEE_NUMBER`,`a`.`CALL_DIRECTION` AS `CALL_DIRECTION`,`a`.`CTI_CALL_DIRECTION` AS `CTI_CALL_DIRECTION`,`a`.`CTI_CC_DIRECTION` AS `CTI_CC_DIRECTION`,`a`.`ACCOUNT_CODE` AS `ACCOUNT_CODE`,`a`.`CTI_CHANNEL_TYPE` AS `CTI_CHANNEL_TYPE`,`a`.`CREATED_TIME` AS `CREATED_TIME`,`a`.`ANSWERED_TIME` AS `ANSWERED_TIME`,`a`.`HANGUP_TIME` AS `HANGUP_TIME`,`a`.`HANGUP_DISPOSITION` AS `HANGUP_DISPOSITION`,`a`.`IS_ORIGINATOR` AS `IS_ORIGINATOR`,`a`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`a`.`CTI_CALL_UUID` AS `CTI_CALL_UUID`,`a`.`DURATION` AS `DURATION`,`a`.`BILLSEC` AS `BILLSEC`,`a`.`ID` AS `id`,`a`.`ANSWERSEC` AS `ANSWERSEC`,`a`.`WAITSEC` AS `WAITSEC`,`a`.`CTI_BRIDGE_AGENT_ACCUM` AS `CTI_BRIDGE_AGENT_ACCUM`,`a`.`CTI_QUEUE_ACCUM` AS `CTI_QUEUE_ACCUM`,`a`.`CTI_BRIDGE_ACCUM` AS `CTI_BRIDGE_ACCUM`,`a`.`OTHER_LEG_UUID` AS `OTHER_LEG_UUID`,`a`.`DESTINATION_NUMBER` AS `DESTINATION_NUMBER`,`a`.`HANGUP_CAUSE` AS `HANGUP_CAUSE` from `cti_channel` `a` where ((`a`.`CREATED_TIME` is not null) and (`a`.`CTI_CHANNEL_TYPE` is not null) and (`a`.`CTI_CALL_UUID` is not null) and (`a`.`CTI_CALL_DIRECTION` is not null)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cti_channel_execute`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cti_channel_execute`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cti_channel_execute` AS select `cti_channel_execute`.`ID` AS `ID`,`cti_channel_execute`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`cti_channel_execute`.`APPLICATION` AS `APPLICATION`,`cti_channel_execute`.`APPLICATION_DATA` AS `APPLICATION_DATA`,`cti_channel_execute`.`APPLICATION_RESPONSE` AS `APPLICATION_RESPONSE`,`cti_channel_execute`.`START_TIME` AS `START_TIME`,`cti_channel_execute`.`COMPLETE_TIME` AS `COMPLETE_TIME`,`cti_channel_execute`.`APPLICATION_UUID` AS `APPLICATION_UUID`,`cti_channel_execute`.`CALL_UUID` AS `CALL_UUID`,`cti_channel_execute`.`CTI_CALL_UUID` AS `CTI_CALL_UUID` from `cti_channel_execute` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cti_fax_files`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cti_fax_files`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cti_fax_files` AS select `cti_fax_files`.`ID` AS `ID`,`cti_fax_files`.`EVENT_TIMESTAMP` AS `EVENT_TIMESTAMP`,`cti_fax_files`.`CHANNEL_NAME` AS `CHANNEL_NAME`,`cti_fax_files`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`cti_fax_files`.`CALL_UUID` AS `CALL_UUID`,`cti_fax_files`.`CTI_CALL_UUID` AS `CTI_CALL_UUID`,`cti_fax_files`.`CALLER_NUMBER` AS `CALLER_NUMBER`,`cti_fax_files`.`CALLEE_NUMBER` AS `CALLEE_NUMBER`,`cti_fax_files`.`CTI_CALL_DIRECTION` AS `CTI_CALL_DIRECTION`,`cti_fax_files`.`AGENT_ID` AS `AGENT_ID`,`cti_fax_files`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`cti_fax_files`.`CC_QUEUE` AS `CC_QUEUE`,`cti_fax_files`.`FAX_FILE_NAME` AS `FAX_FILE_NAME`,`cti_fax_files`.`FAX_SUCCESS` AS `FAX_SUCCESS`,`cti_fax_files`.`FAX_RESULT_CODE` AS `FAX_RESULT_CODE`,`cti_fax_files`.`FAX_RESULT_TEXT` AS `FAX_RESULT_TEXT`,`cti_fax_files`.`FAX_DOCUMENT_TRANSFERRED_PAGES` AS `FAX_DOCUMENT_TRANSFERRED_PAGES`,`cti_fax_files`.`FAX_DOCUMENT_TOTAL_PAGES` AS `FAX_DOCUMENT_TOTAL_PAGES`,`cti_fax_files`.`FAX_IMAGE_RESOLUTION` AS `FAX_IMAGE_RESOLUTION`,`cti_fax_files`.`FAX_IMAGE_SIZE` AS `FAX_IMAGE_SIZE`,`cti_fax_files`.`FAX_TRANSFER_RATE` AS `FAX_TRANSFER_RATE`,`cti_fax_files`.`FAX_DIRECTION` AS `FAX_DIRECTION` from `cti_fax_files` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cti_hangup_cause`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cti_hangup_cause`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cti_hangup_cause` AS select `cti_hangup_cause`.`id` AS `id`,`cti_hangup_cause`.`HANGUP_CAUSE` AS `HANGUP_CAUSE`,`cti_hangup_cause`.`ZH_CN` AS `ZH_CN` from `cti_hangup_cause` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_cti_record_files`
--

/*!50001 DROP VIEW IF EXISTS `v_report_cti_record_files`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_cti_record_files` AS select `cti_record_files`.`ID` AS `ID`,`cti_record_files`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`cti_record_files`.`CTI_CALL_DIRECTION` AS `CTI_CALL_DIRECTION`,`cti_record_files`.`CALL_UUID` AS `CALL_UUID`,`cti_record_files`.`CTI_CALL_UUID` AS `CTI_CALL_UUID`,`cti_record_files`.`CALLER_NUMBER` AS `CALLER_NUMBER`,`cti_record_files`.`CALLEE_NUMBER` AS `CALLEE_NUMBER`,`cti_record_files`.`RECORD_STEREO` AS `RECORD_STEREO`,`cti_record_files`.`READ_CODEC` AS `READ_CODEC`,`cti_record_files`.`READ_RATE` AS `READ_RATE`,`cti_record_files`.`WRITE_CODEC` AS `WRITE_CODEC`,`cti_record_files`.`WRITE_RATE` AS `WRITE_RATE`,`cti_record_files`.`RECORD_FILE_NAME` AS `RECORD_FILE_NAME`,`cti_record_files`.`START_TIME` AS `START_TIME`,`cti_record_files`.`STOP_TIME` AS `STOP_TIME`,`cti_record_files`.`CC_QUEUE` AS `CC_QUEUE`,`cti_record_files`.`AGENT_ID` AS `AGENT_ID`,`cti_record_files`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`cti_record_files`.`CTI_RECORD_TYPE` AS `CTI_RECORD_TYPE`,`cti_record_files`.`ORG_ID` AS `ORG_ID`,`cti_record_files`.`VM_NUMBER` AS `VM_NUMBER`,`cti_record_files`.`URL_PREFIX` AS `URL_PREFIX` from `cti_record_files` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_im_history`
--

/*!50001 DROP VIEW IF EXISTS `v_report_im_history`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_im_history` AS select `cti_im_history`.`TIMESTAMP` AS `timestamp`,`cti_im_history`.`CREATOR` AS `creator`,`cti_im_history`.`TO_ID` AS `to_id`,`cti_im_history`.`TO_NAME` AS `to_name`,'接收' AS `wx_direction`,`cti_im_history`.`FROM_ID` AS `from_id`,`cti_im_history`.`FROM_NAME` AS `from_name`,`cti_im_history`.`SUB_TYPE` AS `sub_type`,`cti_im_history`.`MESSAGE_ID` AS `message_id`,`cti_im_history`.`PAYLOAD` AS `payload`,`cti_im_history`.`AGENT_ID` AS `agent_id`,`cti_im_history`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`cti_im_history`.`URL_HEAD` AS `url_head` from `cti_im_history` where ((`cti_im_history`.`TYPE` = 'weixin') and (`cti_im_history`.`CREATOR` = 'weixin')) union all select `cti_im_history`.`TIMESTAMP` AS `timestamp`,`cti_im_history`.`CREATOR` AS `creator`,`cti_im_history`.`FROM_ID` AS `from_id`,`cti_im_history`.`FROM_NAME` AS `from_name`,'发送' AS `wx_direction`,`cti_im_history`.`TO_ID` AS `to_id`,`cti_im_history`.`TO_NAME` AS `to_name`,`cti_im_history`.`SUB_TYPE` AS `sub_type`,`cti_im_history`.`MESSAGE_ID` AS `message_id`,`cti_im_history`.`PAYLOAD` AS `payload`,`cti_im_history`.`AGENT_ID` AS `agent_id`,`cti_im_history`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`cti_im_history`.`URL_HEAD` AS `url_head` from `cti_im_history` where ((`cti_im_history`.`TYPE` = 'weixin') and ((`cti_im_history`.`CREATOR` = 'agent') or (`cti_im_history`.`CREATOR` = 'ivr') or (`cti_im_history`.`CREATOR` = 'robot'))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_ivr`
--

/*!50001 DROP VIEW IF EXISTS `v_report_ivr`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_ivr` AS select `a`.`ORIG_CALLER_NUMBER` AS `ORIG_CALLER_NUMBER`,`a`.`ORIG_CALLEE_NUMBER` AS `ORIG_CALLEE_NUMBER`,`a`.`CALLER_NUMBER` AS `CALLER_NUMBER`,`a`.`CALLEE_NUMBER` AS `CALLEE_NUMBER`,`a`.`CALL_DIRECTION` AS `CALL_DIRECTION`,`a`.`CTI_CALL_DIRECTION` AS `CTI_CALL_DIRECTION`,`a`.`CTI_CC_DIRECTION` AS `CTI_CC_DIRECTION`,`a`.`DURATION` AS `DURATION`,`a`.`DURATION1` AS `DURATION1`,`a`.`ACCOUNT_CODE` AS `ACCOUNT_CODE`,`a`.`CTI_CHANNEL_TYPE` AS `CTI_CHANNEL_TYPE`,`a`.`CREATED_TIME` AS `CREATED_TIME`,`a`.`ANSWERED_TIME` AS `ANSWERED_TIME`,`a`.`HANGUP_TIME` AS `HANGUP_TIME`,`a`.`HANGUP_DISPOSITION` AS `HANGUP_DISPOSITION`,`a`.`IS_ORIGINATOR` AS `IS_ORIGINATOR`,`a`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`a`.`CTI_CALL_UUID` AS `CTI_CALL_UUID`,`ivr`.`START_TIME` AS `START_TIME`,`ivr`.`COMPLETE_TIME` AS `COMPLETE_TIME`,timestampdiff(SECOND,`ivr`.`START_TIME`,`ivr`.`COMPLETE_TIME`) AS `IVRDURATION`,sec_to_time(timestampdiff(SECOND,`ivr`.`START_TIME`,`ivr`.`COMPLETE_TIME`)) AS `IVRDURATION1` from (`v_report_cti_channel_execute` `ivr` join `v_report_channel` `a`) where ((`ivr`.`APPLICATION` = 'ivr') and (`ivr`.`CALL_UUID` = `a`.`CHANNEL_UUID`)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_record_files`
--

/*!50001 DROP VIEW IF EXISTS `v_report_record_files`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_record_files` AS select `b`.`ID` AS `ID`,`b`.`CHANNEL_UUID` AS `CHANNEL_UUID`,`b`.`CTI_CALL_DIRECTION` AS `CTI_CALL_DIRECTION`,`b`.`CTI_CALL_UUID` AS `CTI_CALL_UUID`,`b`.`CALLER_NUMBER` AS `CALLER_NUMBER`,`b`.`CALLEE_NUMBER` AS `CALLEE_NUMBER`,`b`.`RECORD_FILE_NAME` AS `RECORD_FILE_NAME`,`b`.`START_TIME` AS `START_TIME`,`b`.`STOP_TIME` AS `STOP_TIME`,`b`.`CC_QUEUE` AS `CC_QUEUE`,`b`.`AGENT_ID` AS `AGENT_ID`,`b`.`AGENT_SESSION_ID` AS `AGENT_SESSION_ID`,`b`.`ORG_ID` AS `ORG_ID`,`b`.`VM_NUMBER` AS `VM_NUMBER`,`b`.`CTI_RECORD_TYPE` AS `CTI_RECORD_TYPE`,`b`.`URL_PREFIX` AS `URL_PREFIX`,`a`.`RECORD_TYPE_CHINESE` AS `CTI_RECORD_TYPE1`,`c`.`AGENT_NAME` AS `AGENT_NAME`,`c`.`AGENT_EXT` AS `AGENT_EXT`,`c`.`WORK_ID` AS `WORK_ID`,`k`.`CTI_CALL_DIRECTION_CHINESE` AS `DIRECTION1`,concat(`b`.`URL_PREFIX`,`b`.`RECORD_FILE_NAME`) AS `rf` from (((`v_report_cti_record_files` `b` left join `report_record_type` `a` on((`b`.`CTI_RECORD_TYPE` = `a`.`RECORD_TYPE`))) left join `v_report_cti_agent_session` `c` on(((`b`.`AGENT_ID` = `c`.`AGENT_ID`) and (`b`.`AGENT_SESSION_ID` = `c`.`AGENT_SESSION_ID`)))) left join `report_cti_call_direction` `k` on((`b`.`CTI_CALL_DIRECTION` = `k`.`CTI_CALL_DIRECTION`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_service`
--

/*!50001 DROP VIEW IF EXISTS `v_report_service`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_service` AS select `c`.`SelectName` AS `SelectName`,count(`c`.`SelectValue`) AS `PJcount`,date_format(`c`.`RecordTime`,'%Y-%m-%d %H ') AS `hour` from `servicedc` `c` group by date_format(`c`.`RecordTime`,'%Y-%m-%d %H '),`c`.`SelectName` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_report_service1`
--

/*!50001 DROP VIEW IF EXISTS `v_report_service1`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_report_service1` AS select count(`c`.`SelectValue`) AS `totalRecord`,date_format(`c`.`RecordTime`,'%Y-%m-%d %H ') AS `hour` from `servicedc` `c` group by date_format(`c`.`RecordTime`,'%Y-%m-%d %H ') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-04-26 11:08:51
